pristine:0000005190-18a27085dd238991e1acab3e1a98bb346d96a5ba008b81a49856a5e302c05e5f
Starting with inventory:
0000003977-f702ec875bed9018bc5ac13c4c885f36b7768e803a2121b8a6189a53d338ad75
[TAG release_0_7_3
Daniel Barlow <dan@telent.net>**20060328002248] 
hash: 0000000143-a3dab4f93372a52450a49f7939ddeb4a71b591027294c737ce1af2bd153cda51
[rydis-fix-open-default-display-screen
rydis@cd.chalmers.se**20060331124242
 Fixes open-default-display to set the default screen of the display to the
 default screen from get-default-screen
] 
hash: 0000000495-4315d868a7606587dee5d5d6b2cf37852411fbac3e7522f1eb7025743d275a6c
[minimally-refactor-buffer-readers-and-writers
csr21@cantab.net**20061222182215] 
hash: 0000034770-e38df98cd8b0d09ddeb27ec4bf3a46938948df8ec55d81c8010ba0c7b9c5e0bf
[big-request-extension
csr21@cantab.net**20070101125353
 
 Implement the protocol portion of the BIG-REQUESTS extension, and the 
 function for clients to query the maximum extended request length.
 
 The extension is as yet unused in the protocol implementation of other 
 requests.
] 
hash: 0000002222-b6e2aa63cfb56c640e965e38026acf28d4b3ec01145759ce0d692c3ee27fd82c
[begin-documenting-big-requests
csr21@cantab.net**20070101173416] 
hash: 0000001072-0f32dc29bbb82b18b3882b08acc58dd610487faebd2e9a1931948cd4b885102d
[render-composite-glyphs-254-glyph-limit
csr21@cantab.net**20070103114740
 
 The RenderCompositeGlyphs{8,16,32} requests encode their glyphs not 
 quite as straightforwardly as one big long sequence: instead, they come 
 in chunks of up to 254 (a length of 255 indicates a change of glyphset).  
 Finesse the change of glyphset issue, and fix RENDER-COMPOSITE-GLYPHS 
 for longer sequences of glyphs.
] 
hash: 0000003165-dd958117bf5751ba470839c4fbcba78f17822da9c28d6836e1d3cb6a3d9e5e68
[clisp-support
csr21@cam.ac.uk**20070108114445
 
 CLISP support, from Evgeny M. Zubok on portable-clx 2007-01-07.
] 
hash: 0000006520-dd39bc2f7e264dabb2ede6599ec7ddef12121621ed7f3628f0210e4dd65b0f29
[fix-paren-breakage-from-clisp-support-patch
csr21@cam.ac.uk**20070108161209] 
hash: 0000000263-3db2a088e2feb8d6e4dab00d6b36e82474f2caef55688df8c274c9b74938f4de
[fix-clisp-open-x-stream
csr21@cam.ac.uk**20070109092939
 
 From Evgeny M. Zubok on portable-clx.
] 
hash: 0000000417-d235342f2df79a1c83160a48591c24ebd6022da3796a3fa2f2d85fc7abf36568
[fix-get-keyboard-control-autorepeats-offset
csr21@cam.ac.uk**20070116120743
 
 The offset for the auto-repeats field in the GetKeyboardControl request
 was wrong, probably from a transcription error (32 was the size, not the
 position).
] 
hash: 0000000335-d443af668832d5343aedd7e4f4cb64faf85909daf2d41eaecc2af56a1ba527c8
[fix-render-composite-buffer-overflow
csr21@cam.ac.uk**20070117145056
 
 Whoops.  byte count / word length confusion led to the wrong amount of space
 being requested of the buffer, with consequent failures in the CLIM Debugger
 when run with freetype.
] 
hash: 0000000478-d58b330dbd81fc5a84d7f3d0a005d942087b9adaa53ef342c0ad1ae279e39594
[comment fix
csr21@cam.ac.uk**20070807091026] 
hash: 0000000213-13106f6a8b103cea18787747adb96ddd1309b8610a57230b339f6dd7a4818767
[make event-key type extensible
csr21@cam.ac.uk**20070807091111
 
 Typechecking lisps mean that for every new implemented extension, the type
 EVENT-KEY in the main body of CLX needs alteration.  Instead, define a
 suitable function for use as a SATISFIES checker, and use it in the type and
 in the code.
] 
hash: 0000001949-bc17d8e6677398ac3098adefb1c556a49d5cd41a3172baa7e46cd3f818c30d63
[use write-sequence for buffer-write-default in sbcl
csr21@cam.ac.uk**20070807092756
 
 Since sbcl-0.9 or so, there has been a check to avoid the useless lseek() calls
 on dual-channel streams (including socket streams), so write-sequence
 should be fine for performance.
] 
hash: 0000000869-7d99cc726414453b52086c53a882f958a700f758d60acf43edde5774933e4c8a
[compile-with-*rdff*-double-float
csr21@cam.ac.uk**20071123110204
 
 From Stelian Ionescu (fe[nl]ix on #lisp IRC).
] 
hash: 0000000261-e47fef438c5b4cfc43e9a8f22d3aa22740ef3bf2eb10ad153baa5ae999ae79e6
[render clip mask fix
csr21@cantab.net**20080120181118
 
 The code for adjusting the client's view of the server's clip mask on 
 pictures would erroneously transfer information the wrong way.
 
 Found by Andy Hefner
] 
hash: 0000000582-b8e29834edb0c50f25f73afb2679dd1f906b969f5da62fe2798716dc43a08eed
[pict-ops update to protocol version 0.10
csr21@cantab.net**20080601120904
 
 From Andy Hefner.
] 
hash: 0000005259-3bb0b34881cb847d9b339fe4e73405021cc397cd1a1b72e55d4d8ef48aec39e3
[launchd-darwin-support
csr21@cantab.net**20080622175327
 
 From Rudi Schlatte
] 
hash: 0000002092-62389651524718bb54fe68bd71bdd12bf6b50d57bc9a549c5715ab82e72b2f77
[Support new-style SBCL stack allocation control
Nikodemus Siivola <nikodemus@random-state.net>**20080801110016] 
hash: 0000000876-39d82af461505dd8c423114f4a5df3de3c604f20872d73fd3cc9a3c1bcd067d4
[lock-around-resource-id-management
csr21@cantab.net**20080822060143
 
 Patch from Andy Hefner on mcclim-devel
] 
hash: 0000002654-d27a1673409dea2ec836c9a1ef568fc3f26ca320292beda4c4ea02cec62994d0
[resource-id management
csr21@cantab.net**20080824173713
 
 Based on a patch from Andy Hefner: pathological programs can cause the 
 resource ID counter to wrap, so we need to keep track of all resource 
 IDs in use, not just those which have cache entries.
] 
hash: 0000001525-a6b5acf08db6dc23390e095baca3819ea03b4c188f7690cdab56426b24050f94
[cache only one's own resource IDs
csr21@cantab.net**20080824173842
 
 Should fix the problem described by Shawn Betts on sbcl-devel 
 2008-07-11 (and possibly also the one on portable-clx 2008-07-10).  
 Analysis on clisp-devel around the same dates, too.
] 
hash: 0000001051-19a9dd2fa0faa087b251e0ead94171f23ead0017ab7d68964a180720867b1198
[always return object from save-id
csr21@cantab.net**20080826211255
 
 Whoops; the previous change broke resources from other clients entirely.  
 Spotted while testing McCLIM's highlight and paste.
] 
hash: 0000000382-2c6992fd350fb3f33c08fb9278a32aaa590186573ed701d41adb8ab01c78ced3
[equality comparison for new uncached IDs
c.rhodes@gold.ac.uk**20081006120600
 
 Patch from Shawn <sabetts@gmail.com>
] 
hash: 0000001438-c700bcd9b55dee6a434cb0bbf13e25fbb43d729f20e84cbcd6da67e4e848447b
[don't need colormap to get window visual info
c.rhodes@gold.ac.uk**20081008095652
 
 We can go directly to window-visual-info.  It might be that implementing 
 the non-:true-color branch of FIND-WINDOW-PICTURE-FORMAT will need the
 COLORMAP; patches subsequent to this one will probably help that out.
] 
hash: 0000000456-8ff07ca206a6aa68595b23cca3f331eb2645f59438f9cc644f21a8b10bbc3280
[colormap / cacheing interaction fixes
c.rhodes@gold.ac.uk**20081008095922
 
 Formally, we can't cache colormaps of other clients, or the server; this 
 means that when we look up a colormap, we will usually be creating one.
 
 That means that we can't rely on the only colormap in town being EQL to 
 the default colormap, which has its visual-info slot already filled in; 
 instead, when we lookup a colormap from a window, if its visual-info is 
 not filled in, set it to the window's visual-info.
 
 [ COLORMAP-VISUAL-INFO is exported from XLIB but not documented in the 
   CLX manual.  It might be ripe for non-exporting, particularly given 
   that I can't find any internet-accessible code which uses it.  This 
   hole was noted from its (unnecessary) use in xrender.lisp ]
] 
hash: 0000001168-9759e3c449d73b625f435488f0f1a7a55f5c9bfb70ad7f7952932f335ef28b8e
[mumble-equal microoptimization
c.rhodes@gold.ac.uk**20081008100308
 
 In WINDOW-EQUAL and friends, EQL arguments imply EQUAL.
] 
hash: 0000000488-8c8af7690400b0ce339eef37925069ff6f98b2897d466b5b6b4e6f1aa55c4644
[define pad32 accessor (useful in xtest requests)
c.rhodes@gold.ac.uk**20081030152235] 
hash: 0000000241-feb1ef59832805aecf1a902cdf0963f0c261e92087cc16858ff28161b0c5847b
[xtest extension implementation
c.rhodes@gold.ac.uk**20081030152321
 
 From Lionel Flandrin <simias.n@gmail.com>, motivated by stumpwm 
 functionality discussed in message <86hc9p271a.fsf@simias.hd.free.fr>
 on stumpwm-devel (2008-08-13, "XTest extension support for 
 portable-clx")
] 
hash: 0000005187-9b4337b665d7877587492f0451e41b0d2f7ef799bac0e1126acae15a1161ad1c
[robustify get-wm-class
c.rhodes@gold.ac.uk**20081030154635
 
 Problem and test code from Shawn Betts <sabetts@gmail.com>
] 
hash: 0000000436-42400c83ee264441fef352b2a4a6a0c4c5bac82a12cacc12abde010cb745e736
[render-trapezoids-1 mask-format is optional
Andy Hefner <ahefner@gmail.com>**20090419194540
 Ignore-this: 35492c84fb0d6aeff4ba7148ed2f0aaf
] 
hash: 0000000449-15b007ec65b428edbd05a16de02d668606a226cf6cb5627c427fe2d405308160
[translate-default-and-nil-font
csr21@cantab.net**20090420170827
 
 As noted on portable-clx some 2 years ago, using the default gcontext
 causes CLX to hang waiting for input that will never come.  The change that
 caused this dates from February 2003, when the default translate function
 was made to query the incoming font for its min- and max-char; the default
 font for a GC only has a weird implicit as-yet-unopened font, and so the
 query will turn into a server roundtrip, which won't happen properly within
 a with-buffer-flush-inhibited.
 
 Do two things: make the default translate function robust to NIL as a font
 name (which the documentation explicitly says is legal) and don't create
 the proxy font object within the draw-glyphs family, passing NIL instead.
] 
hash: 0000002348-caf6bcdc56b1d7b5ca115b027aa5463200caab4519655bb05896f9258b00b4b0
[partial mit-screen-saver support
csr21@cantab.net**20090420190352
 
 From Istvan Marko, believe it or not from 2005.  *sigh*.
] 
hash: 0000003146-dd5f4bcfbb77f74c8737406e5e0c5e6e062e7576d973b88537e715a95e5e9346
[Support for the XINERAMA extension
csr21@cantab.net**20090510073252
 
 Contributed by Julian Stecklina
] 
hash: 0000003261-5d55f753974cf5dab39132100e686226387616550dc969cb07e273192bfc82ef
