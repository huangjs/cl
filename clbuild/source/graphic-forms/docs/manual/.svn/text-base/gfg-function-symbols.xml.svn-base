<?xml version="1.0"?>
<!--
    gfg-function-symbols.xml

    Copyright (c) 2007, Jack D. Unrue
-->

<symbols name="gfg">

  <!-- FUNCTIONS -->

  <function name="icon-bundle-length">
    <syntax>
      <arguments>
        <argument name="icon-bundle">
          <description>
            The <reftopic>gfg:icon-bundle</reftopic> whose length is to
            be returned.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>integer</refclhs>
      </return>
    </syntax>
    <description>
      Returns the number of images in <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:icon-image-ref</reftopic>
      <reftopic>gfg:push-icon-image</reftopic>
      <reftopic>gfg:image</reftopic>
    </seealso>
  </function>

  <function name="push-icon-image">
    <syntax>
      <arguments>
        <argument name="image">
          <description>
            The <reftopic>gfg:image</reftopic> being added to <arg1/>.
          </description>
        </argument>
        <argument name="icon-bundle">
          <description>
            The <reftopic>gfg:icon-bundle</reftopic> taking ownership of
            <arg0/>.
          </description>
        </argument>
        <notarg name="&amp;optional"/>
        <argument name="point">
          <description>
            The <reftopic>gfs:point</reftopic> specifying the location of
            a pixel within <arg0/> whose color will be used to compute a
            transparency mask. By default, the pixel at (0, 0) will be used.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfg:icon-bundle</reftopic>
      </return>
    </syntax>
    <description>
      Use this function to add a new <reftopic>gfg:image</reftopic> to
      <arg1/> (which assumes ownership of <arg0/>). 
    </description>
    <seealso>
      <reftopic>gfg:icon-image-ref</reftopic>
      <reftopic>gfg:icon-bundle-length</reftopic>
    </seealso>
  </function>

  <function name="icon-image-ref">
    <syntax with-setf="t">
      <arguments>
        <argument name="icon-bundle">
          <description>
            The <reftopic>gfg:icon-bundle</reftopic> from (into) which
            a <reftopic>gfg:image</reftopic> is to be retrieved (set).
          </description>
        </argument>
        <argument name="subscript">
          <description>
            Either a zero-based integer subscript, or one of the following
            keyword symbols:
            <enum>
              <argument name=":large">
                <description>
                  Selects the largest image in <arg0/>.
                </description>
              </argument>
              <argument name=":small">
                <description>
                  Selects the smallest image in <arg0/>.
                </description>
              </argument>
            </enum>
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfg:image</reftopic>
      </return>
    </syntax>
    <description>
      <para role="normal">
        This function allows images within <arg0/> to be retrieved or
        set via a subscript.
      </para>
      <para role="normal">
        Note: there are actually four icon sizes that Windows defines
        for use in various contexts. A future release of Graphic-Forms
        will add keywords to better distinguish amongst all four, and
        to help ensure selection of the appropriate size. 
      </para>
    </description>
    <seealso>
      <reftopic>gfg:icon-bundle-length</reftopic>
      <reftopic>gfg:push-icon-image</reftopic>
    </seealso>
  </function>

  <function name="make-font-data">
    <syntax>
      <arguments>
        <argument name=":char-set">
          <description>
            A <reftopic>character sets</reftopic> constant value.
          </description>
        </argument>
        <notarg name="integer"/>
        <argument name=":face-name">
          <description>
            A <refclhs>string</refclhs> representing a font face name, such
            as "Times New Roman".
          </description>
        </argument>
        <notarg name="string"/>
        <argument name=":point-size">
          <description>
            An <refclhs>integer</refclhs> value representing a font point
            size. The value 0 is a special instruction to the font mapper to
            return a font in the default size corresponding to the specified
            <arg0/> and <arg3/> values.
          </description>
        </argument>
        <notarg name="integer"/>
        <argument name=":style">
          <description>
            A <refclhs>list</refclhs> of keyword symbols that further specify
            attributes of the desired font:
            <enum>
              <argument name=":bold">
                <description>weight, see also :normal</description>
              </argument>
              <argument name=":fixed">
                <description>pitch, see also :variable</description>
              </argument>
              <argument name=":italic">
                <description></description>
              </argument>
              <argument name=":normal">
                <description>weight, see also :bold</description>
              </argument>
              <argument name=":outline">
                <description>precision, see also :truetype-only</description>
              </argument>
              <argument name=":strikeout">
                <description></description>
              </argument>
              <argument name=":truetype-only">
                <description>precision, see also :outline</description>
              </argument>
              <argument name=":underline">
                <description></description>
              </argument>
              <argument name=":variable">
                <description>pitch, see also :fixed</description>
              </argument>
            </enum>
          </description>
        </argument>
        <notarg name="list"/>
      </arguments>
      <return>
        <reftopic>gfg:font-data</reftopic>
      </return>
    </syntax>
    <description>
      Returns a new <reftopic>gfg:font-data</reftopic>.
    </description>
    <seealso>
      <reftopic>gfg:copy-font-data</reftopic>
      <reftopic>gfg:font</reftopic>
    </seealso>
  </function>

  <function name="copy-font-data">
    <syntax>
      <arguments>
        <argument name="font-data">
          <description>
            The <reftopic>gfg:font-data</reftopic> structure to be copied.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic label="new font-data">gfg:font-data</reftopic>
      </return>
    </syntax>
    <description>
      Returns a new <reftopic>gfg:font-data</reftopic> whose slot values
      were copied from <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:make-font-data</reftopic>
      <reftopic>gfg:font</reftopic>
    </seealso>
  </function>

  <function name="make-font-metrics">
    <syntax>
      <arguments>
        <argument name=":ascent">
          <description>
            An <refclhs>integer</refclhs> specifying units above the character
            baseline.
          </description>
        </argument>
        <notarg name="integer"/>
        <argument name=":avg-char-width">
          <description>
            An <refclhs>integer</refclhs> specifying the average width of
            characters. Does not include overhang required for bold or italic.
          </description>
        </argument>
        <notarg name="integer"/>
        <argument name=":descent">
          <description>
            An <refclhs>integer</refclhs> specifying units below the
            character baseline.
          </description>
        </argument>
        <notarg name="integer"/>
        <argument name=":leading">
          <description>
            An <refclhs>integer</refclhs> specifying the amount of extra space
            added between rows of text.
          </description>
        </argument>
        <notarg name="integer"/>
        <argument name=":max-char-width">
          <description>
            An <refclhs>integer</refclhs> specifying the width of the widest
            character in the font.
          </description>
        </argument>
        <notarg name="integer"/>
      </arguments>
      <return>
        <reftopic label="new font-metrics">gfg:font-metrics</reftopic>
      </return>
    </syntax>
    <description>
      Returns a new <reftopic>gfg:font-metrics</reftopic> object.
    </description>
    <seealso>
      <reftopic>gfg:copy-font-metrics</reftopic>
      <reftopic>gfg:font</reftopic>
      <reftopic>gfg:metrics</reftopic>
    </seealso>
  </function>

  <function name="copy-font-metrics">
    <syntax>
      <arguments>
        <argument name="font-metrics">
          <description>
            The <reftopic>gfg:font-metrics</reftopic> structure to be copied.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic label="new font-metrics">gfg:font-metrics</reftopic>
      </return>
    </syntax>
    <description>
      Returns a new <reftopic>gfg:font-metrics</reftopic> whose slot values
      were copied from <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:make-font-metrics</reftopic>
      <reftopic>gfg:font</reftopic>
      <reftopic>gfg:metrics</reftopic>
    </seealso>
  </function>

  <function name="make-color">
    <syntax>
      <arguments>
        <argument name=":blue">
          <description>
            An <refclhs>integer</refclhs> specifying the blue color component.
          </description>
        </argument>
        <notarg name="integer"/>
        <argument name=":green">
          <description>
            An <refclhs>integer</refclhs> specifying the green color component.
          </description>
        </argument>
        <notarg name="integer"/>
        <argument name=":red">
          <description>
            An <refclhs>integer</refclhs> specifying the red color component.
          </description>
        </argument>
        <notarg name="integer"/>
      </arguments>
      <return>
        <reftopic>gfg:color</reftopic>
      </return>
    </syntax>
    <description>
      Returns a new <reftopic>gfg:color</reftopic>. Note that all color component
      values are specified in the range 0 - 255.
    </description>
    <seealso>
      <reftopic>gfg:copy-color</reftopic>
    </seealso>
  </function>

  <function name="copy-color">
    <syntax>
      <arguments>
        <argument name="color">
          <description>
            The <reftopic>gfg:color</reftopic> structure to be copied.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic label="new color">gfg:color</reftopic>
      </return>
    </syntax>
    <description>
      Returns a new <reftopic>gfg:color</reftopic> whose blue, green, and
      red values were copied from <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:make-color</reftopic>
    </seealso>
  </function>

  <function name="color-blue">
    <syntax with-setf="t">
      <arguments>
        <argument name="color">
          <description>
            The <reftopic>gfg:color</reftopic> object whose blue component is
            to be queried.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>integer</refclhs>
      </return>
    </syntax>
    <description>
      Returns (sets) the blue component of <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:color-green</reftopic>
      <reftopic>gfg:color-red</reftopic>
      <reftopic>gfg:make-color</reftopic>
    </seealso>
  </function>

  <function name="color-green">
    <syntax with-setf="t">
      <arguments>
        <argument name="color">
          <description>
            The <reftopic>gfg:color</reftopic> object whose green component is
            to be queried.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>integer</refclhs>
      </return>
    </syntax>
    <description>
      Returns (sets) the green component of <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:color-red</reftopic>
      <reftopic>gfg:color-blue</reftopic>
      <reftopic>gfg:make-color</reftopic>
    </seealso>
  </function>

  <function name="color-red">
    <syntax with-setf="t">
      <arguments>
        <argument name="color">
          <description>
            The <reftopic>gfg:color</reftopic> object whose red component is
            to be queried.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>integer</refclhs>
      </return>
    </syntax>
    <description>
      Returns (sets) the red component of <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:color-green</reftopic>
      <reftopic>gfg:color-blue</reftopic>
      <reftopic>gfg:make-color</reftopic>
    </seealso>
  </function>

  <!-- GENERIC FUNCTIONS -->

  <generic-function name="clear">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="color">
          <description>
            The <reftopic>gfg:color</reftopic> with which to fill the
            window associated with <arg0/>.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Fills the window associated with <arg0/> using <arg1/>.
    </description>
    <seealso>
      <reftopic>colors</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-arc">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            A bounding <reftopic>gfs:rectangle</reftopic> for an ellipse
            from which the rendered arc is obtained.
          </description>
        </argument>
        <argument name="start-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the beginning of the
            rendered arc.
          </description>
        </argument>
        <argument name="end-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the end of the
            rendered arc.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws an arc whose curve is formed by the ellipse bound by <arg1/>, in
      a counter-clockwise direction from <arg2/> where it intersects a radial
      originating at the center of <arg1/>. The arc ends at <arg3/> where it
      intersects another radial also originating at the center of <arg1/>.
      If <arg2/> and <arg3/> are the same, a complete ellipse is drawn.
    </description>
    <seealso>
      <reftopic>colors</reftopic>
      <reftopic>gfg:draw-pie-wedge</reftopic>
      <reftopic>gfg:draw-filled-pie-wedge</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:miter-limit</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-image">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="image">
          <description>
            A <reftopic>gfg:image</reftopic> to be drawn.
          </description>
        </argument>
        <argument name="point">
          <description>
            A <reftopic>gfs:point</reftopic> specifying the location of the
            upper-left corner of <arg1/>.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      This function draws <arg1/> with its upper-left corner positioned
      at <arg2/> in the drawing surface's coordinate system.
    </description>
  </generic-function>

  <generic-function name="draw-bezier">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="start-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the beginning of the
            rendered arc.
          </description>
        </argument>
        <argument name="end-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the end of the
            rendered arc.
          </description>
        </argument>
        <argument name="ctrl-point-1">
          <description>
            The first control <reftopic>gfs:point</reftopic>.
          </description>
        </argument>
        <argument name="ctrl-point-2">
          <description>
            The second control <reftopic>gfs:point</reftopic>.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a B&#xE9;zier curve between <arg1/> and <arg2/> using
      <arg3/> and <arg4/> as control points.
    </description>
    <seealso>
      <reftopic>gfg:draw-poly-bezier</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:miter-limit</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-poly-bezier">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the the starting
            location of the curves.
          </description>
        </argument>
        <argument name="list">
          <description>
            A <refclhs>list</refclhs> of 3-element sublists, where (first sublist)
            is the current segment's endpoint, and (second sublist) and
            (third sublist) are the segments control points.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a series of connected B&#xE9;zier curves starting at <arg1/>.
    </description>
    <seealso>
      <reftopic>gfg:draw-bezier</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:miter-limit</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-chord">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            A bounding <reftopic>gfs:rectangle</reftopic> for an ellipse
            from which the rendered chord is obtained.
          </description>
        </argument>
        <argument name="start-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the beginning of the
            rendered arc.
          </description>
        </argument>
        <argument name="end-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the end of the
            rendered arc.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a closed shape comprised of:
      <itemizedlist mark="bullet" spacing="compact">
        <listitem>
          an arc whose curve is formed by the ellipse bound by <arg1/>, in
          a counter-clockwise direction from <arg2/> where it intersects a
          radial originating at the center of <arg1/>. The arc ends at
          <arg3/>, where it intersects another radial also originating at
          the center of <arg1/>
        </listitem>
        <listitem>
          a line drawn between <arg2/> and <arg3/>
        </listitem>
      </itemizedlist>
      <para role="normal">
        If <arg2/> and <arg3/> are the same, a complete ellipse is drawn.
      </para>
    </description>
    <seealso>
      <reftopic>gfg:draw-filled-chord</reftopic>
      <reftopic>gfg:draw-pie-wedge</reftopic>
      <reftopic>gfg:draw-filled-pie-wedge</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-filled-chord">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            A bounding <reftopic>gfs:rectangle</reftopic> for an ellipse
            from which the rendered chord is obtained.
          </description>
        </argument>
        <argument name="start-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the beginning of the
            rendered arc.
          </description>
        </argument>
        <argument name="end-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the end of the
            rendered arc.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Fills a closed shape comprised of:
      <itemizedlist mark="bullet" spacing="compact">
        <listitem>
          an arc whose curve is formed by the ellipse bound by <arg1/>, in
          a counter-clockwise direction from <arg2/> where it intersects a
          radial originating at the center of <arg1/>. The arc ends at
          <arg3/>, where it intersects another radial also originating at
          the center of <arg1/>
        </listitem>
        <listitem>
          a line drawn between <arg2/> and <arg3/>
        </listitem>
      </itemizedlist>
      <para role="normal">
        with the current background color. If <arg2/> and <arg3/> are the
        same, a complete ellipse is drawn.
      </para>
    </description>
    <seealso>
      <reftopic>gfg:draw-chord</reftopic>
      <reftopic>gfg:draw-pie-wedge</reftopic>
      <reftopic>gfg:draw-filled-pie-wedge</reftopic>
      <reftopic>gfg:background-color</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-pie-wedge">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            A bounding <reftopic>gfs:rectangle</reftopic> for an ellipse
            from which the arc component of the wedge is obtained.
          </description>
        </argument>
        <argument name="start-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the beginning of the
            rendered arc.
          </description>
        </argument>
        <argument name="end-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the end of the
            rendered arc.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a pie-shaped wedge whose curve is formed by the ellipse bound
      by <arg1/>, in a counter-clockwise direction from <arg2/> to <arg3/>.
    </description>
    <seealso>
      <reftopic>gfg:draw-chord</reftopic>
      <reftopic>gfg:draw-filled-chord</reftopic>
      <reftopic>gfg:draw-filled-pie-wedge</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-filled-pie-wedge">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            A bounding <reftopic>gfs:rectangle</reftopic> for an ellipse
            from which the arc component of the wedge is obtained.
          </description>
        </argument>
        <argument name="start-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the beginning of the
            rendered arc.
          </description>
        </argument>
        <argument name="end-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the end of the
            rendered arc.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Fills a pie-shaped wedge whose curve is formed by the ellipse bound
      by <arg1/>, in a counter-clockwise direction from <arg2/> to <arg3/>.
      The current background color is used for the interior.
    </description>
    <seealso>
      <reftopic>gfg:draw-filled-chord</reftopic>
      <reftopic>gfg:draw-filled-pie-wedge</reftopic>
      <reftopic>gfg:background-color</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-point">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="point">
          <description>
            A <reftopic>gfs:point</reftopic> identifying the pixel location.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Sets a single pixel at <arg1/>.
    </description>
    <seealso>
      <reftopic>gfg:foreground-color</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-ellipse">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            A bounding <reftopic>gfs:rectangle</reftopic> for an ellipse
            from which the rendered chord is obtained.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws an ellipse bounded by <arg1/>.
    </description>
    <seealso>
      <reftopic>gfg:draw-filled-ellipse</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-filled-ellipse">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            A bounding <reftopic>gfs:rectangle</reftopic> for an ellipse
            from which the rendered chord is obtained.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Fills an ellipse bounded by <arg1/> with the current background color.
    </description>
    <seealso>
      <reftopic>gfg:draw-ellipse</reftopic>
      <reftopic>gfg:background-color</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-rectangle">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            The <reftopic>gfs:rectangle</reftopic> to be drawn.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a rectangle.
    </description>
    <seealso>
      <reftopic>gfg:draw-polygon</reftopic>
      <reftopic>gfg:draw-rounded-rectangle</reftopic>
      <reftopic>gfg:draw-filled-rectangle</reftopic>
      <reftopic>gfg:draw-filled-rounded-rectangle</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-rounded-rectangle">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            The <reftopic>gfs:rectangle</reftopic> to be drawn.
          </description>
        </argument>
        <argument name="size">
          <description>
            The <reftopic>gfs:size</reftopic> of an ellipse determining
            the arc used for rounding the rectangle's corners.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a rectangle with rounded corners.
    </description>
    <seealso>
      <reftopic>gfg:draw-polygon</reftopic>
      <reftopic>gfg:draw-rectangle</reftopic>
      <reftopic>gfg:draw-filled-rectangle</reftopic>
      <reftopic>gfg:draw-filled-rounded-rectangle</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-filled-rounded-rectangle">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            The <reftopic>gfs:rectangle</reftopic> to be drawn.
          </description>
        </argument>
        <argument name="size">
          <description>
            The <reftopic>gfs:size</reftopic> of an ellipse determining
            the arc used for rounding the rectangle's corners.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Fills a rectangle having rounded corners with the current
      background color.
    </description>
    <seealso>
      <reftopic>gfg:draw-polygon</reftopic>
      <reftopic>gfg:draw-rectangle</reftopic>
      <reftopic>gfg:draw-rounded-rectangle</reftopic>
      <reftopic>gfg:draw-filled-rectangle</reftopic>
      <reftopic>gfg:draw-filled-rounded-rectangle</reftopic>
      <reftopic>gfg:background-color</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-filled-rectangle">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="rectangle">
          <description>
            The <reftopic>gfs:rectangle</reftopic> to be filled.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Fills a rectangle with the current background color.
    </description>
    <seealso>
      <reftopic>gfg:draw-polygon</reftopic>
      <reftopic>gfg:draw-rectangle</reftopic>
      <reftopic>gfg:draw-filled-rectangle</reftopic>
      <reftopic>gfg:draw-filled-rounded-rectangle</reftopic>
      <reftopic>gfg:background-color</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-line">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="start-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the beginning of the
            line.
          </description>
        </argument>
        <argument name="end-point">
          <description>
            A <reftopic>gfs:point</reftopic> indicating the end of the
            line.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a line between <arg1/> and <arg2/>.
    </description>
    <seealso>
      <reftopic>gfg:draw-polyline</reftopic>
      <reftopic>gfg:draw-polygon</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:miter-limit</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-polygon">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="list">
          <description>
            A <refclhs>list</refclhs> of <reftopic>gfs:point</reftopic>s
            defining the polygon's line segments.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a series of connected line segments determined by <arg1/>. The
      last point in <arg1/> is connected with the first. If <arg1/> contains
      less than three points, then this function does nothing.
    </description>
    <seealso>
      <reftopic>gfg:draw-line</reftopic>
      <reftopic>gfg:draw-polyline</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-filled-polygon">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="list">
          <description>
            A <refclhs>list</refclhs> of <reftopic>gfs:point</reftopic>s
            defining the polygon's line segments.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Fills a closed shape defined by a series of connected line segments
      determined by <arg1/>. The last point in <arg1/> is connected with
      the first. The current background color is used. If <arg1/> contains
      less than three points, then this function does nothing.
    </description>
    <seealso>
      <reftopic>gfg:draw-filled-rectangle</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:background-color</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-polyline">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="list">
          <description>
            A <refclhs>list</refclhs> of <reftopic>gfs:point</reftopic>s
            defining line segments.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws a series of connected line segments (the last point in
      <arg1/> is not connected to the first). If <arg1/> contains less than
      two points, then this function does nothing.
    </description>
    <seealso>
      <reftopic>gfg:draw-line</reftopic>
      <reftopic>gfg:draw-polygon</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:miter-limit</reftopic>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="draw-text">
    <syntax>
      <arguments>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> on which to draw.
          </description>
        </argument>
        <argument name="string">
          <description>
            A <refclhs>string</refclhs> to be rendered, which may contain
            characters that will be interpreted specially; see <arg3/>.
          </description>
        </argument>
        <argument name="point">
          <description>
            A <reftopic>gfs:point</reftopic> specifying the upper-left
            corner of the rectangle bounding <arg1/>.
          </description>
        </argument>
        <notarg name="&amp;optional"/>
        <argument name="style">
          <description>
            A <refclhs>list</refclhs> containing one or more of the following
            keyword symbols:
            <enum>
              <argument name=":mnemonic">
                <description>
                  Underline the mnemonic character, specified in <arg1/> with
                  an ampersand.
                </description>
              </argument>
              <argument name=":tab">
                <description>
                  Expand tabs embedded in <arg1/>; see <arg4/>.
                </description>
              </argument>
              <argument name=":transparent">
                <description>
                  The background of the drawing area where <arg1/> will be
                  rendered is preserved.
                </description>
              </argument>
            </enum>
          </description>
        </argument>
        <argument name="tab-width">
          <description>
            A positive <refclhs>integer</refclhs> specifying the number of
            pixels into which tabs should be expanded; the default is 8.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>undefined</emphasis>
      </return>
    </syntax>
    <description>
      Draws <arg1/>, optionally expanding tabs and underlining the mnemonic
      character.
    </description>
    <seealso>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:background-color</reftopic>
      <reftopic>gfg:font</reftopic>
      <reftopic>gfg:text-extent</reftopic>
      <reftopic>gfg:metrics</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="load">
    <syntax>
      <arguments>
        <argument name="self">
          <description>
            The object to be populated with data.
          </description>
        </argument>
        <argument name="pathname">
          <description>
            A <refclhs>string</refclhs> or <refclhs>pathname</refclhs>
            identifying the graphics data file to be loaded.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>list</refclhs>
      </return>
    </syntax>
    <description>
      <para role="normal">
        Certain graphics objects have a persistent representation, which may
        be deserialized with the appropriate implementation of this function.
        <arg0/> will be re-initialized with data from the file identified by
        <arg1/>. Certain serialized object formats (e.g., ICO) may actually
        describe multiple instances. To facilitate such formats, this function
        returns <arg0/> plus any additional instances in a <refclhs>list</refclhs>,
        ordered the same as they are read from the file.
      </para>

      <para role="normal">
        Note: this symbol shadows the Common Lisp symbol of the same name.
      </para>
    </description>
    <seealso>
      <reftopic>gfg:image-data</reftopic>
      <reftopic>Image Data Plugins</reftopic>
      <reftopic>gfg:image</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="font">
    <syntax with-setf="t">
      <arguments>
        <argument name="self">
          <description>
            The object whose font is to be set or queried.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfg:font</reftopic>
      </return>
    </syntax>
    <description>
      Returns (sets) the <reftopic>gfg:font</reftopic> of <arg0/>.
    </description>
  </generic-function>

  <generic-function name="transparency-mask">
    <syntax>
      <arguments>
        <argument name="self">
          <description>
            The object from which a transparency mask is to be computed.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfg:image</reftopic>
      </return>
    </syntax>
    <description>
      Returns a <reftopic label="new image">gfg:image</reftopic> that can
      serve as the transparency mask for <arg0/>, based on the value of
      <arg0/>'s transparency-pixel slot.
    </description>
    <seealso>
      <reftopic>gfg:with-transparency-pixel</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="depth">
    <syntax>
      <arguments>
        <argument name="self">
          <description>
            The object whose bits-per-pixel depth value is to be queried.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>integer</refclhs>
      </return>
    </syntax>
    <description>
      Returns the bits-per-pixel depth of <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:size</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="size">
    <syntax>
      <arguments>
        <argument name="self">
          <description>
            The object whose dimensions are to be set or queried.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfs:size</reftopic>
      </return>
    </syntax>
    <description>
      Returns (sets) the size of <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:depth</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="background-color">
    <syntax with-setf="t">
      <arguments>
        <argument name="self">
          <description>
            The object whose background color is to be set or queried.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfg:color</reftopic>
      </return>
    </syntax>
    <description>
      Returns (sets) the background color of <arg0/>, used when filling the
      interior of closed shapes.
    </description>
    <seealso>
      <reftopic>colors</reftopic>
      <reftopic>gfg:foreground-color</reftopic>
      <reftopic>gfg:graphics-context</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="foreground-color">
    <syntax with-setf="t">
      <arguments>
        <argument name="self">
          <description>
            The object whose foreground color is to be set or queried.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfg:color</reftopic>
      </return>
    </syntax>
    <description>
      Returns (sets) the foreground color of <arg0/>, used when drawing
      lines and rendering text.
    </description>
    <seealso>
      <reftopic>gfg:background-color</reftopic>
      <reftopic>gfg:graphics-context</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="data-object">
    <syntax>
      <arguments>
        <argument name="self">
          <description>
            The object from which to retrieve (or set) an abstract representation.
          </description>
        </argument>
        <notarg name="&amp;optional"/>
        <argument name="graphics-context">
          <description>
            A <reftopic>gfg:graphics-context</reftopic> object.
          </description>
        </argument>
      </arguments>
      <return>
        <emphasis>object</emphasis>
      </return>
      <para role="normal">
        (setf (gfg:data-object <emphasis>self</emphasis>) <emphasis>object</emphasis>)
      </para>
    </syntax>
    <description>
      Returns (sets) the abstract representation of <arg0/>. <arg1/> is
      required when <arg0/> is a <reftopic>gfg:font</reftopic>.
    </description>
    <seealso>
      <reftopic>gfg:font-data</reftopic>
      <reftopic>gfg:image-data</reftopic>
      <reftopic>gfg:image</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="metrics">
    <syntax>
      <arguments>
        <argument name="context">
          <description>
            The context for retrieving the metrics of <arg1/>.
          </description>
        </argument>
        <argument name="font">
          <description>
            A <reftopic>gfg:font</reftopic> object.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfg:font-metrics</reftopic>
      </return>
    </syntax>
    <description>
      Returns a <reftopic>gfg:font-metrics</reftopic> object describing
      attributes of <arg1/> using <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:text-extent</reftopic>
    </seealso>
  </generic-function>

  <generic-function name="text-extent">
    <syntax>
      <arguments>
        <argument name="context">
          <description>
            The context for measuring the extent of <arg1/>.
          </description>
        </argument>
        <argument name="string">
          <description>
            The <refclhs>string</refclhs> whose pixel dimensions are to be computed.
          </description>
        </argument>
        <notarg name="&amp;optional"/>
        <argument name="style">
          <description>
            A <refclhs>list</refclhs> containing zero or more of the following
            keyword symbols:
            <enum>
              <argument name=":mnemonic">
                <description>
                  Underline the mnemonic character if any (preceded in
                  <arg1/> with an ampersand).
                </description>
              </argument>
              <argument name=":tab">
                <description>
                  Expand tabs when <arg1/> is rendered;
                  by default the tab width is 8 characters.
                </description>
              </argument>
            </enum>
          </description>
        </argument>
        <argument name="tab-width">
          <description>
            An <refclhs>integer</refclhs> specifying a custom tab width; only
            meaningful if the :tab style keyword is supplied.
          </description>
        </argument>
      </arguments>
      <return>
        <reftopic>gfs:size</reftopic>
      </return>
    </syntax>
    <description>
      Returns the size of a rectangular region that would enclose
      <arg1/> if it were drawn. These dimensions
      are dependent on the <reftopic>gfg:font</reftopic> currently selected
      in <arg0/>.
    </description>
    <seealso>
      <reftopic>gfg:font-metrics</reftopic>
    </seealso>
  </generic-function>

  <!-- ACCESSORS -->

  <slot-accessor name="pen-style">
    <syntax with-setf="t">
      <arguments>
        <argument name="graphics-context">
          <description>
            The <reftopic>gfg:graphics-context</reftopic> whose pen style
            is to be retrieved or set.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>list</refclhs>
      </return>
    </syntax>
    <description>
      <para role="normal">
        Returns (sets) a list of keyword symbols that configure <arg0/>'s
        line drawing mode, as described below.
      </para>

      <para role="normal">One of the following primary styles:</para>
      <enum>
        <argument name=":alternate">
          <description>Every other pixel is set.</description>
        </argument>
        <argument name=":dash">
          <description>Dashed line.</description>
        </argument>
        <argument name=":dashdot">
          <description>Alternating dashes and dots.</description>
        </argument>
        <argument name=":dashdotdot">
          <description>Alternating dashes and double dots.</description>
        </argument>
        <argument name=":dot">
          <description>Dotted line.</description>
        </argument>
        <argument name=":solid">
          <description>Solid line.</description>
        </argument>
      </enum>

      <para role="normal">One of the following end cap styles:</para>
      <enum>
        <argument name=":flat-endcap"/>
        <argument name=":round-endcap"/>
        <argument name=":square-endcap"/>
      </enum>

      <para role="normal">One of the following end cap styles:</para>
      <enum>
        <argument name=":bevel-join">
          <description>Beveled joins.</description>
        </argument>
        <argument name=":miter-join">
          <description>
            Mitered joins if the ratio of miter length to
            line width is within <reftopic>gfg:miter-limit</reftopic>.
          </description>
        </argument>
        <argument name=":round-join">
          <description>Rounded joins.</description>
        </argument>
      </enum>

      <para role="normal">
        The default style is '(:flat :square-endcap :round-bevel). Specifying
        NIL is equivalent to selecting the Win32 PS_NULL pen style, meaning
        that the pen is invisible.
      </para>
    </description>
    <seealso>
      <reftopic>gfg:miter-limit</reftopic>
      <reftopic>gfg:pen-width</reftopic>
    </seealso>
  </slot-accessor>

  <slot-accessor name="pen-width">
    <syntax with-setf="t">
      <arguments>
        <argument name="graphics-context">
          <description>
            The <reftopic>gfg:graphics-context</reftopic> whose pen width
            value is to be retrieved or set.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>integer</refclhs>
      </return>
    </syntax>
    <description>
      Returns (sets) an <refclhs>integer</refclhs> value determining the width
      of a drawn line. The minimum supported value is 0, which configures the
      underlying device context to draw 1-pixel-wide lines using an optimized
      drawing algorithm.
    </description>
    <seealso>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:draw-line</reftopic>
    </seealso>
  </slot-accessor>

  <slot-accessor name="miter-limit">
    <syntax with-setf="t">
      <arguments>
        <argument name="graphics-context">
          <description>
            The <reftopic>gfg:graphics-context</reftopic> whose miter limit
            value is to be retrieved or set.
          </description>
        </argument>
      </arguments>
      <return>
        <refclhs>float</refclhs>
      </return>
    </syntax>
    <description>
      Returns (sets) a <refclhs>float</refclhs> value describing the allowable
      ratio of miter length to line width. The miter length is the distance
      from the intersection of the line walls on the inside of a join to the
      intersection of the line walls on the outside of the same join. The
      default value is 10.0. This value affects the :miter-join pen style.
    </description>
    <seealso>
      <reftopic>gfg:pen-style</reftopic>
      <reftopic>gfg:pen-width</reftopic>
      <reftopic>gfg:draw-line</reftopic>
    </seealso>
  </slot-accessor>

</symbols>
