<!--
    glossary.xml

    Copyright (c) 2006-2007, Jack D. Unrue
-->
<glossary id="glossary"><title>Glossary</title>
<indexterm><primary>Glossary</primary></indexterm>

<glossdiv id="glossary-A"><title>A</title>

  <glossentry id="accelerator"><glossterm>accelerator</glossterm>
    <glossdef>
      <para>
        An <emphasis>accelerator</emphasis> is a key sequence assigned to an application
        function allowing a user to bypass navigation of the menu or control
        hierarchy normally required to invoke the function. Some accelerators
        are established by Windows style guidelines, such as control-c for
        the clipboard copy operation from an Edit menu. Applications may define
        other accelerators as appropriate. Accelerators are generally intended
        for more knowledgeable users and should not be the sole mechanism for
        invoking functionality.
      </para>
      <glossseealso otherterm="mnemonic"/>
    </glossdef>
  </glossentry>

  <glossentry id="auto-scrolling"><glossterm>auto-scrolling</glossterm>
    <glossdef>
      <para>
        <emphasis>Auto-scrolling</emphasis> is a feature whereby scrolling occurs as a side
        effect of user input so content can remain visible, thus avoiding
        the need to explicitly manipulate scrollbars to achieve the same result.
      </para>
    </glossdef>
  </glossentry>

</glossdiv>

<glossdiv id="glossary-B"><title>B</title>
</glossdiv>

<glossdiv id="glossary-C"><title>C</title>

  <glossentry id="control"><glossterm>control</glossterm>
    <glossdef>
      <para>
        A <emphasis>control</emphasis> is a system-defined window class whose
        role is to accept user input and possibly generate notification events
        based on such input.
      </para>
    </glossdef>
  </glossentry>

</glossdiv>

<glossdiv id="glossary-D"><title>D</title>

  <glossentry id="default action"><glossterm>default action</glossterm>
    <glossdef>
      <para>
        Conceptually, a <emphasis>default action</emphasis> is a secondary event
        initiated by user input that is a logical follow-up to a previous event.
        Examples of such user gestures include double-clicking an item in a list box
        control, or pressing enter when an edit control has the keyboard focus.
        The response to a default action makes use of context established by
        the preceding event (e.g., the selection set by an initial click
        becomes the context for the double-click response).
      </para>
    </glossdef>
  </glossentry>

  <glossentry id="dialog"><glossterm>dialog</glossterm>
    <glossdef>
      <para>
        A <emphasis>dialog</emphasis> is a mechanism for collecting user input
        or showing information. The system defines common dialogs for tasks like
        choosing files, fonts, or colors. Custom dialogs can be defined
        by application code.
      </para>
    </glossdef>
  </glossentry>

</glossdiv>

<glossdiv id="glossary-E"><title>E</title>

  <glossentry id="extension"><glossterm>extension</glossterm>
    <glossdef>
      <para>
        An <emphasis>extension</emphasis> is code providing additional functionality
        beyond the original scope of a system. An extension framework encourages
        modularity. More importantly, it is a conscious design choice to
        allow a system to be stretched beyond what the original designers may
        have anticipated.
      </para>
      <glossseealso otherterm="plugin"/>
    </glossdef>
  </glossentry>

</glossdiv>

<glossdiv id="glossary-F"><title>F</title>
</glossdiv>

<glossdiv id="glossary-G"><title>G</title>
</glossdiv>

<glossdiv id="glossary-H"><title>H</title>
</glossdiv>

<glossdiv id="glossary-I"><title>I</title>
</glossdiv>

<glossdiv id="glossary-J"><title>J</title>
</glossdiv>

<glossdiv id="glossary-K"><title>K</title>
</glossdiv>

<glossdiv id="glossary-L"><title>L</title>
</glossdiv>

<glossdiv id="glossary-M"><title>M</title>

  <glossentry id="menu"><glossterm>menu</glossterm>
    <glossdef>
      <para>
        A collection of menu items presented within a single rectangular
        region. <emphasis>Menus</emphasis> are often anchored to a menu bar,
        but may also be invoked in a context-sensitive manner via the mouse
        or an <glossseealso otherterm="accelerator"/>.
      </para>
    </glossdef>
  </glossentry>

  <glossentry id="mix-in"><glossterm>mix-in class</glossterm>
    <glossdef>
      <para>
        A <emphasis>mix-in</emphasis> class represents a specific abstraction
        that complements the role(s) of other class(es) in a class hierarchy.
      </para>
    </glossdef>
  </glossentry>

  <glossentry id="mnemonic"><glossterm>mnemonic</glossterm>
    <glossdef>
      <para>
        A <emphasis>mnemonic</emphasis> is a key sequence (usually a single
        character modified by the &lt;Alt&gt; key) enabling mouse-free navigation
        of a menu or control hierarchy to invoke an application function. Depending
        on the user's system settings, mnemonic characters may be hidden until
        the user presses the &lt;Alt&gt; key.
      </para>
      <glossseealso otherterm="accelerator"/>
    </glossdef>
  </glossentry>
</glossdiv>

<glossdiv id="glossary-N"><title>N</title>
</glossdiv>

<glossdiv id="glossary-O"><title>O</title>
</glossdiv>

<glossdiv id="glossary-P"><title>P</title>

  <glossentry id="plugin"><glossterm>plugin</glossterm>
    <glossdef>
      <para>
        A <emphasis>plugin</emphasis> is a unit of code integrated into
        a larger system in order to implement a specific instance of an
        established category of services. A plugin framework encourages
        modularity within a defined scope of functionality.
      </para>
      <glossseealso otherterm="extension"/>
    </glossdef>
  </glossentry>

  <glossentry id="protocol"><glossterm>protocol</glossterm>
    <glossdef>
      <para>
        In Common Lisp, a <emphasis>protocol</emphasis> refers to a group
        of logically-related functions (usually generic functions, since
        protocols are often designed to be extensible). The Metaobject
        Protocol (MOP) is a popular and sophisticated example.
      </para>
    </glossdef>
  </glossentry>

</glossdiv>

<glossdiv id="glossary-Q"><title>Q</title>
</glossdiv>

<glossdiv id="glossary-R"><title>R</title>
</glossdiv>

<glossdiv id="glossary-S"><title>S</title>
</glossdiv>

<glossdiv id="glossary-T"><title>T</title>
</glossdiv>

<glossdiv id="glossary-U"><title>U</title>
</glossdiv>

<glossdiv id="glossary-V"><title>V</title>
</glossdiv>

<glossdiv id="glossary-W"><title>W</title>
</glossdiv>

<glossdiv id="glossary-X"><title>X</title>
</glossdiv>

<glossdiv id="glossary-Y"><title>Y</title>
</glossdiv>

<glossdiv id="glossary-Z"><title>Z</title>
</glossdiv>

</glossary>
