(in-package :clim-tests)

(assert (not (subtypep 'bounding-rectangle 'region)))
(assert (subtypep 'standard-bounding-rectangle 'bounding-rectangle))
(assert (subtypep 'standard-bounding-rectangle 'rectangle))

(assert (bounding-rectangle-p (make-point 23 99)))

(let* ((x1 234) (y1 838) (x2 -234) (y2 22)
       (l (make-line* x1 y1 x2 y2))
       (br (make-bounding-rectangle x1 y1 x2 y2)))
  (assert (bounding-rectangle-p l))
  (assert (typep br 'standard-bounding-rectangle))
  (multiple-value-bind (xx1 yy1 xx2 yy2) (bounding-rectangle* l)
    (assert (= (coordinate (min x1 x2)) xx1))
    (assert (= (coordinate (min y1 y2)) yy1))
    (assert (= (coordinate (max x1 x2)) xx2))
    (assert (= (coordinate (max y1 y2)) yy2)))
  (multiple-value-bind (xx1 yy1 xx2 yy2) (bounding-rectangle* br)
    (assert (= (coordinate (min x1 x2)) xx1))
    (assert (= (coordinate (min y1 y2)) yy1))
    (assert (= (coordinate (max x1 x2)) xx2))
    (assert (= (coordinate (max y1 y2)) yy2)))
  (with-bounding-rectangle* (xx1 yy1 xx2 yy2) l
    (assert (= (coordinate (min x1 x2)) xx1))
    (assert (= (coordinate (min y1 y2)) yy1))
    (assert (= (coordinate (max x1 x2)) xx2))
    (assert (= (coordinate (max y1 y2)) yy2)))
  (with-bounding-rectangle* (xx1 yy1 xx2 yy2) br
    (assert (= (coordinate (min x1 x2)) xx1))
    (assert (= (coordinate (min y1 y2)) yy1))
    (assert (= (coordinate (max x1 x2)) xx2))
    (assert (= (coordinate (max y1 y2)) yy2)))
;;; test failed.  b-r-p returns two values instead of a point
;;;  (assert (region-equal (bounding-rectangle-position l)
;;;			(make-point (min x1 x2) (min y1 y2))))
  (assert (= (bounding-rectangle-min-x l)
	     (coordinate (min x1 x2))))
  (assert (= (bounding-rectangle-min-y l)
	     (coordinate (min y1 y2))))
  (assert (= (bounding-rectangle-max-x l)
	     (coordinate (max x1 x2))))
  (assert (= (bounding-rectangle-max-y l)
	     (coordinate (max y1 y2))))
  (with-bounding-rectangle* (xx1 yy1 xx2 yy2) l
    (assert (= (bounding-rectangle-width l) (- xx2 xx1)))
    (assert (= (bounding-rectangle-height l) (- yy2 yy1))))
  (multiple-value-bind (w h) (bounding-rectangle-size l)
    (assert (= (bounding-rectangle-width l) w))
    (assert (= (bounding-rectangle-height l) h))))

  
