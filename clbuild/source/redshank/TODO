# -*- outline -*-

* Bugs

`redshank-complete-form' on a slot
  (defclass a ()
    ((%foo |)))

does not remove the leading ?%.  Refactor
`redshank-canonical-slot-name', `redshank-accessor-name', etc.

* Ideas

These are random ideas which I want to implement at some point.
Contributors looking to help out are very welcome to get inspired.
New ideas are welcome, too, of course.

** break points
 <mathrick> is there any special reason SLIME doesn't have "insert breakpoint
           on this form" functionality?

(beginning-of-defun) (down-list) (forward-sexp) ;name
(set-marker ...)
keep track of break points, redshank-unbreak-all

Perhaps this is better done with break-on-enter (if the implementation
supports it?)

** redshank-extract-{flet,labels}
(let ((context (parse-context)))
  (while (not (endp context))
    (when (and (null (pop context))
               (member (first context) '(flet labels)))
      ; this is the beginning of the flet
      )

A better way would be a more general partial parsing framework...

** (declare (ignore ...))
<antifuchs> michaelw: declaring things to be ignored/ignorable is one thing
            redshank could do (:
<tcr> michaelw: redshank-make-symbol-at-point-ignored

** inline function/variable definitions
This is the "inverse" operation to extract.

** rename variables

** mouse copy
http://www.clozure.com/pipermail/openmcl-devel/2007-November/004092.html
http://lispm.dyndns.org/news?ID=NEWS-2007-11-18-1

Add support to insert form templates with S-M-mouse-1.

** COND to IF
<antifuchs> michaelw: btw, could redshank include a command for turning a
            one-condition (+ optional T) cond back into an IF form? (:

** DOLIST/DOTIMES to LOOP (and back?)

** Treat DEFINE-CONDITION similar to DEFCLASS 
except the default slot accessor should be :reader

** DEFCLASS vertical layout
<Xach> michaelw: slot name on its own line, and every slot option/value pair
       on their own lines.

** import symbols with explicitly mentioned package (add :import-from clause
   to defpackage form), and shorten them.

** Context menus
<http://web.media.mit.edu/~lieber/Lieberary/Softviz/CACM-Debugging/Already-Full/Already-Full.html>
