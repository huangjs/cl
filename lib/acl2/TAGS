
acl2.lisp,2792
(defconstant acl2::*the-live-state* acl2::*the-live-state*311,13921
(defmacro acl2::defconst acl2::defconst349,16172
(defvar acl2::*copy-of-common-lisp-symbols-from-main-lisp-package*)acl2::*copy-of-common-lisp-symbols-from-main-lisp-package*396,18156
(defvar acl2::*copy-of-common-lisp-specials-and-constants*)acl2::*copy-of-common-lisp-specials-and-constants*397,18224
(defvar acl2::*copy-of-acl2-version*)acl2::*copy-of-acl2-version*398,18284
(defvar acl2::*copy-of-acl2-files*)acl2::*copy-of-acl2-files*399,18322
(defparameter *global-package-prefix* *global-package-prefix*470,20919
(defparameter *1*-package-prefix* *1*-package-prefix*472,20974
(defun make-global-package make-global-package474,21022
(defun make-*1*-package make-*1*-package482,21275
(defparameter acl2::*initial-lisp-symbol-mark*acl2::*initial-lisp-symbol-mark*519,22575
(defconstant *acl2-package* *acl2-package*525,22803
(defmacro with-warnings-suppressed with-warnings-suppressed553,24002
(defconstant acl2::*acl2-status-file*acl2::*acl2-status-file*572,24558
(defun acl2::check-suitability-for-acl2 acl2::check-suitability-for-acl2576,24665
(defun note-compile-ok note-compile-ok592,25187
(defvar *lisp-extension* *lisp-extension*620,26605
(defparameter *compiled-file-extension**compiled-file-extension*622,26639
(defmacro our-with-compilation-unit our-with-compilation-unit673,28755
(defconstant *acl2-read-character-terminators**acl2-read-character-terminators*702,30111
(defparameter *acl2-readtable**acl2-readtable*732,31273
(defun turn-off-sharp-dot turn-off-sharp-dot738,31483
(defun modify-acl2-readtable modify-acl2-readtable754,31913
(defmacro load-compiled load-compiled838,34456
(defun compile-acl2 compile-acl21086,43854
(defun no-object-file-or-out-of-date-object-file no-object-file-or-out-of-date-object-file1186,47843
(defun quick-compile-acl2 quick-compile-acl21194,48176
(defvar user::*fast-acl2-gcl-build* user::*fast-acl2-gcl-build*1254,50323
(defun load-acl2 load-acl21256,50365
(defun load-acl2-execution-environment load-acl2-execution-environment1324,52900
(defun exit-lisp exit-lisp1345,53661
(defconstant *slashable-array**slashable-array*1424,56527
(defconstant *suspiciously-first-numeric-array**suspiciously-first-numeric-array*1437,56978
(defconstant *char-code-backslash* *char-code-backslash*1448,57314
(defconstant *char-code-double-gritch* *char-code-double-gritch*1450,57367
(defconstant *read-object-eof* *read-object-eof*1452,57424
(defconstant *big-n-special-object* *big-n-special-object*1458,57677
(defconstant *number-of-return-values**number-of-return-values*1460,57728
(defvar *debug-prompt-suffix* *debug-prompt-suffix*1488,58765
(defun break-level-for-acl2 break-level-for-acl21490,58879

acl2-check.lisp,0

acl2-fns.lisp,2174
(defun acl2-realp acl2-realp39,1671
(defmacro defun-one-output defun-one-output54,2382
(defun macroexpand-till macroexpand-till62,2625
(defun get-type-from-dcls get-type-from-dcls79,3335
(defun arg-declarations arg-declarations87,3591
(defun collect-types collect-types92,3776
(defun convert-type-to-integer-pair convert-type-to-integer-pair104,4135
(defconstant *lisp-fns-with-mv-output-type**lisp-fns-with-mv-output-type*119,4589
(defvar *acl2-output-type-abort* *acl2-output-type-abort*136,5255
(defun max-output-type-for-declare-form max-output-type-for-declare-form139,5314
(defun max-output-type-for-declare-form-lst max-output-type-for-declare-form-lst219,8200
(defun output-type-for-declare-form-rec output-type-for-declare-form-rec246,9260
(defun output-type-for-declare-form-rec-list output-type-for-declare-form-rec-list336,12969
(defun output-type-for-declare-form output-type-for-declare-form346,13333
(defun make-defun-declare-form make-defun-declare-form382,14694
(defun make-defconst-declare-form make-defconst-declare-form419,16187
(defun make-defstobj-declare-form make-defstobj-declare-form437,16793
(defmacro eval-or-print eval-or-print466,18017
(defun proclaim-form proclaim-form474,18198
(defun proclaim-file proclaim-file505,19425
(defparameter *comma* *comma*561,21987
(defparameter *comma-atsign* *comma-atsign*565,22153
(defparameter *backquote-counter* *backquote-counter*569,22347
(defun backquote backquote576,22679
(defun backquote-lst backquote-lst621,24959
(defun rev1@ rev1@644,25756
(defun acl2-read-character-string acl2-read-character-string654,25963
(defun acl2-character-reader acl2-character-reader716,28608
(defconstant *main-lisp-package**main-lisp-package*728,29033
(defun symbol-package-name symbol-package-name731,29099
(defvar *global-symbol-key* *global-symbol-key*758,30317
(defvar **1*-symbol-key* **1*-symbol-key*760,30383
(defun global-symbol global-symbol762,30443
(defun *1*-symbol *1*-symbol770,30782
(defun *1*-symbol? *1*-symbol?778,31108
(defmacro defun-*1* defun-*1*787,31409
(defmacro gv gv790,31482
(defun getenv$-raw getenv$-raw820,32658

init.lisp,0

acl2-init.lisp,2223
(defun system-call system-call70,2460
(defun copy-acl2 copy-acl2133,4484
(defun copy-distribution copy-distribution150,5007
(defun make-tags make-tags312,12269
(defvar *saved-build-date*)*saved-build-date*356,14307
(defvar *saved-mode*)*saved-mode*357,14335
(defvar *saved-string**saved-string*359,14358
(defun maybe-load-acl2-init maybe-load-acl2-init381,15339
(defun gcl-version-> gcl-version->396,15780
(defun chmod-executable chmod-executable413,16539
(defmacro write-exec-file write-exec-file416,16627
(defun save-acl2-in-akcl-aux save-acl2-in-akcl-aux426,17004
(defun save-acl2-in-akcl save-acl2-in-akcl472,18946
(defun save-exec-raw save-exec-raw698,28606
(defvar *acl2-default-restart-complete* *acl2-default-restart-complete*703,28816
(defun acl2-default-restart acl2-default-restart705,28862
(defun cmulisp-restart cmulisp-restart752,30333
(defun sbcl-restart sbcl-restart758,30431
(defun save-acl2-in-lucid save-acl2-in-lucid764,30565
(defun save-acl2-in-lispworks save-acl2-in-lispworks770,30761
(defun save-exec-raw save-exec-raw808,32376
(defun save-acl2-in-cmulisp-aux save-acl2-in-cmulisp-aux816,32715
(defun save-acl2-in-cmulisp save-acl2-in-cmulisp861,34524
(defun save-exec-raw save-exec-raw870,34841
(defun save-acl2-in-sbcl-aux save-acl2-in-sbcl-aux875,34983
(defun save-acl2-in-sbcl save-acl2-in-sbcl907,36259
(defun save-exec-raw save-exec-raw917,36606
(defun save-acl2-in-allegro-aux save-acl2-in-allegro-aux923,36779
(defun save-acl2-in-allegro save-acl2-in-allegro998,39862
(defun save-exec-raw save-exec-raw1012,40334
(defun rc-filename rc-filename1016,40469
(defun write-acl2rc write-acl2rc1019,40534
(defun save-acl2-in-clisp-aux save-acl2-in-clisp-aux1038,41248
(defun save-acl2-in-clisp save-acl2-in-clisp1082,43017
(defun save-exec-raw save-exec-raw1091,43329
(defun save-acl2-in-openmcl-aux save-acl2-in-openmcl-aux1096,43472
(defun save-acl2-in-openmcl save-acl2-in-openmcl1139,45353
(defun save-exec-raw save-exec-raw1148,45657
(defun save-acl2 save-acl21155,45949
(defun proclaim-files proclaim-files1215,48101
(defun generate-acl2-proclaims generate-acl2-proclaims1238,48968
(defun acl2 acl21256,49690

akcl-acl2-trace.lisp,433
(defvar *traced-fn*)*traced-fn*31,1271
(defmacro trace trace43,1699
(defmacro untrace untrace88,3442
(defun trace-ppr-gcl trace-ppr-gcl96,3586
(defun trace-fix-entry trace-fix-entry100,3634
(defun trace-multiplicity trace-multiplicity116,4379
(defun trace-formals trace-formals125,4732
(defun trace-values trace-values131,4991
(defun trace-values trace-values139,5211
(defun trace-fix-exit trace-fix-exit143,5276

allegro-acl2-trace.lisp,513
(defvar *trace-arglist*)*trace-arglist*52,2115
(defvar *trace-values*)*trace-values*54,2141
(defconst *trace-sublis* *trace-sublis*56,2166
(defun trace-pre-process trace-pre-process114,5130
(defun trace-entry trace-entry145,6216
(defun trace-multiplicity trace-multiplicity168,7201
(defun trace-formals trace-formals177,7554
(defun trace-values trace-values182,7793
(defun trace-exit trace-exit192,8091
(defun traced-fns-lst traced-fns-lst219,9391
(defun trace-process trace-process225,9554

openmcl-acl2-trace.lisp,554
(defvar *trace-arglist*)*trace-arglist*54,2216
(defvar *trace-values*)*trace-values*56,2242
(defconst *trace-sublis* *trace-sublis*58,2267
(defun trace-pre-process trace-pre-process66,2537
(defun trace-entry trace-entry96,3625
(defun trace-multiplicity trace-multiplicity114,4374
(defun trace-formals trace-formals123,4727
(defun trace-values trace-values129,4986
(defun trace-values trace-values137,5206
(defun trace-exit trace-exit144,5373
(defun traced-fns-lst traced-fns-lst168,6471
(defun trace-process trace-process174,6633

axioms.lisp,69649
(acl2::defconst acl2::*common-lisp-symbols-from-main-lisp-package*acl2::*common-lisp-symbols-from-main-lisp-package*87,4618
(acl2::defconst acl2::*acl2-files*acl2::*acl2-files*630,36848
(defconst *common-lisp-specials-and-constants**common-lisp-specials-and-constants*663,37440
(defconst *stobj-inline-declare**stobj-inline-declare*741,41760
(defmacro make-package-entry make-package-entry987,52843
(defmacro find-package-entry find-package-entry1028,54790
(defmacro package-entry-name package-entry-name1031,54892
(defmacro package-entry-imports package-entry-imports1034,54963
(defmacro package-entry-hidden-p package-entry-hidden-p1037,55038
(defmacro package-entry-book-path package-entry-book-path1040,55115
(defmacro package-entry-defpkg-event-form package-entry-defpkg-event-form1043,55194
(defmacro package-entry-tterm package-entry-tterm1046,55287
(defmacro find-non-hidden-package-entry find-non-hidden-package-entry1049,55368
(defmacro remove-package-entry remove-package-entry1054,55561
(defmacro change-package-entry-hidden-p change-package-entry-hidden-p1057,55672
(defvar *user-stobj-alist* *user-stobj-alist*1070,56067
(defparameter *wormholep* *wormholep*1099,57859
(defun-one-output replace-bad-lisp-object replace-bad-lisp-object1106,58170
(defun-one-output replace-bad-lisp-object-list replace-bad-lisp-object-list1117,58453
(defun-one-output wormhole-er wormhole-er1123,58626
(defparameter *wormhole-cleanup-form* *wormhole-cleanup-form*1136,59153
(defstruct (cloaking-devicecloaking-device1177,61958
(defun-one-output cloaked-set-w! cloaked-set-w!1184,62172
(defun-one-output assoc-eq-butlast-2 assoc-eq-butlast-21192,62448
(defun-one-output assoc-eq-equal-butlast-2 assoc-eq-equal-butlast-21203,62870
(defun-one-output push-wormhole-undo-formi push-wormhole-undo-formi1216,63377
(defconstant *open-input-channel-key**open-input-channel-key*1312,68418
(defconstant *open-input-channel-type-key**open-input-channel-type-key*1318,68633
(defconstant *open-output-channel-key**open-output-channel-key*1321,68727
(defconstant *open-output-channel-type-key**open-output-channel-type-key*1324,68813
(defconstant *non-existent-stream**non-existent-stream*1327,68909
(defmacro live-state-p live-state-p1330,68989
(defun interface-er interface-er1336,69165
(defun-one-output acl2-numberp acl2-numberp1369,70448
(defun-one-output binary-+ binary-+1372,70499
(defun-one-output binary-* binary-*1374,70542
(defun-one-output unary-- unary--1376,70585
(defun-one-output unary-/ unary-/1378,70623
(defparameter *in-recover-world-flg* *in-recover-world-flg*1384,70838
(defparameter *ever-known-package-alist**ever-known-package-alist*1389,71017
(defparameter *package-alist* *package-alist*1416,72257
(defun-one-output find-package-fast find-package-fast1418,72293
(defun-one-output defpkg-raw defpkg-raw1424,72493
(defmacro defpkg defpkg1540,77184
(defmacro defuns defuns1552,77518
(defmacro defun-std defun-std1557,77648
(defmacro defuns-std defuns-std1565,77874
(defmacro defthm defthm1568,77929
(defmacro defthmd defthmd1572,77993
(defmacro defthm-std defthm-std1577,78083
(defmacro defaxiom defaxiom1581,78151
(defmacro skip-proofs skip-proofs1585,78217
(defmacro deflabel deflabel1588,78253
(defmacro defdoc defdoc1592,78319
(defmacro deftheory deftheory1596,78383
(defun-one-output stobj-initial-statep-arr stobj-initial-statep-arr1600,78450
(defun-one-output stobj-initial-statep-entry stobj-initial-statep-entry1605,78623
(defun-one-output stobj-initial-statep1 stobj-initial-statep11635,79543
(defun-one-output stobj-initial-statep stobj-initial-statep1643,79934
(defun remove-stobj-inline-declare remove-stobj-inline-declare1657,80517
(defmacro defstobj defstobj1668,80914
(defmacro verify-termination verify-termination1775,85258
(defmacro verify-guards verify-guards1779,85334
(defmacro in-theory in-theory1783,85405
(defmacro in-arithmetic-theory in-arithmetic-theory1787,85472
(defmacro push-untouchable push-untouchable1791,85550
(defmacro remove-untouchable remove-untouchable1795,85624
(defmacro set-body set-body1799,85700
(defmacro table table1803,85766
(defmacro encapsulate encapsulate1814,86143
(defparameter *connected-book-directory* *connected-book-directory*1856,87910
(defparameter *inside-include-book-fn**inside-include-book-fn*1858,87957
(defmacro include-book include-book1869,88407
(defmacro certify-book certify-book1943,92126
(defmacro local local1954,92627
(defmacro defchoose defchoose1958,92678
(defmacro mutual-recursion mutual-recursion1970,93158
(defmacro make-event make-event1973,93219
(deflabel programmingprogramming1993,94187
(deflabel miscellaneousmiscellaneous2013,94743
(defconst *standard-co* *standard-co*2023,95012
(defconst *standard-oi* *standard-oi*2062,97152
(defconst *standard-ci* *standard-ci*2076,97794
(defconst nil nil2113,98849
(defconst t t2121,99017
(defun iff iff2127,99170
(defun booleanp booleanp2140,99502
(defthm iff-is-an-equivalenceiff-is-an-equivalence2160,100038
(defun implies implies2168,100253
(defthm iff-implies-equal-implies-1iff-implies-equal-implies-12180,100565
(defthm iff-implies-equal-implies-2iff-implies-equal-implies-22185,100714
(defun not not2191,100880
(defthm iff-implies-equal-notiff-implies-equal-not2206,101236
(defun hide hide2211,101367
(defun rewrite-equiv rewrite-equiv2317,106013
(defmacro real/rationalp real/rationalp2331,106500
(defmacro complex/complex-rationalp complex/complex-rationalp2349,107136
(defun eq eq2373,107979
(defun true-listp true-listp2400,109094
(defun list-macro list-macro2414,109411
(defmacro list list2423,109612
(defun and-macro and-macro2438,110013
(defmacro and and2449,110245
(defun or-macro or-macro2465,110685
(defmacro or or2477,110939
(defmacro - -2493,111327
(defthm booleanp-compound-recognizerbooleanp-compound-recognizer2538,113188
(defun integer-abs integer-abs2552,113683
(defun xxxjoin xxxjoin2558,113792
(defmacro + +2577,114313
(defun-one-output len2 len22588,114572
(defun len1 len12593,114682
(defun len len2623,116067
(defun length length2650,116786
(defun-one-output complex-rationalp complex-rationalp2671,117339
(defun acl2-count acl2-count2674,117396
(defthm acl2-count-conspacl2-count-consp2723,119336
(defun cond-clausesp cond-clausesp2731,119530
(defun cond-macro cond-macro2742,119869
(defmacro cond cond2757,120358
(defun eqlablep eqlablep2779,121080
(defthm eqlablep-recogeqlablep-recog2801,121898
(defun eqlable-listp eqlable-listp2810,122099
(defun atom atom2826,122509
(defun make-character-list make-character-list2843,122912
(defun eqlable-alistp eqlable-alistp2863,123435
(defun alistp alistp2879,123925
(defthm alistp-forward-to-true-listpalistp-forward-to-true-listp2893,124258
(defthm eqlable-alistp-forward-to-alistpeqlable-alistp-forward-to-alistp2898,124380
(defun acons acons2904,124527
(defun endp endp2921,125040
(defmacro must-be-equal must-be-equal2943,125699
(defun must-be-equal must-be-equal2952,125921
(defmacro mbe mbe2977,126825
(defmacro mbt mbt3120,132945
(defun member-equal member-equal3223,137137
(defun union-equal union-equal3243,137819
(defun subsetp-equal subsetp-equal3268,138856
(defun symbol-listp symbol-listp3289,139597
(defthm symbol-listp-forward-to-true-listpsymbol-listp-forward-to-true-listp3303,139942
(defun null null3309,140093
(defun member-eq member-eq3325,140545
(defun subsetp-eq subsetp-eq3349,141448
(defun symbol-alistp symbol-alistp3359,141772
(defthm symbol-alistp-forward-to-eqlable-alistpsymbol-alistp-forward-to-eqlable-alistp3374,142213
(defun assoc-eq assoc-eq3379,142357
(defun assoc-equal assoc-equal3403,143328
(defun assoc-eq-equal-alistp assoc-eq-equal-alistp3424,144143
(defun assoc-eq-equal assoc-eq-equal3432,144398
(defun no-duplicatesp-equal no-duplicatesp-equal3448,145085
(defvar test-lsttest-lst3485,146378
(defun-one-output strip-cars1 strip-cars13581,149242
(defun strip-cars strip-cars3590,149525
(defun eql eql3616,150216
(defmacro <= <=3642,150974
(defun = =3657,151303
(defun /= /=3682,151954
(defmacro > >3706,152654
(defmacro >= >=3721,152955
(deflabel zero-test-idiomszero-test-idioms3735,153270
(defmacro int= int=3904,161842
(defun zp zp3926,162584
(defun-one-output zp zp3966,163831
(defthm zp-compound-recognizerzp-compound-recognizer3970,163900
(defthm zp-openzp-open3985,164382
(defun zip zip4011,165227
(defun-one-output zip zip4051,166400
(defthm zip-compound-recognizerzip-compound-recognizer4053,166436
(defthm zip-openzip-open4062,166631
(defun nth nth4071,166839
(defun char char4096,167532
(defun proper-consp proper-consp4118,168204
(defun improper-consp improper-consp4131,168537
(defmacro * *4146,168936
(defun conjugate conjugate4175,169598
(defun prog2$ prog2$4195,170106
(defmacro prog2$ prog2$4275,173008
(deflabel OtherOther4284,173317
(deflabel acl2-helpacl2-help4294,173619
(defun time$ time$4307,174048
(defmacro time$ time$4336,174723
(defmacro / /4342,174866
(defaxiom closureclosure4380,175760
(defaxiom Associativity-of-+Associativity-of-+4387,175917
(defaxiom Commutativity-of-+Commutativity-of-+4390,175986
(defun fix fix4393,176043
(defaxiom Unicity-of-0Unicity-of-04411,176485
(defaxiom Inverse-of-+Inverse-of-+4415,176545
(defaxiom Associativity-of-*Associativity-of-*4418,176594
(defaxiom Commutativity-of-*Commutativity-of-*4421,176663
(defaxiom Unicity-of-1Unicity-of-14424,176720
(defaxiom Inverse-of-*Inverse-of-*4428,176780
(defaxiom DistributivityDistributivity4433,176907
(defaxiom <-on-others<-on-others4437,176987
(defaxiom ZeroZero4442,177076
(defaxiom TrichotomyTrichotomy4446,177129
(defaxiom PositivePositive4458,177399
(defaxiom Rational-implies1Rational-implies14468,177680
(defaxiom Rational-implies2Rational-implies24475,177879
(defaxiom integer-implies-rationalinteger-implies-rational4483,178112
(defaxiom rational-implies-realrational-implies-real4488,178233
(defaxiom complex-implies1complex-implies14494,178382
(defaxiom complex-definitioncomplex-definition4501,178566
(defaxiom nonzero-imagpartnonzero-imagpart4512,178903
(defaxiom realpart-imagpart-elimrealpart-imagpart-elim4517,179034
(defaxiom realpart-complexrealpart-complex4526,179321
(defaxiom imagpart-compleximagpart-complex4534,179551
(defthm complex-equalcomplex-equal4542,179775
(defun force force4561,180483
(defconst *force-xnume* *force-xnume*4689,187536
(defun immediate-force-modep immediate-force-modep4696,187658
(defconst *immediate-force-modep-xnume**immediate-force-modep-xnume*4745,189563
(defun case-split case-split4748,189627
(defmacro disable-forcing disable-forcing4802,191710
(defmacro enable-forcing enable-forcing4824,192382
(defmacro disable-immediate-force-modep disable-immediate-force-modep4847,193104
(defmacro enable-immediate-force-modep enable-immediate-force-modep4871,193950
(defun synp synp4895,194782
(defmacro syntaxp syntaxp4931,196429
(deflabel syntaxp-examplessyntaxp-examples5080,203819
(defmacro bind-free bind-free5283,210302
(deflabel bind-free-examplesbind-free-examples5505,220105
(defaxiom nonnegative-productnonnegative-product5697,227375
(defaxiom Integer-0Integer-05729,228352
(defaxiom Integer-1Integer-15733,228409
(defaxiom Integer-stepInteger-step5737,228466
(defaxiom Lowest-TermsLowest-Terms5743,228608
(defaxiom +-guard+-guard5774,229549
(defaxiom car-cdr-elimcar-cdr-elim5781,229711
(defaxiom car-cons car-cons5786,229824
(defaxiom cdr-cons cdr-cons5788,229872
(defaxiom cons-equalcons-equal5790,229920
(defaxiom booleanp-characterpbooleanp-characterp5805,230319
(defaxiom characterp-pagecharacterp-page5809,230399
(defaxiom characterp-tabcharacterp-tab5813,230469
(defaxiom characterp-ruboutcharacterp-rubout5817,230537
(defun member member5822,230628
(defun no-duplicatesp no-duplicatesp5857,231988
(defun assoc assoc5876,232524
(defun r-eqlable-alistp r-eqlable-alistp5907,233865
(defun rassoc rassoc5918,234118
(defun rassoc-equal rassoc-equal5943,235068
(defun r-symbol-alistp r-symbol-alistp5962,235717
(defun rassoc-eq rassoc-eq5972,235953
(defconst *standard-chars**standard-chars*5997,236899
(defun standard-char-p standard-char-p6007,237368
(defun standard-char-listp standard-char-listp6031,238092
(defun character-listp character-listp6051,238634
(defthm character-listp-forward-to-eqlable-listpcharacter-listp-forward-to-eqlable-listp6065,238995
(defthm standard-char-listp-forward-to-character-listpstandard-char-listp-forward-to-character-listp6070,239141
(defaxiom coerce-inverse-1coerce-inverse-16075,239299
(defaxiom coerce-inverse-2coerce-inverse-26086,239593
(defaxiom coerce-inverse-2coerce-inverse-26104,240295
(defaxiom standard-char-listp-coercestandard-char-listp-coerce6111,240476
(defaxiom character-listp-coercecharacter-listp-coerce6116,240596
(defthm standard-char-listp-coerce-forward-chainingstandard-char-listp-coerce-forward-chaining6135,241400
(defun string string6150,242010
(defun alpha-char-p alpha-char-p6186,243235
(defun upper-case-p upper-case-p6212,244129
(defun lower-case-p lower-case-p6239,245109
(defun char-upcase char-upcase6266,246088
(defun char-downcase char-downcase6319,247984
(defthm lower-case-p-char-downcaselower-case-p-char-downcase6371,249931
(defthm upper-case-p-char-upcaseupper-case-p-char-upcase6376,250078
(defthm lower-case-p-forward-to-alpha-char-plower-case-p-forward-to-alpha-char-p6381,250221
(defthm upper-case-p-forward-to-alpha-char-pupper-case-p-forward-to-alpha-char-p6387,250396
(defthm alpha-char-p-forward-to-characterpalpha-char-p-forward-to-characterp6393,250571
(defthm characterp-char-downcasecharacterp-char-downcase6398,250705
(defthm characterp-char-upcasecharacterp-char-upcase6402,250808
(defun string-downcase1 string-downcase16411,251133
(defthm character-listp-string-downcase-1character-listp-string-downcase-16420,251412
(defun string-downcase string-downcase6424,251514
(defun string-upcase1 string-upcase16449,252434
(defthm character-listp-string-upcase1-1character-listp-string-upcase1-16458,252707
(defun string-upcase string-upcase6462,252806
(defun our-digit-char-p our-digit-char-p6481,253461
(defmacro digit-char-p digit-char-p6554,255712
(defun char-equal char-equal6577,256609
(defun atom-listp atom-listp6599,257341
(defthm atom-listp-forward-to-true-listpatom-listp-forward-to-true-listp6613,257711
(defthm eqlable-listp-forward-to-atom-listpeqlable-listp-forward-to-atom-listp6618,257841
(defthm characterp-nthcharacterp-nth6623,257977
(defun ifix ifix6630,258158
(defun rfix rfix6647,258611
(defun realfix realfix6674,259605
(defun nfix nfix6691,260072
(defun string-equal1 string-equal16710,260576
(defun string-equal string-equal6735,261499
(defun standard-string-alistp standard-string-alistp6760,262423
(defthm standard-string-alistp-forward-to-alistpstandard-string-alistp-forward-to-alistp6779,263079
(defun assoc-string-equal assoc-string-equal6784,263225
(defmacro caar caar6810,264064
(defmacro cadr cadr6819,264251
(defmacro cdar cdar6828,264438
(defmacro cddr cddr6837,264625
(defmacro caaar caaar6846,264812
(defmacro caadr caadr6855,265002
(defmacro cadar cadar6864,265192
(defmacro caddr caddr6873,265382
(defmacro cdaar cdaar6882,265572
(defmacro cdadr cdadr6891,265762
(defmacro cddar cddar6900,265952
(defmacro cdddr cdddr6909,266142
(defmacro caaaar caaaar6918,266332
(defmacro caaadr caaadr6927,266525
(defmacro caadar caadar6936,266718
(defmacro caaddr caaddr6945,266911
(defmacro cadaar cadaar6954,267104
(defmacro cadadr cadadr6963,267297
(defmacro caddar caddar6972,267490
(defmacro cadddr cadddr6981,267683
(defmacro cdaaar cdaaar6990,267876
(defmacro cdaadr cdaadr6999,268069
(defmacro cdadar cdadar7008,268262
(defmacro cdaddr cdaddr7017,268455
(defmacro cddaar cddaar7026,268648
(defmacro cddadr cddadr7035,268841
(defmacro cdddar cdddar7044,269034
(defmacro cddddr cddddr7053,269227
(defdoc e0-ordinalpe0-ordinalp7070,269847
(defdoc e0-ord-<e0-ord-<7087,270621
(defun natp natp7104,271409
(defthm natp-compound-recognizernatp-compound-recognizer7121,271979
(defun posp posp7127,272121
(defthm posp-compound-recognizerposp-compound-recognizer7142,272624
(defun o-finp o-finp7148,272765
(defmacro o-infp o-infp7161,273196
(defun o-first-expt o-first-expt7171,273412
(defun o-first-coeff o-first-coeff7189,274042
(defun o-rst o-rst7207,274692
(defun o<g o<g7222,275292
(defun o< o<7234,275558
(defmacro o> o>7307,279294
(defmacro o<= o<=7316,279487
(defmacro o>= o>=7325,279701
(defun o-p o-p7334,279918
(defthm o-p-implies-o<go-p-implies-o<g7517,286957
(defun make-ord make-ord7523,287043
(defun list*-macro list*-macro7551,287890
(defmacro list* list*7561,288167
(defconst *main-lisp-package-name* *main-lisp-package-name*7593,289558
(defconst *initial-known-package-alist**initial-known-package-alist*7606,290186
(defaxiom stringp-symbol-package-namestringp-symbol-package-name7618,290735
(defaxiom symbolp-intern-in-package-of-symbolsymbolp-intern-in-package-of-symbol7622,290846
(defaxiom symbolp-pkg-witnesssymbolp-pkg-witness7626,290975
(defparameter *ld-level**ld-level*7631,291087
(defvar *hard-error-returns-nilp* *hard-error-returns-nilp*7649,291841
(defun-one-output throw-raw-ev-fncall throw-raw-ev-fncall7652,291898
(defun hard-error hard-error7670,292544
(defun illegal illegal7780,297491
(defmacro intern intern7850,300273
(defmacro intern$ intern$7917,303269
(defun keywordp keywordp7938,303969
(defthm keywordp-forward-to-symbolpkeywordp-forward-to-symbolp7957,304512
(defaxiom intern-in-package-of-symbol-symbol-nameintern-in-package-of-symbol-symbol-name7962,304632
(defthm symbol-package-name-of-symbol-is-not-empty-stringsymbol-package-name-of-symbol-is-not-empty-string7975,305292
(defconst *pkg-witness-name* *pkg-witness-name*7991,306072
(defaxiom symbol-name-pkg-witnesssymbol-name-pkg-witness7993,306122
(defaxiom symbol-package-name-pkg-witness-namesymbol-package-name-pkg-witness-name7997,306233
(defun member-symbol-name member-symbol-name8011,306713
(defthm symbol-equalitysymbol-equality8017,306908
(defaxiom symbol-name-intern-in-package-of-symbolsymbol-name-intern-in-package-of-symbol8037,307579
(defaxiom acl2-input-channel-packageacl2-input-channel-package8048,308026
(defaxiom acl2-output-channel-packageacl2-output-channel-package8056,308329
(defaxiom acl2-packageacl2-package8064,308635
(defaxiom keyword-packagekeyword-package8075,309030
(defaxiom string-is-not-circularstring-is-not-circular8090,309616
(defaxiom nil-is-not-circularnil-is-not-circular8098,309945
(defun-one-output intern-in-package-of-symbol intern-in-package-of-symbol8133,311593
(defdoc pkg-witnesspkg-witness8161,312806
(defun-one-output pkg-witness pkg-witness8178,313543
(defun binary-append binary-append8196,314239
(defmacro append append8213,314659
(defthm standard-char-listp-appendstandard-char-listp-append8235,315490
(defthm character-listp-appendcharacter-listp-append8242,315763
(defun string-append string-append8248,315960
(defun string-listp string-listp8275,316763
(defun string-append-lst string-append-lst8292,317104
(defmacro concatenate concatenate8302,317308
(defmacro 1+ 1+8354,319474
(defmacro 1- 1-8368,319733
(defun remove remove8382,319992
(defun remove-eq remove-eq8410,320944
(defun remove-equal remove-equal8434,321755
(defun remove1 remove18454,322375
(defun remove1-eq remove1-eq8477,323111
(defun remove1-equal remove1-equal8501,323915
(deflabel pairlispairlis8521,324525
(defun pairlis$ pairlis$8531,324762
(defun remove-duplicates-eql remove-duplicates-eql8555,325685
(defthm character-listp-remove-duplicates-eqlcharacter-listp-remove-duplicates-eql8562,325908
(defun remove-duplicates remove-duplicates8567,326060
(defun remove-duplicates-equal remove-duplicates-equal8599,327254
(deflabel eventsevents8625,328196
(deflabel documentationdocumentation8644,329106
(deflabel historyhistory8783,334895
(defmacro first first8810,336069
(defmacro second second8819,336243
(defmacro third third8828,336420
(defmacro fourth fourth8837,336596
(defmacro fifth fifth8846,336775
(defmacro sixth sixth8855,336964
(defmacro seventh seventh8864,337154
(defmacro eighth eighth8873,337349
(defmacro ninth ninth8882,337543
(defmacro tenth tenth8891,337747
(defmacro rest rest8900,337952
(defun identity identity8914,338236
(defun revappend revappend8928,338532
(defthm character-listp-revappendcharacter-listp-revappend8960,339428
(defun reverse reverse8971,339772
(defconst *valid-output-names**valid-output-names*8992,340359
(defun set-difference-eq set-difference-eq8996,340497
(defun with-output-fn with-output-fn9016,341259
(defmacro with-output with-output9090,344500
(defmacro with-output with-output9094,344574
(defun-one-output strip-cdrs1 strip-cdrs19150,346597
(defun strip-cdrs strip-cdrs9159,346880
(defun mutual-recursion-guardp mutual-recursion-guardp9182,347544
(defun collect-cadrs-when-car-eq collect-cadrs-when-car-eq9190,347837
(defmacro value value9198,348148
(defun value-triple-fn value-triple-fn9201,348191
(defmacro value-triple value-triple9220,348929
(defmacro assert-event assert-event9228,349143
(defun xd-name xd-name9260,350274
(defun defund-name-list defund-name-list9271,350621
(defmacro mutual-recursion mutual-recursion9283,351053
(defun pseudo-termp pseudo-termp9417,356368
(defun pseudo-term-listp pseudo-term-listp9500,360542
(defthm pseudo-term-listp-forward-to-true-listppseudo-term-listp-forward-to-true-listp9508,360734
(defun pseudo-term-list-listp pseudo-term-list-listp9515,360908
(defun add-to-set-eq add-to-set-eq9524,361129
(defun add-to-set-eql add-to-set-eql9543,361791
(defmacro variablep variablep9562,362468
(defmacro nvariablep nvariablep9564,362509
(defmacro fquotep fquotep9566,362552
(defun quotep quotep9568,362609
(defun kwote kwote9573,362703
(defmacro unquote unquote9577,362769
(defmacro ffn-symb ffn-symb9579,362808
(defun fn-symb fn-symb9581,362847
(defmacro fargs fargs9588,362976
(defun all-vars1 all-vars19592,363031
(defun all-vars1-lst all-vars1-lst9601,363332
(defun all-vars all-vars9615,363821
(defmacro translate-and-test translate-and-test9660,366167
(defun intersectp-eq intersectp-eq9726,369671
(defun intersectp-equal intersectp-equal9743,370135
(defun make-fmt-bindings make-fmt-bindings9763,370823
(defmacro msg msg9772,371198
(defmacro check-vars-not-free check-vars-not-free9788,371909
(defun er-progn-fn er-progn-fn9803,372401
(defmacro er-progn er-progn9822,373229
(defun legal-case-clausesp legal-case-clausesp9854,374341
(defun case-test case-test9870,374859
(defun case-list case-list9875,375016
(defun case-list-check case-list-check9887,375439
(defmacro case case9904,376148
(defun position-equal-ac position-equal-ac9969,377750
(defun position-ac position-ac9978,378007
(defun position-equal position-equal9989,378355
(defun position-eq-ac position-eq-ac10010,379184
(defun position-eq position-eq10021,379535
(defun position position10055,381154
(defun nonnegative-integer-quotient nonnegative-integer-quotient10088,382669
(defun legal-let*-p legal-let*-p10116,383663
(defun let*-macro let*-macro10157,385823
(defmacro let* let*10185,386965
(defmacro progn progn10255,389794
(defmacro progn! progn!10303,391596
(defmacro progn! progn!10367,394188
(defdoc realreal10384,394871
(defun floor floor10423,396618
(defun ceiling ceiling10480,398530
(defun truncate truncate10536,400394
(defun round round10592,402201
(defun mod mod10662,404248
(defun rem rem10694,404996
(defun evenp evenp10726,405758
(defun oddp oddp10744,406254
(defun zerop zerop10761,406675
(defun plusp plusp10788,407558
(defun minusp minusp10808,408037
(defun min min10828,408520
(defun max max10850,409046
(defun abs abs10874,409696
(defun signum signum10897,410377
(defun lognot lognot10932,411523
(defthm standard-char-p-nthstandard-char-p-nth10957,412265
(deflabel proof-of-well-foundednessproof-of-well-foundedness10970,412720
(defun expt expt11151,420057
(defun logcount logcount11181,421094
(defun listp listp11206,421707
(defun nthcdr nthcdr11224,422140
(defun last last11257,423029
(defun logbitp logbitp11284,423656
(defun ash ash11306,424322
(defthm expt-type-prescription-non-zero-baseexpt-type-prescription-non-zero-base11332,425144
(defthm realp-expt-type-prescriptionrealp-expt-type-prescription11341,425427
(defthm rationalp-expt-type-prescriptionrationalp-expt-type-prescription11346,425553
(deflabel characterscharacters11355,425747
(defaxiom char-code-linearchar-code-linear11423,428508
(defaxiom code-char-typecode-char-type11432,428746
(defaxiom code-char-char-code-is-identitycode-char-char-code-is-identity11436,428837
(defaxiom char-code-code-char-is-identitychar-code-code-char-is-identity11440,428963
(defun char< char<11447,429177
(defun char> char>11465,429690
(defun char<= char<=11483,430209
(defun char>= char>=11501,430748
(defun string<-l string<-l11518,431276
(defun string< string<11532,431703
(defun string> string>11567,432683
(defun string<= string<=11586,433250
(defun string>= string>=11610,434055
(defun symbol-< symbol-<11633,434843
(defthm string<-l-irreflexivestring<-l-irreflexive11657,435732
(defthm string<-irreflexivestring<-irreflexive11660,435790
(defun substitute-ac substitute-ac11663,435842
(defun substitute substitute11677,436288
(defun subsetp subsetp11711,437572
(defun sublis sublis11740,438564
(defun subst subst11768,439544
(defmacro pprogn pprogn11791,440309
(defparameter *acl2-unwind-protect-stack* *acl2-unwind-protect-stack*11961,449082
(defvar *lp-ever-entered-p* *lp-ever-entered-p*11964,449147
(defmacro push-car push-car11967,449198
(defmacro acl2-unwind-protect acl2-unwind-protect11985,450018
(defun-one-output acl2-unwind acl2-unwind12091,454907
(defmacro when-logic when-logic12267,464637
(defmacro in-package in-package12291,465518
(defmacro defpkg defpkg12320,466367
(deflabel hidden-defpkghidden-defpkg12425,471478
(deflabel hidden-death-packagehidden-death-package12433,471610
(defmacro defun defun12495,474236
(defmacro defund defund12748,485876
(defmacro defund defund12794,487328
(defmacro defun-std defun-std12798,487425
(defmacro defuns defuns12814,487788
(defmacro defuns-std defuns-std12857,489051
(defmacro verify-termination verify-termination12873,489442
(defmacro verify-guards verify-guards12970,493728
(defmacro defmacro defmacro13188,503539
(defmacro defconst defconst13267,506610
(defmacro defthm defthm13307,507843
(defmacro defthmd defthmd13388,510886
(defmacro defthm-std defthm-std13432,512195
(defmacro defaxiom defaxiom13460,512937
(defmacro deflabel deflabel13507,514634
(deflabel theoriestheories13545,515986
(defmacro deftheory deftheory13692,523394
(defmacro defstobj defstobj13746,525172
(defmacro in-theory in-theory14111,541556
(defmacro in-arithmetic-theory in-arithmetic-theory14159,543533
(defmacro push-untouchable push-untouchable14210,545774
(defmacro remove-untouchable remove-untouchable14261,547918
(defmacro set-body set-body14309,549916
(defmacro table table14346,551353
(defmacro encapsulate encapsulate14560,562623
(defmacro include-book include-book14707,569676
(defmacro make-event make-event14890,579652
(defdoc make-event-detailsmake-event-details15125,592694
(defmacro record-expansion record-expansion15317,603214
(defthm bad bad15453,609854
(defmacro skip-proofs skip-proofs15479,610802
(defmacro local local15584,615991
(defmacro defchoose defchoose15644,618458
(deflabel conservativity-of-defchooseconservativity-of-defchoose15799,624382
(defun worldp worldp16269,647506
(defthm worldp-forward-to-assoc-eq-equal-alistpworldp-forward-to-assoc-eq-equal-alistp16282,647899
(defun putprop putprop16287,648043
(defparameter meter-maid-cnt meter-maid-cnt16335,649901
(defun meter-maid meter-maid16338,649951
(defconst *acl2-property-unbound* *acl2-property-unbound*16356,650767
(defun getprop-default getprop-default16358,650826
(defun-one-output sgetprop1 sgetprop116377,651370
(defvar fgetprop-stats fgetprop-stats16410,652720
(defvar analyzed-fgetprop-stats analyzed-fgetprop-stats16412,652749
(defvar *current-acl2-world-key* *current-acl2-world-key*16492,655828
(defun fgetprop fgetprop16494,655904
(defun sgetprop sgetprop16555,658574
(defmacro getprop getprop16593,660181
(defun ordered-symbol-alistp ordered-symbol-alistp16599,660410
(defthm ordered-symbol-alistp-forward-to-symbol-alistpordered-symbol-alistp-forward-to-symbol-alistp16617,660961
(defun add-pair add-pair16622,661119
(defun remove-first-pair remove-first-pair16634,661518
(defun true-list-listp true-list-listp16643,661831
(defthm true-list-listp-forward-to-true-listptrue-list-listp-forward-to-true-listp16658,662296
(defun getprops1 getprops116663,662436
(defun getprops getprops16678,663057
(defthm equal-char-codeequal-char-code16723,664831
(defun has-propsp1 has-propsp116739,665234
(defun has-propsp has-propsp16760,666181
(defun extend-world extend-world16792,667541
(defun retract-world retract-world16812,668208
(defun global-val global-val16832,668877
(defun function-symbolp function-symbolp16849,669540
(defun translate-declaration-to-guard/integer translate-declaration-to-guard/integer16870,670598
(defun translate-declaration-to-guard1 translate-declaration-to-guard116922,672815
(defun translate-declaration-to-guard translate-declaration-to-guard17113,680529
(defun translate-declaration-to-guard-lst translate-declaration-to-guard-lst17189,684167
(deflabel declaredeclare17216,685122
(deflabel type-spectype-spec17267,687122
(defun the-error the-error17343,690426
(defun the-fn the-fn17356,690845
(defmacro the the17405,693172
(defun set-difference-equal set-difference-equal17438,694276
(defconst *maximum-positive-32-bit-integer**maximum-positive-32-bit-integer*17540,699724
(defconst *our-array-total-size-limit**our-array-total-size-limit*17544,699806
(defun-one-output chk-make-array$ chk-make-array$17556,700238
(defmacro make-array$ make-array$17589,701710
(defun bounded-integer-alistp bounded-integer-alistp17640,704446
(defthm bounded-integer-alistp-forward-to-eqlable-alistpbounded-integer-alistp-forward-to-eqlable-alistp17656,705019
(defun keyword-value-listp keyword-value-listp17661,705183
(defthm keyword-value-listp-forward-to-true-listpkeyword-value-listp-forward-to-true-listp17677,705666
(defun assoc-keyword assoc-keyword17682,705814
(defthm keyword-value-listp-assoc-keywordkeyword-value-listp-assoc-keyword17702,706477
(defthm consp-assoc-eqconsp-assoc-eq17708,706707
(defun-one-output slow-array-warning slow-array-warning17715,706894
(deflabel arraysarrays17723,707278
(deflabel arrays-examplearrays-example18138,729727
(deflabel slow-array-warningslow-array-warning18217,732554
(defun array1p array1p18309,737355
(defthm array1p-forwardarray1p-forward18360,739659
(defthm array1p-lineararray1p-linear18380,740820
(defun bounded-integer-alistp2 bounded-integer-alistp218389,741324
(defun assoc2 assoc218408,742154
(defun array2p array2p18420,742459
(defthm array2p-forwardarray2p-forward18463,744181
(defthm array2p-lineararray2p-linear18488,745746
(defun header header18503,746481
(defun dimensions dimensions18535,747463
(defun maximum-length maximum-length18562,748553
(defun default default18586,749446
(defthm consp-assocconsp-assoc18611,750371
(defun aref1 aref118617,750532
(defun compress11 compress1118665,752198
(defconstant *invisible-array-mark* *invisible-array-mark*18680,752789
(defun array-order array-order18682,752870
(defun compress1 compress118694,753211
(defthm array1p-consarray1p-cons18928,764272
(defun aset1 aset118938,764630
(defun aref2 aref219042,769479
(defun compress211 compress21119089,771165
(defun compress21 compress2119105,771803
(defun compress2 compress219118,772289
(defthm array2p-consarray2p-cons19297,780220
(defun aset2 aset219308,780598
(defun flush-compress flush-compress19420,785409
(defparameter *return-values**return-values*19581,791746
(defmacro declare-return-values declare-return-values19588,791935
(defun declare-return-values1 declare-return-values119591,792013
(defun in-akcl-with-mv-set-and-ref in-akcl-with-mv-set-and-ref19605,792271
(defconstant *akcl-mv-ref-and-set-inclusive-upper-bound* *akcl-mv-ref-and-set-inclusive-upper-bound*19608,792346
(defmacro special-location special-location19610,792407
(defmacro set-mv set-mv19620,792816
(defmacro mv-ref mv-ref19633,793282
(defmacro mv-refs mv-refs19645,793714
(defun cdrn cdrn19663,794274
(defun mv-nth mv-nth19669,794440
(defun make-mv-nths make-mv-nths19701,795399
(defun mv-bindings mv-bindings19709,795711
(defun mv-set-mvs mv-set-mvs19719,796035
(defmacro mv mv19724,796200
(defmacro mv-let mv-let19827,799826
(deflabel statestate19987,806625
(defun update-nth update-nth20153,815529
(defun update-nth-array update-nth-array20194,816789
(defun 32-bit-integerp 32-bit-integerp20203,817148
(defthm 32-bit-integerp-forward-to-integerp32-bit-integerp-forward-to-integerp20209,817334
(defun rational-listp rational-listp20214,817470
(defthm rational-listp-forward-to-true-listprational-listp-forward-to-true-listp20229,817840
(defun real-listp real-listp20237,818059
(defdoc real-listpreal-listp20244,818223
(defthm real-listp-forward-to-true-listpreal-listp-forward-to-true-listp20256,818572
(defun integer-listp integer-listp20261,818702
(defthm integer-listp-forward-to-rational-listpinteger-listp-forward-to-rational-listp20276,819055
(defthm rational-listp-forward-to-real-listprational-listp-forward-to-real-listp20284,819292
(defun 32-bit-integer-listp 32-bit-integer-listp20289,819430
(defthm 32-bit-integer-listp-forward-to-integer-listp32-bit-integer-listp-forward-to-integer-listp20295,819618
(defun open-input-channels open-input-channels20304,819969
(defun update-open-input-channels update-open-input-channels20308,820059
(defun open-output-channels open-output-channels20312,820167
(defun update-open-output-channels update-open-output-channels20316,820258
(defun global-table global-table20320,820367
(defun update-global-table update-global-table20324,820450
(defun t-stack t-stack20328,820551
(defun update-t-stack update-t-stack20332,820629
(defun 32-bit-integer-stack 32-bit-integer-stack20336,820725
(defun update-32-bit-integer-stack update-32-bit-integer-stack20340,820816
(defun big-clock-entry big-clock-entry20344,820925
(defun update-big-clock-entry update-big-clock-entry20348,821011
(defun idates idates20352,821115
(defun update-idates update-idates20356,821192
(defun acl2-oracle acl2-oracle20360,821287
(defun update-acl2-oracle update-acl2-oracle20364,821369
(defun file-clock file-clock20368,821469
(defun update-file-clock update-file-clock20372,821550
(defun readable-files readable-files20376,821649
(defun written-files written-files20380,821734
(defun update-written-files update-written-files20384,821819
(defun read-files read-files20388,821922
(defun update-read-files update-read-files20392,822004
(defun writeable-files writeable-files20396,822104
(defun list-all-package-names-lst list-all-package-names-lst20400,822191
(defun update-list-all-package-names-lst update-list-all-package-names-lst20404,822289
(defun user-stobj-alist1 user-stobj-alist120412,822617
(defun update-user-stobj-alist1 update-user-stobj-alist120416,822706
(defconst *initial-raw-arity-alist**initial-raw-arity-alist*20425,822961
(defconst *initial-global-table**initial-global-table*20449,823643
(defun all-boundp all-boundp20622,830800
(defun known-package-alistp known-package-alistp20630,831071
(defthm known-package-alistp-forward-to-true-list-listp-and-alistpknown-package-alistp-forward-to-true-list-listp-and-alistp20641,831452
(defun timer-alistp timer-alistp20647,831656
(defthm timer-alistp-forward-to-true-list-listp-and-symbol-alistptimer-alistp-forward-to-true-list-listp-and-symbol-alistp20659,831968
(defun typed-io-listp typed-io-listp20665,832170
(defthm typed-io-listp-forward-to-true-listptyped-io-listp-forward-to-true-listp20677,832621
(defconst *file-types* *file-types*20682,832763
(defun open-channel1 open-channel120684,832816
(defthm open-channel1-forward-to-true-listp-and-conspopen-channel1-forward-to-true-listp-and-consp20698,833231
(defun open-channel-listp open-channel-listp20704,833409
(defun open-channels-p open-channels-p20717,833766
(defthm open-channels-p-forwardopen-channels-p-forward20722,833888
(defun file-clock-p file-clock-p20728,834067
(defthm file-clock-p-forward-to-integerpfile-clock-p-forward-to-integerp20732,834133
(defun readable-file readable-file20737,834259
(defthm readable-file-forward-to-true-listp-and-conspreadable-file-forward-to-true-listp-and-consp20749,834621
(defun readable-files-listp readable-files-listp20755,834799
(defthm readable-files-listp-forward-to-true-list-listp-and-alistpreadable-files-listp-forward-to-true-list-listp-and-alistp20761,834985
(defun readable-files-p readable-files-p20767,835189
(defthm readable-files-p-forward-to-readable-files-listpreadable-files-p-forward-to-readable-files-listp20771,835275
(defun written-file written-file20776,835437
(defthm written-file-forward-to-true-listp-and-conspwritten-file-forward-to-true-listp-and-consp20789,835836
(defun written-file-listp written-file-listp20795,836012
(defthm written-file-listp-forward-to-true-list-listp-and-alistpwritten-file-listp-forward-to-true-list-listp-and-alistp20801,836193
(defun written-files-p written-files-p20807,836393
(defthm written-files-p-forward-to-written-file-listpwritten-files-p-forward-to-written-file-listp20811,836476
(defun read-file-listp1 read-file-listp120816,836632
(defthm read-file-listp1-forward-to-true-listp-and-conspread-file-listp1-forward-to-true-listp-and-consp20825,836862
(defun read-file-listp read-file-listp20831,837046
(defthm read-file-listp-forward-to-true-list-listpread-file-listp-forward-to-true-list-listp20837,837225
(defun read-files-p read-files-p20842,837375
(defthm read-files-p-forward-to-read-file-listpread-files-p-forward-to-read-file-listp20846,837452
(defun writable-file-listp1 writable-file-listp120851,837596
(defthm writable-file-listp1-forward-to-true-listp-and-conspwritable-file-listp1-forward-to-true-listp-and-consp20859,837801
(defun writable-file-listp writable-file-listp20865,837993
(defthm writable-file-listp-forward-to-true-list-listpwritable-file-listp-forward-to-true-list-listp20871,838184
(defun writeable-files-p writeable-files-p20876,838342
(defthm writeable-files-p-forward-to-writable-file-listpwriteable-files-p-forward-to-writable-file-listp20880,838428
(defun state-p1 state-p120885,838590
(defthm state-p1-forwardstate-p1-forward20920,840014
(defun state-p state-p20963,841898
(defthm state-p-implies-and-forward-to-state-p1state-p-implies-and-forward-to-state-p120973,842155
(defmacro build-statebuild-state21066,847477
(defconst *default-state**default-state*21090,848410
(defun build-state1 build-state121095,848544
(defun coerce-state-to-object coerce-state-to-object21123,849804
(defun coerce-object-to-state coerce-object-to-state21127,849873
(defun-one-output strip-numeric-postfix strip-numeric-postfix21135,850000
(defun global-table-cars1 global-table-cars121143,850240
(defun global-table-cars global-table-cars21168,851384
(defun boundp-global1 boundp-global121175,851588
(defun boundp-global boundp-global21184,851914
(defmacro f-boundp-global f-boundp-global21192,852162
(defun delete-pair delete-pair21208,852694
(defun makunbound-global makunbound-global21216,852933
(defun get-global get-global21244,853971
(defmacro f-get-global f-get-global21257,854448
(defun put-global put-global21283,855429
(defmacro f-put-global f-put-global21304,856249
(defun set-skipped-proofsp set-skipped-proofsp21333,857377
(defun symbol-doublet-listp symbol-doublet-listp21348,857943
(defun state-global-let*-get-globals state-global-let*-get-globals21361,858350
(defun state-global-let*-put-globals state-global-let*-put-globals21388,859769
(defun state-global-let*-cleanup state-global-let*-cleanup21405,860583
(defmacro state-global-let* state-global-let*21443,862816
(defun integer-range-p integer-range-p21484,864669
(defun signed-byte-p signed-byte-p21510,865688
(defun unsigned-byte-p unsigned-byte-p21518,865908
(defthm integer-range-p-forwardinteger-range-p-forward21529,866213
(defthm signed-byte-p-forward-to-integerpsigned-byte-p-forward-to-integerp21537,866463
(defthm unsigned-byte-p-forward-to-nonnegative-integerpunsigned-byte-p-forward-to-nonnegative-integerp21542,866597
(defmacro the-fixnum the-fixnum21550,866860
(defun-one-output zpf zpf21554,866938
(defun zpf zpf21558,867047
(defmacro logand logand21808,875241
(defmacro logeqv logeqv21831,875970
(defmacro logior logior21854,876711
(defmacro logxor logxor21877,877452
(defun integer-length integer-length21900,878193
(defun binary-logand binary-logand21927,879113
(defun lognand lognand21941,879580
(defun binary-logior binary-logior21958,880096
(defun logorc1 logorc121964,880273
(defun logorc2 logorc221983,880897
(defun logandc1 logandc122002,881522
(defun logandc2 logandc222021,882136
(defun binary-logeqv binary-logeqv22039,882734
(defun binary-logxor binary-logxor22045,882901
(defun lognor lognor22051,883060
(defun logtest logtest22070,883616
(deflabel ioio22093,884270
(defun digit-to-char digit-to-char22209,889568
(defun print-base-p print-base-p22248,890521
(defun explode-nonnegative-integer explode-nonnegative-integer22252,890620
(defun explode-atom explode-atom22335,893256
(defthm true-list-listp-forward-to-true-listp-assoc-eqtrue-list-listp-forward-to-true-listp-assoc-eq22395,895598
(defthm true-listp-cadr-assoc-eq-for-open-channels-ptrue-listp-cadr-assoc-eq-for-open-channels-p22400,895763
(defun open-input-channel-p1 open-input-channel-p122410,896124
(defun open-output-channel-p1 open-output-channel-p122425,896787
(defun open-input-channel-p open-input-channel-p22439,897429
(defun open-output-channel-p open-output-channel-p22445,897698
(defun open-output-channel-any-p1 open-output-channel-any-p122451,897969
(defun open-output-channel-any-p open-output-channel-any-p22458,898310
(defun open-input-channel-any-p1 open-input-channel-any-p122463,898522
(defun open-input-channel-any-p open-input-channel-any-p22470,898859
(defmacro acl2-print-case acl2-print-case22475,899069
(defmacro set-acl2-print-case set-acl2-print-case22478,899136
(defmacro acl2-print-base acl2-print-base22519,901079
(defmacro acl2-print-radix acl2-print-radix22522,901165
(defun check-hex-uppercase check-hex-uppercase22525,901268
(defmacro set-acl2-print-base set-acl2-print-base22572,903819
(defun princ$ princ$22611,905295
(defun write-byte$ write-byte$22733,910692
(defun print-object$ print-object$22761,911843
(defmacro get-input-stream-from-channel get-input-stream-from-channel22831,914970
(defmacro get-output-stream-from-channel get-output-stream-from-channel22838,915160
(defparameter *file-clock* *file-clock*22850,915501
(defun make-input-channel make-input-channel22853,915545
(defun make-output-channel make-output-channel22867,916055
(defun-one-output setup-standard-io setup-standard-io22886,916815
(defun-one-output lisp-book-syntaxp1 lisp-book-syntaxp122928,918384
(defun-one-output lisp-book-syntaxp lisp-book-syntaxp23009,921507
(defparameter *parser* *parser*23034,922638
(defun-one-output parse-infix-file parse-infix-file23047,923108
(defconst *directory-separator**directory-separator*23083,924695
(defconst *directory-separator-string**directory-separator-string*23086,924735
(defmacro os-er os-er23090,924826
(defun-one-output pathname-os-to-unix pathname-os-to-unix23098,925069
(defun-one-output pathname-unix-to-os pathname-unix-to-os23148,927141
(defun open-input-channel open-input-channel23183,928628
(defthm nth-update-nthnth-update-nth23290,933380
(defthm true-listp-update-nthtrue-listp-update-nth23297,933566
(defthm nth-update-nth-arraynth-update-nth-array23310,933916
(defun close-input-channel close-input-channel23316,934097
(defun open-output-channel open-output-channel23361,935987
(defun close-output-channel close-output-channel23416,938443
(defmacro legal-acl2-character-p legal-acl2-character-p23461,940322
(defun read-char$ read-char$23476,940913
(defun peek-char$ peek-char$23511,942388
(defun read-byte$ read-byte$23537,943438
(defun-one-output parse-infix-from-terminal parse-infix-from-terminal23566,944587
(defun read-object read-object23590,945625
(defconst *suspiciously-first-numeric-chars**suspiciously-first-numeric-chars*23658,948587
(defconst *slashable-chars**slashable-chars*23665,948787
(defun some-slashable some-slashable23673,949076
(defun prin1-with-slashes1 prin1-with-slashes123681,949281
(defun prin1-with-slashes prin1-with-slashes23700,950020
(defun may-need-slashes may-need-slashes23726,951107
(defparameter *t-stack* *t-stack*23821,955346
(defparameter *t-stack-length* *t-stack-length*23823,955388
(defun t-stack-length1 t-stack-length123828,955427
(defun t-stack-length t-stack-length23839,955762
(defun make-list-ac make-list-ac23846,955960
(defmacro make-list make-list23853,956168
(defun extend-t-stack extend-t-stack23870,956797
(defun first-n-ac first-n-ac23905,958318
(defun take take23913,958573
(defun subseq-list subseq-list23948,959670
(defun subseq subseq23959,960037
(defun butlast butlast24031,962527
(defun shrink-t-stack shrink-t-stack24068,963680
(defun aref-t-stack aref-t-stack24093,964537
(defun aset-t-stack aset-t-stack24108,965051
(defparameter *32-bit-integer-stack**32-bit-integer-stack*24136,965842
(defparameter *32-bit-integer-stack-length* *32-bit-integer-stack-length*24139,965931
(defun 32-bit-integer-stack-length1 32-bit-integer-stack-length124143,965982
(defun 32-bit-integer-stack-length 32-bit-integer-stack-length24151,966291
(defun extend-32-bit-integer-stack extend-32-bit-integer-stack24158,966515
(defun shrink-32-bit-integer-stack shrink-32-bit-integer-stack24206,968833
(defun aref-32-bit-integer-stack aref-32-bit-integer-stack24237,969963
(defun aset-32-bit-integer-stack aset-32-bit-integer-stack24260,970733
(defmacro f-big-clock-negative-p f-big-clock-negative-p24289,971762
(defmacro f-decrement-big-clock f-decrement-big-clock24298,972000
(defun big-clock-negative-p big-clock-negative-p24317,972584
(defun decrement-big-clock decrement-big-clock24337,973466
(defun list-all-package-names list-all-package-names24362,974420
(defun user-stobj-alist user-stobj-alist24378,975020
(defun update-user-stobj-alist update-user-stobj-alist24388,975340
(defun power-eval power-eval24400,975774
(defun-one-output idate idate24408,975984
(defun read-idate read-idate24420,976296
(defun read-run-time read-run-time24439,976953
(defparameter *next-acl2-oracle-value* *next-acl2-oracle-value*24464,977878
(defun read-acl2-oracle read-acl2-oracle24466,977923
(defun getenv$ getenv$24488,978756
(defun setenv$ setenv$24515,979697
(defthm update-acl2-oracle-preserves-state-p1update-acl2-oracle-preserves-state-p124642,985396
(defthm read-run-time-preserves-state-p1read-run-time-preserves-state-p124655,985759
(defthm read-acl2-oracle-preserves-state-p1read-acl2-oracle-preserves-state-p124663,986048
(defthm nth-0-read-run-time-type-prescriptionnth-0-read-run-time-type-prescription24679,986531
(defun main-timer main-timer24697,987098
(defun put-assoc-eq put-assoc-eq24708,987588
(defun put-assoc-eql put-assoc-eql24736,988730
(defun put-assoc-equal put-assoc-equal24764,989887
(defun set-timer set-timer24797,991002
(defun get-timer get-timer24806,991286
(defun push-timer push-timer24817,991663
(defthm rationalp-+rationalp-+24826,992047
(defthm rational-listp-implies-rationalp-carrational-listp-implies-rationalp-car24848,992956
(defthm rational-listp-implies-rationalp-carrational-listp-implies-rationalp-car24897,995110
(defthm timer-alistp-implies-rational-listp-assoc-eqtimer-alistp-implies-rational-listp-assoc-eq24906,995441
(defthm rational-listp-cdrrational-listp-cdr24912,995661
(defthm rationalp-*rationalp-*24925,996158
(defthm rationalp-unary--rationalp-unary--24930,996273
(defthm rationalp-unary-/rationalp-unary-/24934,996356
(defthm realp-+realp-+24943,996692
(defthm realp-*realp-*24949,996816
(defthm realp-unary--realp-unary--24955,996940
(defthm realp-unary-/realp-unary-/24960,997036
(defthm rationalp-implies-acl2-numberprationalp-implies-acl2-numberp24966,997183
(defun pop-timer pop-timer24969,997267
(defun add-timers add-timers24987,997892
(defthm nth-0-consnth-0-cons25001,998455
(defthm nth-add1nth-add125011,998657
(defthm main-timer-type-prescriptionmain-timer-type-prescription25018,998857
(defthm ordered-symbol-alistp-add-pair-forwardordered-symbol-alistp-add-pair-forward25024,999052
(defthm assoc-add-pairassoc-add-pair25033,999321
(defthm add-pair-preserves-all-boundpadd-pair-preserves-all-boundp25041,999601
(defthm state-p1-update-main-timerstate-p1-update-main-timer25048,999860
(defun increment-timer increment-timer25079,1001245
(defun print-rational-as-decimal print-rational-as-decimal25091,1001687
(defun print-timer print-timer25112,1002462
(defun prin1$ prin1$25123,1002828
(defthm all-boundp-preserves-assocall-boundp-preserves-assoc25304,1011878
(defun w w25326,1012596
(defun current-package current-package25330,1012701
(defun known-package-alist known-package-alist25384,1015548
(defthm state-p1-update-nth-2-worldstate-p1-update-nth-2-world25397,1015931
(defthm true-list-listp-forward-to-true-listp-assoc-equaltrue-list-listp-forward-to-true-listp-assoc-equal25435,1017278
(defconst *initial-untouchable-fns**initial-untouchable-fns*25440,1017449
(defconst *initial-untouchable-vars**initial-untouchable-vars*25503,1019377
(defun member-eq-t member-eq-t25584,1021476
(defun filter-topicsfilter-topics25588,1021547
(defconst *acl2-exports**acl2-exports*25698,1025927
(defun union-eq union-eq25952,1042306
(defun ld-skip-proofsp ld-skip-proofsp25985,1043773
(defun-one-output bad-lisp-objectp bad-lisp-objectp26095,1049561
(defun-one-output chk-bad-lisp-object chk-bad-lisp-object26253,1057848
(defmacro assign assign26264,1058251
(defmacro @ @26300,1059626
(defun make-var-lst1 make-var-lst126331,1060769
(defun make-var-lst make-var-lst26358,1061664
(defun subst-for-nth-arg subst-for-nth-arg26364,1061884
(defmacro the-mv the-mv26374,1062186
(defmacro the-mv the-mv26425,1063970
(defmacro the2s the2s26436,1064514
(deflabel bibliographybibliography26439,1064563
(defun non-free-var-runes non-free-var-runes26462,1065425
(defun free-var-runes free-var-runes26477,1066143
(defthm natp-position-ac natp-position-ac26485,1066356
(defun absolute-pathname-string-p absolute-pathname-string-p26493,1066692
(defun os os26512,1067352
(defun include-book-dir-alistp include-book-dir-alistp26516,1067450
(deflabel acl2-defaults-tableacl2-defaults-table26625,1071213
(defun table-alist table-alist26893,1082091
(defmacro set-enforce-redundancy set-enforce-redundancy26902,1082332
(defmacro set-enforce-redundancy set-enforce-redundancy26975,1086042
(defun default-verify-guards-eagerness default-verify-guards-eagerness26979,1086110
(defmacro set-verify-guards-eagerness set-verify-guards-eagerness26988,1086450
(defmacro set-verify-guards-eagerness set-verify-guards-eagerness27043,1089143
(defun default-compile-fns default-compile-fns27047,1089216
(defmacro set-compile-fns set-compile-fns27053,1089467
(defmacro set-compile-fns set-compile-fns27109,1091874
(defun default-measure-function default-measure-function27113,1091935
(defmacro set-measure-function set-measure-function27120,1092219
(defmacro set-measure-function set-measure-function27160,1093808
(defun default-well-founded-relation default-well-founded-relation27164,1093880
(defmacro set-well-founded-relation set-well-founded-relation27171,1094166
(defmacro set-well-founded-relation set-well-founded-relation27210,1095881
(defun good-defun-mode-p good-defun-mode-p27216,1095994
(defun default-defun-mode default-defun-mode27220,1096089
(defun default-defun-mode-from-state default-defun-mode-from-state27270,1098659
(defmacro logic logic27275,1098799
(defmacro logic logic27314,1100192
(defmacro program program27317,1100234
(defmacro program program27357,1101726
(defun invisible-fns-table invisible-fns-table27359,1101753
(defmacro set-invisible-fns-table set-invisible-fns-table27406,1103763
(defun unary-function-symbol-listp unary-function-symbol-listp27478,1106448
(defun invisible-fns-entryp invisible-fns-entryp27496,1107241
(defmacro add-invisible-fns add-invisible-fns27508,1107554
(defun delete-assoc-eq delete-assoc-eq27546,1109084
(defun delete-assoc-equal delete-assoc-equal27554,1109397
(defmacro remove-invisible-fns remove-invisible-fns27564,1109766
(defmacro set-invisible-fns-alist set-invisible-fns-alist27605,1111345
(defmacro invisible-fns-alist invisible-fns-alist27612,1111651
(defmacro set-bogus-mutual-recursion-ok set-bogus-mutual-recursion-ok27619,1111886
(defmacro set-bogus-mutual-recursion-ok set-bogus-mutual-recursion-ok27669,1114008
(defmacro set-irrelevant-formals-ok set-irrelevant-formals-ok27674,1114100
(defmacro set-irrelevant-formals-ok set-irrelevant-formals-ok27709,1115310
(defmacro set-ignore-ok set-ignore-ok27714,1115398
(defmacro set-ignore-ok set-ignore-ok27758,1117045
(defmacro set-inhibit-warnings set-inhibit-warnings27763,1117121
(defmacro set-inhibit-warnings set-inhibit-warnings27768,1117210
(defmacro set-inhibit-output-lst set-inhibit-output-lst27811,1118799
(defmacro set-inhibit-output-lst set-inhibit-output-lst27816,1118890
(defmacro set-state-ok set-state-ok27885,1121980
(defmacro set-state-ok set-state-ok27958,1125111
(defmacro set-let*-abstractionp set-let*-abstractionp27967,1125347
(defmacro set-let*-abstractionp set-let*-abstractionp28014,1127223
(defun let*-abstractionp let*-abstractionp28018,1127290
(defconst *initial-backchain-limit* *initial-backchain-limit*28032,1127786
(defconst *initial-default-backchain-limit* *initial-default-backchain-limit*28034,1127828
(defmacro set-backchain-limit set-backchain-limit28037,1127895
(defmacro set-backchain-limit set-backchain-limit28069,1129114
(defun backchain-limit backchain-limit28073,1129187
(defmacro set-default-backchain-limit set-default-backchain-limit28213,1134842
(defmacro set-default-backchain-limit set-default-backchain-limit28246,1136202
(defun default-backchain-limit default-backchain-limit28250,1136283
(defparameter *rewrite-depth-max* *rewrite-depth-max*28281,1137414
(defparameter *rewrite-depth-alist* *rewrite-depth-alist*28282,1137485
(defun collect-rstats-1 collect-rstats-128294,1137785
(defun collect-rstats-2 collect-rstats-228308,1138255
(defun collect-rstats collect-rstats28318,1138559
(defconst *default-rewrite-stack-limit**default-rewrite-stack-limit*28334,1139262
(defmacro set-rewrite-stack-limit set-rewrite-stack-limit28348,1139891
(defmacro set-rewrite-stack-limit set-rewrite-stack-limit28388,1141503
(defun rewrite-stack-limit rewrite-stack-limit28392,1141580
(defmacro set-nu-rewriter-mode set-nu-rewriter-mode28438,1143418
(defmacro set-nu-rewriter-mode set-nu-rewriter-mode28492,1145736
(defun nu-rewriter-mode nu-rewriter-mode28496,1145802
(defun case-split-limitations case-split-limitations28516,1146767
(defmacro sr-limit sr-limit28545,1147962
(defmacro case-limit case-limit28548,1148030
(defmacro set-case-split-limitations set-case-split-limitations28552,1148118
(defmacro set-case-split-limitations set-case-split-limitations28698,1155301
(defconst *initial-acl2-defaults-table**initial-acl2-defaults-table*28709,1155773
(defun binop-table binop-table28714,1155921
(defmacro add-binop add-binop28748,1156732
(defmacro remove-binop remove-binop28775,1157726
(defun match-free-default match-free-default28808,1159021
(defmacro set-match-free-default set-match-free-default28816,1159346
(defmacro set-match-free-default set-match-free-default28873,1162051
(defmacro set-match-free-error set-match-free-error28877,1162119
(defun match-free-override match-free-override28921,1164136
(defmacro add-match-free-override add-match-free-override28939,1164889
(defmacro add-match-free-override add-match-free-override29125,1174036
(defmacro add-include-book-dir add-include-book-dir29130,1174144
(defmacro add-include-book-dir add-include-book-dir29167,1175711
(defmacro delete-include-book-dir delete-include-book-dir29172,1175814
(defmacro delete-include-book-dir delete-include-book-dir29203,1177038
(defconst *non-linear-rounds-value* *non-linear-rounds-value*29209,1177188
(defun non-linearp non-linearp29211,1177228
(defmacro set-non-linearp set-non-linearp29222,1177558
(defmacro set-non-linearp set-non-linearp29246,1178252
(defmacro defttag defttag29251,1178340
(defmacro defttag defttag29426,1187762
(defdoc complex-rationalpcomplex-rationalp29433,1187924
(deflabel letlet29447,1188369
(defun-one-output what-is-the-global-state what-is-the-global-state29573,1193957
(deflabel macro-aliases-tablemacro-aliases-table29640,1197112
(defun macro-aliases macro-aliases29723,1200233
(defmacro add-macro-alias add-macro-alias29727,1200346
(defmacro remove-macro-alias remove-macro-alias29753,1201208
(deflabel nth-aliases-tablenth-aliases-table29786,1202551
(defun nth-aliases nth-aliases29826,1203956
(defmacro add-nth-alias add-nth-alias29830,1204065
(defmacro remove-nth-alias remove-nth-alias29851,1204692
(deflabel default-hints-tabledefault-hints-table29887,1206324
(defun default-hints default-hints29912,1207135
(defmacro set-default-hints set-default-hints29935,1208055
(defmacro set-default-hints! set-default-hints!29990,1210285
(defmacro set-default-hints! set-default-hints!30008,1210954
(defmacro add-default-hints add-default-hints30012,1211022
(defmacro add-default-hints! add-default-hints!30051,1212526
(defmacro add-default-hints! add-default-hints!30069,1213246
(defmacro remove-default-hints remove-default-hints30073,1213314
(defmacro remove-default-hints! remove-default-hints!30111,1214755
(defmacro remove-default-hints! remove-default-hints!30129,1215506
(defun fix-true-list fix-true-list30133,1215577
(defun boolean-listp boolean-listp30149,1215977
(defthm boolean-listp-consboolean-listp-cons30160,1216295
(defthm boolean-listp-forwardboolean-listp-forward30169,1216548
(defthm boolean-listp-forward-to-symbol-listpboolean-listp-forward-to-symbol-listp30179,1216811
(defaxiom completion-of-+completion-of-+30197,1217589
(defthm default-+-1default-+-130208,1217828
(defthm default-+-2default-+-230213,1217961
(defaxiom completion-of-*completion-of-*30218,1218094
(defthm default-*-1default-*-130227,1218281
(defthm default-*-2default-*-230231,1218367
(defaxiom completion-of-unary-minuscompletion-of-unary-minus30235,1218453
(defthm default-unary-minusdefault-unary-minus30242,1218590
(defaxiom completion-of-unary-/completion-of-unary-/30246,1218682
(defthm default-unary-/default-unary-/30254,1218857
(defaxiom completion-of-<completion-of-<30261,1219037
(defthm default-<-1default-<-130273,1219461
(defthm default-<-2default-<-230282,1219694
(defaxiom completion-of-carcompletion-of-car30291,1219927
(defthm default-cardefault-car30299,1220070
(defaxiom completion-of-cdrcompletion-of-cdr30303,1220151
(defthm default-cdrdefault-cdr30311,1220294
(defthm cons-car-cdrcons-car-cdr30315,1220375
(defaxiom completion-of-char-codecompletion-of-char-code30321,1220496
(defthm default-char-codedefault-char-code30328,1220645
(defaxiom completion-of-code-charcompletion-of-code-char30333,1220790
(defthm default-code-chardefault-code-char30343,1221070
(defaxiom completion-of-complexcompletion-of-complex30354,1221373
(defthm default-complex-1default-complex-130362,1221600
(defthm default-complex-2default-complex-230370,1221833
(defthm complex-0complex-030379,1222155
(defthm add-def-complexadd-def-complex30387,1222370
(defthm realpart-+realpart-+30402,1223045
(defthm imagpart-+imagpart-+30407,1223175
(defaxiom completion-of-coercecompletion-of-coerce30412,1223305
(defthm default-coerce-1default-coerce-130423,1223568
(defthm make-character-list-make-character-listmake-character-list-make-character-list30429,1223751
(defthm default-coerce-2default-coerce-230433,1223890
(defthm default-coerce-3default-coerce-330447,1224448
(defaxiom completion-of-denominatorcompletion-of-denominator30453,1224632
(defthm default-denominatordefault-denominator30460,1224786
(defaxiom completion-of-floor1completion-of-floor130471,1225168
(defthm default-floor1default-floor130482,1225418
(defaxiom floor1-integer-xfloor1-integer-x30490,1225624
(defaxiom floor1-x-<=-xfloor1-x-<=-x30497,1225807
(defaxiom x-<-add1-floor1-xx-<-add1-floor1-x30505,1226001
(defthm floor1-valuefloor1-value30515,1226320
(defaxiom completion-of-imagpartcompletion-of-imagpart30523,1226510
(defthm default-imagpartdefault-imagpart30530,1226658
(defaxiom completion-of-intern-in-package-of-symbolcompletion-of-intern-in-package-of-symbol30535,1226772
(defthm default-intern-in-package-of-symboldefault-intern-in-package-of-symbol30548,1227223
(defaxiom completion-of-numeratorcompletion-of-numerator30556,1227483
(defthm default-numeratordefault-numerator30563,1227631
(defaxiom completion-of-realpartcompletion-of-realpart30568,1227744
(defthm default-realpartdefault-realpart30575,1227892
(defaxiom completion-of-symbol-namecompletion-of-symbol-name30580,1228006
(defthm default-symbol-namedefault-symbol-name30587,1228159
(defaxiom completion-of-symbol-package-namecompletion-of-symbol-package-name30593,1228326
(defthm default-symbol-package-namedefault-symbol-package-name30600,1228503
(defdoc i-smalli-small30609,1228783
(defdoc i-closei-close30618,1229032
(defdoc i-largei-large30626,1229287
(defdoc i-limitedi-limited30635,1229550
(defdoc standard-numberpstandard-numberp30644,1229798
(defdoc standard-partstandard-part30662,1230592
(defun i-small i-small30674,1230947
(defun i-close i-close30678,1231028
(defun i-large i-large30683,1231126
(defmacro i-limited i-limited30688,1231220
(defaxiom i-large-integer-is-largei-large-integer-is-large30695,1231435
(defaxiom standard-numberp-plusstandard-numberp-plus30701,1231635
(defaxiom standard-numberp-uminusstandard-numberp-uminus30706,1231783
(defaxiom standard-numberp-timesstandard-numberp-times30710,1231890
(defaxiom standard-numberp-udividestandard-numberp-udivide30715,1232039
(defaxiom standard-numberp-complexstandard-numberp-complex30719,1232147
(defaxiom standard-numberp-onestandard-numberp-one30727,1232500
(defaxiom standard-part-of-standard-numberpstandard-part-of-standard-numberp30733,1232638
(defaxiom standardp-standard-partstandardp-standard-part30737,1232756
(defaxiom standard-part-of-reals-is-idempotentstandard-part-of-reals-is-idempotent30741,1232866
(defaxiom standard-part-of-complexstandard-part-of-complex30746,1233026
(defaxiom standard-part-of-plusstandard-part-of-plus30752,1233204
(defaxiom standard-part-of-uminusstandard-part-of-uminus30757,1233334
(defaxiom standard-part-of-timesstandard-part-of-times30761,1233433
(defaxiom standard-part-of-udividestandard-part-of-udivide30766,1233615
(defaxiom standard-part-<=standard-part-<=30772,1233799
(defaxiom small-are-limitedsmall-are-limited30778,1233959
(defaxiom standards-are-limitedstandards-are-limited30785,1234135
(defthm standard-constants-are-limitedstandard-constants-are-limited30790,1234272
(defaxiom limited-integers-are-standardlimited-integers-are-standard30797,1234497
(defaxiom standard+small->i-limitedstandard+small->i-limited30804,1234740
(defdoc acl2-numberpacl2-numberp30812,1234931
(defdoc ++30820,1235134
(defdoc binary-+binary-+30836,1235440
(defdoc binary-*binary-*30862,1236025
(defdoc --30886,1236564
(defdoc unary--unary--30915,1237052
(defdoc unary-/unary-/30937,1237521
(defdoc <<30961,1238054
(defdoc carcar30991,1238940
(defdoc cdrcdr31010,1239325
(defdoc char-codechar-code31029,1239712
(defdoc characterpcharacterp31047,1240062
(defdoc code-charcode-char31055,1240227
(defdoc complexcomplex31078,1240749
(defdoc conscons31126,1242534
(defdoc conspconsp31135,1242814
(defdoc coercecoerce31142,1242972
(defdoc denominatordenominator31168,1243499
(defdoc equalequal31186,1243806
(defdoc ifif31197,1244084
(defdoc imagpartimagpart31213,1244493
(defdoc integerpintegerp31231,1244794
(defdoc intern-in-package-of-symbolintern-in-package-of-symbol31238,1244950
(defdoc numeratornumerator31294,1247114
(defdoc rationalprationalp31312,1247414
(defdoc realpartrealpart31320,1247607
(defdoc stringpstringp31338,1247903
(defdoc symbol-namesymbol-name31345,1248049
(defdoc symbol-package-namesymbol-package-name31363,1248352
(defdoc symbolpsymbolp31386,1249091
(defun double-rewrite double-rewrite31393,1249237
(defparameter *acl2-time-limit* *acl2-time-limit*31619,1259882
(defun with-prover-time-limit with-prover-time-limit31622,1259937
(defmacro with-prover-time-limit with-prover-time-limit31713,1264202
(defparameter *time-limit-tags* *time-limit-tags*31731,1264934
(defmacro catch-time-limit4 catch-time-limit431733,1264972
(defun time-limit4-reached-p time-limit4-reached-p31752,1265841
(deftheory definition-minimal-theorydefinition-minimal-theory31786,1267446
(deftheory executable-counterpart-minimal-theoryexecutable-counterpart-minimal-theory31792,1267556
(deftheory minimal-theoryminimal-theory31798,1267683
(defparameter *wormhole-outputs* *wormhole-outputs*31836,1269214
(defparameter *inhibit-wormhole-activityp* *inhibit-wormhole-activityp*31839,1269270
(defun wormhole1 wormhole131841,1269319
(defun wormhole-p wormhole-p31927,1272945
(defun abort! abort!31943,1273370
(defun fmt-to-comment-window fmt-to-comment-window31971,1274209
(defun pairlis2 pairlis232012,1275746
(defmacro cw cw32020,1276030
(defun duplicates duplicates32101,1278932
(defun add-to-set-equal add-to-set-equal32108,1279165
(defun intersection-eq intersection-eq32132,1279972
(defun evens evens32142,1280286
(defun odds odds32148,1280432
(defun set-equalp-equal set-equalp-equal32152,1280510
(defparameter *metafunction-context* *metafunction-context*32278,1286913
(defun mfc-clause mfc-clause32293,1287696
(defun type-alist-entryp type-alist-entryp32351,1290121
(defun type-alistp type-alistp32367,1290609
(defun mfc-type-alist mfc-type-alist32374,1290768
(defun mfc-ancestors mfc-ancestors32393,1291196
(defthm pseudo-term-listp-mfc-clausepseudo-term-listp-mfc-clause32420,1291902
(defthm type-alistp-mfc-type-alisttype-alistp-mfc-type-alist32423,1291980
(defun bad-atom bad-atom32458,1293972
(defthm bad-atom-compound-recognizerbad-atom-compound-recognizer32466,1294146
(defun-one-output bad-atom<= bad-atom<=32478,1294440
(defaxiom booleanp-bad-atom<=booleanp-bad-atom<=32487,1294794
(defaxiom bad-atom<=-antisymmetricbad-atom<=-antisymmetric32492,1294930
(defaxiom bad-atom<=-transitivebad-atom<=-transitive32500,1295136
(defaxiom bad-atom<=-totalbad-atom<=-total32509,1295399
(defun alphorder alphorder32519,1295669
(defun lexorder lexorder32593,1298212
(defthm alphorder-reflexivealphorder-reflexive32656,1300204
(defthm alphorder-transitivealphorder-transitive32673,1300721
(defthm alphorder-anti-symmetricalphorder-anti-symmetric32684,1301056
(defthm alphorder-totalalphorder-total32708,1302076
(defthm lexorder-reflexivelexorder-reflexive32723,1302614
(defthm lexorder-anti-symmetriclexorder-anti-symmetric32726,1302660
(defthm lexorder-transitivelexorder-transitive32731,1302801
(defthm lexorder-totallexorder-total32736,1302951
(defdoc bddbdd32756,1303706
(defun if* if*32790,1305156
(defun resize-list resize-list32974,1312310
(deflabel theory-functionstheory-functions32990,1312821
(defun e/d-fn e/d-fn33025,1314444
(defmacro e/d e/d33036,1314965
(defmacro assert$ assert$33076,1316427
(defconst *ld-special-error**ld-special-error*33098,1316998
(defun chk-ld-skip-proofsp chk-ld-skip-proofsp33102,1317112
(defun set-ld-skip-proofsp set-ld-skip-proofsp33116,1317587
(defun mod-expt mod-expt33161,1318907
(deftheory ground-zero ground-zero33199,1320266

basis.lisp,21085
(defun enforce-redundancy-er-args enforce-redundancy-er-args32,1342
(defmacro enforce-redundancy enforce-redundancy41,1805
(defvar *last-sys-call-status* *last-sys-call-status*67,2899
(defun sys-call sys-call69,2934
(defun sys-call-status sys-call-status161,6469
(defun-one-output gc$-fn gc$-fn204,8175
(defun gc$-fn gc$-fn225,8872
(defmacro gc$ gc$229,8927
(defdoc gclgcl253,9713
(defmacro wormhole wormhole330,12470
(defmacro assign-wormhole-output assign-wormhole-output685,32948
(defun global-set global-set778,37342
(defun defabbrev1 defabbrev1783,37507
(defmacro er er789,37709
(defun legal-variable-or-constant-namep legal-variable-or-constant-namep884,41893
(defun legal-constantp1 legal-constantp1950,44810
(defun tilde-@-illegal-variable-or-constant-name-phrase tilde-@-illegal-variable-or-constant-name-phrase965,45307
(defun legal-constantp legal-constantp996,46986
(defun defined-constant defined-constant1006,47300
(defun legal-variablep legal-variablep1023,48039
(defun lambda-keywordp lambda-keywordp1031,48324
(defun no-lambda-keywordsp no-lambda-keywordsp1035,48419
(defun arglistp1 arglistp11042,48617
(defun arglistp arglistp1050,48806
(defun find-first-bad-arg find-first-bad-arg1054,48882
(defun process-defabbrev-declares process-defabbrev-declares1082,50251
(defmacro defabbrev defabbrev1105,51307
(defconst *primitive-formals-and-guards**primitive-formals-and-guards*1242,57579
(defconst *t* *t*1311,60070
(defconst *true-clause* *true-clause*1313,60104
(defconst *nil* *nil*1315,60141
(defconst *0* *0*1317,60179
(defconst *1* *1*1319,60213
(defconst *-1* *-1*1321,60247
(defconst *cons-term1-alist**cons-term1-alist*1327,60478
(defmacro cons-term2-body cons-term2-body1430,64606
(defun cons-term2 cons-term21437,64779
(defmacro cons-term1 cons-term11440,64829
(defun quote-listp quote-listp1456,65465
(defun cons-term cons-term1462,65627
(defmacro cons-term* cons-term*1467,65743
(defmacro mcons-term mcons-term1470,65815
(defmacro mcons-term* mcons-term*1477,65992
(defmacro fcons-term* fcons-term*1484,66183
(defmacro fcons-term fcons-term1503,66843
(defun fargn1 fargn11522,67486
(defmacro fargn fargn1528,67670
(defun cdr-nest cdr-nest1531,67721
(defun all-but-last all-but-last1535,67795
(defun equal-x-constant equal-x-constant1540,67924
(defun match-tests-and-bindings match-tests-and-bindings1556,68391
(defun match-clause match-clause1630,71715
(defun match-clause-list match-clause-list1638,71963
(defmacro case-match case-match1646,72274
(defconst *evisceration-mark* *evisceration-mark*1759,77361
(defconst *evisceration-hash-mark* *evisceration-hash-mark*1769,77862
(defconst *evisceration-ellipsis-mark* *evisceration-ellipsis-mark*1770,77929
(defconst *evisceration-world-mark**evisceration-world-mark*1771,78002
(defconst *evisceration-state-mark**evisceration-state-mark*1773,78078
(defconst *evisceration-error-triple-marks**evisceration-error-triple-marks*1775,78154
(defconst *evisceration-hiding-mark**evisceration-hiding-mark*1777,78242
(defconst *anti-evisceration-mark**anti-evisceration-mark*1780,78321
(defmacro evisceratedp evisceratedp1783,78408
(defun eviscerate1 eviscerate11795,78861
(defun eviscerate1-lst eviscerate1-lst1808,79413
(defun eviscerate1p eviscerate1p1826,80023
(defun eviscerate1p-lst eviscerate1p-lst1841,80580
(defun eviscerate eviscerate1851,80918
(defun world-evisceration-alist world-evisceration-alist1899,82772
(defun stobj-print-name stobj-print-name1903,82886
(defun evisceration-stobj-mark evisceration-stobj-mark1910,83050
(defun evisceration-stobj-marks1 evisceration-stobj-marks11922,83362
(defun evisceration-stobj-marks evisceration-stobj-marks1934,83770
(defun eviscerate-stobjs1 eviscerate-stobjs11942,84076
(defun eviscerate-stobjs eviscerate-stobjs1958,84775
(defmacro mv-letc mv-letc2081,90279
(defmacro fixnum-bound fixnum-bound2086,90406
(defmacro er-hard-val er-hard-val2089,90453
(defmacro the-fixnum! the-fixnum!2099,90795
(defmacro the-half-fixnum! the-half-fixnum!2117,91369
(defmacro the-string! the-string!2135,92000
(defun xxxjoin-fixnum xxxjoin-fixnum2142,92164
(defmacro +f +f2157,92568
(defmacro -f -f2160,92625
(defmacro 1-f 1-f2166,92799
(defmacro 1+f 1+f2170,92880
(defmacro charf charf2174,92961
(defun keyword-param-valuep keyword-param-valuep2475,105055
(defun cons-ppr1 cons-ppr12496,106017
(defun flsz-integer flsz-integer2644,111940
(defun flsz-atom flsz-atom2654,112318
(defun flsz1 flsz12733,115609
(defun output-in-infixp output-in-infixp2761,116715
(defun-one-output flatsize-infix flatsize-infix2766,116854
(defun flsz flsz2784,117564
(defun max-width max-width2794,117937
(defun ppr1 ppr12802,118148
(defun ppr1-lst ppr1-lst2900,122379
(defun newline newline2944,124137
(defun fmt-hard-right-margin fmt-hard-right-margin2947,124205
(defun fmt-soft-right-margin fmt-soft-right-margin2951,124306
(defun set-fmt-hard-right-margin set-fmt-hard-right-margin2955,124407
(defun set-fmt-soft-right-margin set-fmt-soft-right-margin2969,124877
(defun write-for-read write-for-read2983,125347
(defun spaces1 spaces12987,125471
(defun make-spaces-array-rec make-spaces-array-rec3004,126192
(defun make-spaces-array make-spaces-array3014,126419
(defconst *acl2-built-in-spaces-array**acl2-built-in-spaces-array*3023,126725
(defun spaces spaces3029,126848
(defun flpr1 flpr13052,127605
(defun flpr11 flpr113065,128068
(defun-one-output print-flat-infix print-flat-infix3082,128571
(defun flpr flpr3096,129079
(defun ppr2-flat ppr2-flat3108,129482
(defun ppr2-column ppr2-column3128,130134
(defun ppr2 ppr23145,130834
(defconst *fmt-ppr-indentation* *fmt-ppr-indentation*3193,132795
(defun ppr ppr3195,132831
(defun scan-past-whitespace scan-past-whitespace3221,133855
(defun zero-one-or-more zero-one-or-more3231,134182
(defun find-alternative-skip find-alternative-skip3239,134351
(defun find-alternative-start1 find-alternative-start13277,135827
(defun fmt-char fmt-char3320,137787
(defun find-alternative-start find-alternative-start3337,138397
(defun find-alternative-stop find-alternative-stop3369,139867
(defun punctp punctp3405,141382
(defun fmt-symbol-name1 fmt-symbol-name13410,141471
(defun fmt-var fmt-var3465,143930
(defun splat-atom splat-atom3477,144496
(defun splat splat3495,145203
(defun splat1 splat13506,145673
(defun number-of-digits number-of-digits3541,147398
(defun left-pad-with-blanks left-pad-with-blanks3552,147766
(defmacro maybe-newline maybe-newline3571,148475
(defun evisc-tuple evisc-tuple3598,149720
(defun standard-evisc-tuplep standard-evisc-tuplep3623,150603
(defparameter *approved-user-default-evisc-tuple* *approved-user-default-evisc-tuple*3638,150989
(defun user-default-evisc-tuple user-default-evisc-tuple3640,151045
(defun default-evisc-tuple default-evisc-tuple3657,151783
(defparameter *approved-user-term-evisc-tuple* *approved-user-term-evisc-tuple*3665,152012
(defun user-term-evisc-tuple user-term-evisc-tuple3667,152065
(defun term-evisc-tuple term-evisc-tuple3684,152779
(deflabel eviscerate-hide-termseviscerate-hide-terms3711,153920
(defun-one-output print-infix print-infix3728,154422
(defun fmt-ppr fmt-ppr3768,156316
(defun fmt0* fmt0*3785,156834
(defun fmt0&v fmt0&v3824,158626
(defun spell-number spell-number3870,160612
(defun fmt-symbol-name fmt-symbol-name3940,164116
(defun fmt0 fmt04002,166485
(defun tilde-*-&v-strings tilde-*-&v-strings4584,197777
(defun fmt1 fmt14629,199716
(defun fmt fmt4665,200941
(defun fms fms5080,219531
(defun fmt1! fmt1!5098,220006
(defun fmt! fmt!5121,220840
(defun fms! fms!5144,221650
(defmacro fmx fmx5166,222424
(defun fmt-doc-example1 fmt-doc-example15173,222689
(defun fmt-doc-example fmt-doc-example5181,222999
(defconst *fmt-ctx-spacers**fmt-ctx-spacers*5202,224090
(defun fmt-ctx fmt-ctx5230,224594
(defun fmt-in-ctx fmt-in-ctx5266,226122
(defun error-fms error-fms5282,226663
(defun push-warning-frame push-warning-frame5312,228004
(defun absorb-frame absorb-frame5317,228171
(defun pop-warning-frame pop-warning-frame5323,228293
(defun push-warning push-warning5343,229123
(defun member-string-equal member-string-equal5366,230058
(defabbrev flambda-applicationp flambda-applicationp5372,230213
(defabbrev lambda-applicationp lambda-applicationp5378,230313
(defabbrev flambdap flambdap5382,230409
(defabbrev lambda-formals lambda-formals5388,230499
(defabbrev lambda-body lambda-body5390,230540
(defabbrev make-lambda make-lambda5392,230579
(defabbrev make-let make-let5395,230643
(defmacro er-let* er-let*5398,230709
(defmacro match match5422,231618
(defmacro match! match!5425,231680
(defconst *non-standard-primitives**non-standard-primitives*5433,231933
(defun def-basic-type-sets1 def-basic-type-sets15438,232031
(defmacro def-basic-type-sets def-basic-type-sets5445,232324
(defun list-of-the-type-set list-of-the-type-set5459,232792
(defmacro ts= ts=5465,232954
(defmacro ts-complement0 ts-complement05471,233162
(defmacro ts-complementp ts-complementp5474,233254
(defun ts-union0-fn ts-union0-fn5477,233304
(defmacro ts-union0 ts-union05484,233517
(defmacro ts-intersection0 ts-intersection05488,233610
(defmacro ts-intersectp ts-intersectp5492,233720
(defun ts-builder-case-listp ts-builder-case-listp5499,234044
(defun ts-builder-macro1 ts-builder-macro15532,235417
(defun ts-builder-macro ts-builder-macro5552,236392
(defmacro ts-builder ts-builder5558,236601
(defun standard-guard standard-guard5566,236838
(defun standard-guard-lst standard-guard-lst5588,237758
(defmacro std std5595,237973
(defabbrev strip-not strip-not5606,238387
(defun record-maker-function-name record-maker-function-name5830,246782
(defun record-accessor-function-name record-accessor-function-name5838,247025
(defun record-changer-function-name record-changer-function-name5848,247316
(defmacro make make5857,247553
(defmacro access access5865,247877
(defmacro change change5874,248217
(defun record-error record-error5882,248550
(defun make-record-car-cdrs1 make-record-car-cdrs15887,248690
(defun make-record-car-cdrs make-record-car-cdrs5891,248824
(defun make-record-accessors make-record-accessors5900,249283
(defun symbol-name-tree-occur symbol-name-tree-occur5924,250440
(defun some-symbol-name-tree-occur some-symbol-name-tree-occur5940,251028
(defun make-record-changer-cons make-record-changer-cons5945,251227
(defun make-record-changer-let-bindings make-record-changer-let-bindings5964,251973
(defun make-record-changer-let make-record-changer-let5986,253011
(defun make-record-changer make-record-changer6012,254207
(defun make-record-maker-cons make-record-maker-cons6023,254521
(defun make-record-maker-let make-record-maker-let6050,255715
(defun make-record-maker make-record-maker6063,256191
(defun make-record-field-lst make-record-field-lst6073,256467
(defun record-macros record-macros6080,256751
(defmacro defrec defrec6098,257644
(defabbrev equalityp equalityp6101,257725
(defabbrev inequalityp inequalityp6112,258089
(defabbrev consityp consityp6123,258451
(defun power-rep power-rep6132,258675
(defun decode-idate decode-idate6138,258787
(defun pcd2 pcd26161,259562
(defun print-idate print-idate6168,259778
(defun print-current-idate print-current-idate6196,260714
(defconst *window-descriptions**window-descriptions*6251,263771
(defun io?-nil-output io?-nil-output6269,264367
(defmacro check-exact-free-vars check-exact-free-vars6276,264659
(defun formal-bindings formal-bindings6303,265788
(defrec io-recordio-record6315,266135
(defmacro io-record-forms io-record-forms6322,266250
(defun push-io-record push-io-record6329,266407
(defun saved-output-token-p saved-output-token-p6337,266710
(defmacro io? io?6342,266940
(defun output-ignored-p output-ignored-p6464,272785
(defun error1 error16469,272958
(defconst *uninhibited-warning-summaries**uninhibited-warning-summaries*6508,274336
(defun warning-off-p warning-off-p6515,274467
(defun warning1-body warning1-body6535,275295
(defun warning1 warning16556,275984
(defmacro warning$ warning$6584,276949
(defmacro warning-disabled-p warning-disabled-p6608,277952
(defun observation1 observation16622,278428
(defmacro observation observation6642,279243
(defun skip-when-logic skip-when-logic6662,279841
(defconst *check-sum-exclusive-maximum* *check-sum-exclusive-maximum*6684,280871
(defconst *check-length-exclusive-maximum* *check-length-exclusive-maximum*6688,281022
(defconst *-check-sum-exclusive-maximum* *-check-sum-exclusive-maximum*6696,281294
(defconst *1-check-length-exclusive-maximum**1-check-length-exclusive-maximum*6698,281371
(defun ascii-code! ascii-code!6701,281458
(defun check-sum1 check-sum16710,281604
(defun check-sum check-sum6736,282958
(defun check-sum-inc check-sum-inc6784,285409
(defun check-sum-natural check-sum-natural6815,286886
(defun check-sum-string1 check-sum-string16822,287178
(defun check-sum-string2 check-sum-string26840,287932
(defun check-sum-string check-sum-string6862,288821
(defun check-sum-obj1 check-sum-obj16868,289070
(defun check-sum-obj check-sum-obj6909,290969
(defun read-file-iterate read-file-iterate6942,292492
(defun read-file read-file6949,292714
(defun formals formals6959,293080
(defun arity arity6970,293492
(defun stobjs-in stobjs-in6976,293716
(defun stobjs-out stobjs-out6989,294027
(deflabel user-defined-functions-tableuser-defined-functions-table7000,294322
(defun all-nils all-nils7078,297593
(defconst *user-defined-functions-table-keys**user-defined-functions-table-keys*7084,297759
(defrec def-bodydef-body7095,298157
(defun latest-body latest-body7109,298496
(defun def-body def-body7115,298637
(defun body body7118,298727
(defun symbol-class symbol-class7143,300018
(defmacro fdefun-mode fdefun-mode7194,302811
(defmacro programp programp7202,302977
(defmacro logicalp logicalp7205,303050
(defun program-termp program-termp7210,303148
(defun program-term-listp program-term-listp7219,303493
(deflabel defun-mode-caveatdefun-mode-caveat7225,303659
(deflabel generalized-booleansgeneralized-booleans7318,308059
(defun defun-mode defun-mode7424,311900
(defun get-stobj-recognizer get-stobj-recognizer7571,318884
(defun stobj-recognizer-terms stobj-recognizer-terms7582,319307
(defun mcons-term-smart mcons-term-smart7592,319733
(defun optimize-stobj-recognizers1 optimize-stobj-recognizers17605,320061
(defun optimize-stobj-recognizers1-lst optimize-stobj-recognizers1-lst7649,321962
(defun optimize-stobj-recognizers optimize-stobj-recognizers7657,322314
(defun collect-non-x collect-non-x7677,323125
(defun guard guard7696,323955
(deflabel guard-quick-referenceguard-quick-reference7762,326738
(deflabel guard-introductionguard-introduction7836,329396
(deflabel guards-and-evaluationguards-and-evaluation7882,331646
(deflabel guards-for-specificationguards-for-specification8263,348482
(deflabel guard-miscellanyguard-miscellany8320,350845
(deflabel guard-evaluation-examples-scriptguard-evaluation-examples-script8385,354458
(deflabel guard-evaluation-examples-logguard-evaluation-examples-log8547,359983
(deflabel guard-evaluation-tableguard-evaluation-table9329,381413
(defun guard-lst guard-lst9434,386904
(defmacro equivalence-relationp equivalence-relationp9439,387070
(defun >=-len >=-len9464,388067
(defun all->=-len all->=-len9472,388235
(defun strip-cadrs strip-cadrs9479,388424
(defun strip-cddrs strip-cddrs9486,388624
(defun doubleton-list-p doubleton-list-p9491,388768
(defun global-set-lst global-set-lst9497,388955
(defun sublis-var sublis-var9506,389231
(defun sublis-var-lst sublis-var-lst9535,390344
(defun subcor-var1 subcor-var19545,390593
(defun subcor-var subcor-var9556,390985
(defun subcor-var-lst subcor-var-lst9568,391437
(defun conjoin2 conjoin29575,391623
(defun conjoin conjoin9588,392092
(defun cons-count-ac cons-count-ac9593,392219
(defun cons-count cons-count9597,392337
(defun car-cdr-nest1 car-cdr-nest19603,392497
(defun car-cdr-nest car-cdr-nest9617,393005
(defun collect-non-trivial-bindings collect-non-trivial-bindings9640,393710
(defun untranslate-and untranslate-and9647,394004
(defun untranslate-or untranslate-or9661,394399
(defun case-length case-length9671,394662
(defun cond-length cond-length9705,396007
(defconst *untranslate-boolean-primitives**untranslate-boolean-primitives*9713,396241
(defun right-associated-args right-associated-args9716,396297
(defun dumb-negate-lit dumb-negate-lit9730,396809
(defun term-stobjs-out-alist term-stobjs-out-alist9749,397393
(defun term-stobjs-out term-stobjs-out9758,397690
(defun accessor-root accessor-root9795,399056
(defun ld-redefinition-action ld-redefinition-action9841,401341
(deflabel redefining-programsredefining-programs10008,410817
(defun chk-ld-redefinition-action chk-ld-redefinition-action10137,417510
(defun set-ld-redefinition-action set-ld-redefinition-action10145,417851
(defmacro redef redef10152,418063
(defmacro redef! redef!10173,418805
(defun chk-current-package chk-current-package10200,419699
(defun set-current-package set-current-package10205,419906
(defun standard-oi standard-oi10216,420181
(defun read-standard-oi read-standard-oi10242,421397
(defun chk-standard-oi chk-standard-oi10255,421885
(defun set-standard-oi set-standard-oi10268,422259
(defun standard-co standard-co10274,422451
(defun chk-standard-co chk-standard-co10296,423394
(defun set-standard-co set-standard-co10303,423596
(defun proofs-co proofs-co10310,423764
(defun chk-proofs-co chk-proofs-co10328,424388
(defun set-proofs-co set-proofs-co10335,424586
(deflabel promptprompt10342,424746
(defun ld-prompt ld-prompt10363,425635
(defun chk-ld-prompt chk-ld-prompt10406,427713
(defun set-ld-prompt set-ld-prompt10417,428129
(defun ld-keyword-aliases ld-keyword-aliases10424,428289
(defun ld-keyword-aliasesp ld-keyword-aliasesp10473,430622
(defun chk-ld-keyword-aliases chk-ld-keyword-aliases10500,431622
(defun set-ld-keyword-aliases set-ld-keyword-aliases10505,431807
(defun ld-pre-eval-filter ld-pre-eval-filter10512,432003
(defun new-namep new-namep10542,433445
(defun chk-ld-pre-eval-filter chk-ld-pre-eval-filter10624,436797
(defun set-ld-pre-eval-filter set-ld-pre-eval-filter10634,437211
(defun ld-pre-eval-print ld-pre-eval-print10641,437407
(defun chk-ld-pre-eval-print chk-ld-pre-eval-print10677,439276
(defun set-ld-pre-eval-print set-ld-pre-eval-print10682,439455
(defun ld-post-eval-print ld-post-eval-print10689,439647
(defun chk-ld-post-eval-print chk-ld-post-eval-print10750,443159
(defun set-ld-post-eval-print set-ld-post-eval-print10755,443354
(defun ld-evisc-tuple ld-evisc-tuple10762,443550
(defun chk-ld-evisc-tuple chk-ld-evisc-tuple10806,445829
(defun set-ld-evisc-tuple set-ld-evisc-tuple10812,446027
(defun ld-error-triples ld-error-triples10819,446207
(defun chk-ld-error-triples chk-ld-error-triples10844,447353
(defun set-ld-error-triples set-ld-error-triples10849,447523
(defun ld-error-action ld-error-action10856,447711
(defun chk-ld-error-action chk-ld-error-action10885,449170
(defun set-ld-error-action set-ld-error-action10890,449357
(defun ld-query-control-alist ld-query-control-alist10897,449541
(defun ld-query-control-alistp ld-query-control-alistp10955,452784
(defun cdr-assoc-query-id cdr-assoc-query-id10969,453274
(defun chk-ld-query-control-alist chk-ld-query-control-alist10974,453435
(defun set-ld-query-control-alist set-ld-query-control-alist10980,453615
(defun ld-verbose ld-verbose10987,453827
(defun chk-ld-verbose chk-ld-verbose11018,455266
(defun set-ld-verbose set-ld-verbose11027,455543
(defconst *nqthm-to-acl2-primitives**nqthm-to-acl2-primitives*11034,455707
(defconst *nqthm-to-acl2-commands**nqthm-to-acl2-commands*11102,457675
(defun nqthm-to-acl2-fn nqthm-to-acl2-fn11194,461375
(defun print-nqthm-to-acl2-doc1 print-nqthm-to-acl2-doc111261,463881
(defun print-nqthm-to-acl2-doc print-nqthm-to-acl2-doc11295,465061
(defmacro nqthm-to-acl2 nqthm-to-acl211315,465813
(defun allocate-fixnum-range allocate-fixnum-range11523,473871
(defmacro allegro-allocate-slowly allegro-allocate-slowly11582,476654
(defun allegro-allocate-slowly-fn allegro-allocate-slowly-fn11591,477213
(defmacro clear-pstk clear-pstk11628,478830
(defconst *pstk-vars**pstk-vars*11635,479010
(defun pstk-bindings-and-args pstk-bindings-and-args11647,479185
(defmacro pstk pstk11679,480332
(defun pstack-fn pstack-fn11723,482011
(defmacro pstack pstack11742,482601
(defun verbose-pstack verbose-pstack11811,485041
(defmacro checkpoints checkpoints11841,486188
(defun print-checkpoints print-checkpoints11847,486375

translate.lisp,7536
(deflabel syntaxsyntax29,1205
(deflabel termterm47,1675
(defun termp termp231,11234
(defun term-listp term-listp257,12103
(defun kwote-lst kwote-lst264,12233
(defun macro-args macro-args268,12343
(defconst *macro-expansion-ctx* *macro-expansion-ctx*347,14686
(defun chk-length-and-keys chk-length-and-keys349,14738
(defun remove-keyword remove-keyword370,15567
(defun bind-macro-args-keys1 bind-macro-args-keys1376,15760
(defun bind-macro-args-keys bind-macro-args-keys431,18433
(defun bind-macro-args-after-rest bind-macro-args-after-rest448,19235
(defun bind-macro-args-optional bind-macro-args-optional458,19597
(defun bind-macro-args1 bind-macro-args1493,21046
(defun bind-macro-args bind-macro-args518,22088
(defun ev-fncall-null-body-er ev-fncall-null-body-er526,22408
(defconst *safe-mode-guard-er-addendum**safe-mode-guard-er-addendum*531,22542
(defun error-trace-suggestion error-trace-suggestion536,22776
(defun find-first-non-nil find-first-non-nil540,22918
(defun latch-stobjs1 latch-stobjs1547,23116
(defun latch-stobjs latch-stobjs594,25437
(defvar *raw-guard-warningp*)*raw-guard-warningp*619,26666
(defun raw-ev-fncall raw-ev-fncall622,26714
(defun translated-acl2-unwind-protectp4 translated-acl2-unwind-protectp4697,30182
(defun translated-acl2-unwind-protectp translated-acl2-unwind-protectp772,33809
(defun stobjp stobjp783,34213
(defun acl2-system-namep acl2-system-namep1093,47056
(defparameter *ev-shortcut-okp**ev-shortcut-okp*1176,49968
(defun w-of-any-state w-of-any-state1191,50632
(defun untranslate-preprocess-fn untranslate-preprocess-fn1204,51195
(defmacro untranslate* untranslate*1210,51454
(defmacro raw-guard-warningp-binding raw-guard-warningp-binding1226,52105
(defun untouchable-fn-p untouchable-fn-p1254,53626
(defvar *time-call-seen* *time-call-seen*1262,54025
(defun ev-fncall-rec-logical ev-fncall-rec-logical1274,54559
(defun ev-fncall-rec ev-fncall-rec1520,64139
(defun ev-rec ev-rec1553,65512
(defun ev-rec-lst ev-rec-lst1691,71885
(defun ev-rec-acl2-unwind-protect ev-rec-acl2-unwind-protect1722,73228
(defun ev-fncall ev-fncall1946,83195
(defun ev ev1963,84005
(defun ev-lst ev-lst1982,84874
(defun ev-fncall-w ev-fncall-w2003,85797
(defun ev-fncall-guard-er-msg ev-fncall-guard-er-msg2074,88450
(defun ev-fncall-guard-er ev-fncall-guard-er2119,90206
(defun ev-fncall-msg ev-fncall-msg2127,90511
(defun untranslate1 untranslate12200,93672
(defun untranslate-cons1 untranslate-cons12399,103868
(defun untranslate-cons untranslate-cons2419,104858
(defun untranslate-if untranslate-if2430,105299
(defun untranslate-into-case-clauses untranslate-into-case-clauses2449,106250
(defun untranslate-into-cond-clauses untranslate-into-cond-clauses2491,108553
(defun untranslate1-lst untranslate1-lst2506,109284
(defun untranslate untranslate2517,109711
(defun untranslate-lst untranslate-lst2546,110855
(defun ev-w ev-w2586,112494
(defun ev-w-lst ev-w-lst2651,115028
(defun macroexpand1 macroexpand12759,119958
(defun chk-declare chk-declare2812,122398
(defun collect-dcls collect-dcls2832,123343
(defconst *acceptable-dcls-alist**acceptable-dcls-alist*2843,123730
(defconst *documentation-strings-permitted**documentation-strings-permitted*2855,124238
(defconst *dcl-explanation-alist**dcl-explanation-alist*2861,124389
(defun tilde-*-conjunction-phrase1 tilde-*-conjunction-phrase12871,124911
(defun tilde-*-conjunction-phrase tilde-*-conjunction-phrase2882,125389
(defun collect-non-legal-variableps collect-non-legal-variableps2892,125776
(defun optimize-alistp optimize-alistp2898,126004
(defun chk-dcl-lst chk-dcl-lst2911,126425
(defun number-of-strings number-of-strings3058,133838
(defun remove-strings remove-strings3064,134001
(defun get-string get-string3070,134167
(defun collect-declarations collect-declarations3075,134291
(defun listify listify3116,136252
(defun translate-declaration-to-guard-var-lst translate-declaration-to-guard-var-lst3120,136350
(defun translate-dcl-lst translate-dcl-lst3134,137007
(defun dcl-guardian dcl-guardian3148,137603
(defun ignore-vars ignore-vars3181,139140
(defun ignorable-vars ignorable-vars3187,139323
(defun mv-nth-list mv-nth-list3193,139518
(defabbrev translate-bind translate-bind3198,139695
(defun translate-deref translate-deref3204,139830
(defun translate-unbound translate-unbound3220,140396
(defun packn1 packn13228,140600
(defun packn packn3233,140735
(defun packn-pos packn-pos3240,140931
(defun pack2 pack23244,141065
(defun listlis listlis3247,141111
(defun genvar1 genvar13255,141299
(defun genvar genvar3291,143075
(defun find-first-var find-first-var3335,145278
(defun find-first-var-lst find-first-var-lst3343,145516
(defun find-first-fnsymb find-first-fnsymb3351,145688
(defun find-first-fnsymb-lst find-first-fnsymb-lst3359,145962
(defun find-pkg-witness find-pkg-witness3365,146123
(defmacro trans-er trans-er3384,146839
(defmacro trans-value trans-value3391,147053
(defmacro trans-er-let* trans-er-let*3395,147175
(defun hide-ignored-actuals hide-ignored-actuals3418,148078
(defun augment-ignore-vars augment-ignore-vars3444,149047
(defun translate11-error translate11-error3465,150041
(defun compute-stobj-flags compute-stobj-flags3552,154260
(defun compute-inclp-lst1 compute-inclp-lst13565,154753
(defun compute-inclp-lst compute-inclp-lst3573,155076
(defun prettyify-stobj-flags prettyify-stobj-flags3590,155894
(defun unprettyify-stobj-flags unprettyify-stobj-flags3599,156180
(defun prettyify-stobjs-out prettyify-stobjs-out3604,156354
(defun defstobj-supporterp defstobj-supporterp3613,156650
(defun stobj-creatorp stobj-creatorp3628,157279
(defun defstobj-fnname defstobj-fnname3637,157571
(defun parse-with-local-stobj parse-with-local-stobj3694,160114
(defun ffnnamep ffnnamep3712,160546
(defun ffnnamep-lst ffnnamep-lst3726,160999
(defconst *synp-trans-err-string**synp-trans-err-string*3736,161220
(defconst *ttag-fns-and-macros**ttag-fns-and-macros*3742,161568
(defun ttag ttag3761,162160
(defun translate11-mv-let translate11-mv-let3772,162460
(defun translate11 translate113993,173862
(defun translate11-lst translate11-lst4918,220083
(defun translate1 translate15044,226188
(defun collect-programs collect-programs5095,228650
(defun all-fnnames all-fnnames5111,229271
(defun all-fnnames-lst all-fnnames-lst5121,229621
(defun all-fnnames1 all-fnnames15128,229779
(defmacro all-fnnames all-fnnames5146,230394
(defmacro all-fnnames-lst all-fnnames-lst5149,230457
(defun translate translate5152,230520
(defun replaced-stobj replaced-stobj5206,233166
(defun replace-stobjs1 replace-stobjs15212,233335
(defun replace-stobjs replace-stobjs5220,233631
(defun build-alist build-alist5248,234833
(defun non-stobjps non-stobjps5265,235495
(defun user-stobjsp user-stobjsp5272,235746
(defun put-assoc-eq-alist put-assoc-eq-alist5279,235950
(defun-one-output chk-user-stobj-alist chk-user-stobj-alist5316,237662
(defun user-stobj-alist-safe user-stobj-alist-safe5341,238740
(defun trans-eval trans-eval5350,239014
(defun simple-translate-and-eval simple-translate-and-eval5437,242812
(defun tilde-*-alist-phrase1 tilde-*-alist-phrase15524,247205
(defun tilde-*-alist-phrase tilde-*-alist-phrase5529,247449
(defun mapcar$ mapcar$5554,248418
(defun mapdo mapdo5576,249320
(defun always always5589,249777
(defun thereis thereis5603,250192

type-set-a.lisp,2764
(defconst *ts-non-negative-integer* *ts-non-negative-integer*130,6225
(defconst *ts-non-positive-integer* *ts-non-positive-integer*133,6354
(defconst *ts-integer* *ts-integer*136,6483
(defconst *ts-rational* *ts-rational*140,6642
(defconst *ts-real* *ts-real*147,6894
(defconst *ts-complex* *ts-complex*157,7264
(defconst *ts-acl2-number**ts-acl2-number*166,7680
(defconst *ts-rational-acl2-number* *ts-rational-acl2-number*172,7850
(defconst *ts-non-rational-acl2-number* *ts-non-rational-acl2-number*176,8008
(defconst *ts-negative-rational* *ts-negative-rational*180,8238
(defconst *ts-positive-rational* *ts-positive-rational*183,8371
(defconst *ts-non-positive-rational* *ts-non-positive-rational*186,8504
(defconst *ts-non-negative-rational* *ts-non-negative-rational*189,8636
(defconst *ts-ratio* *ts-ratio*192,8768
(defconst *ts-non-ratio* *ts-non-ratio*203,9097
(defconst *ts-negative-real* *ts-negative-real*206,9220
(defconst *ts-positive-real* *ts-positive-real*210,9409
(defconst *ts-non-positive-real* *ts-non-positive-real*214,9598
(defconst *ts-non-negative-real* *ts-non-negative-real*217,9718
(defconst *ts-cons* *ts-cons*221,9840
(defconst *ts-boolean* *ts-boolean*224,9941
(defconst *ts-true-list* *ts-true-list*226,9994
(defconst *ts-non-nil* *ts-non-nil*228,10059
(defconst *ts-symbol* *ts-symbol*230,10110
(defconst *ts-true-list-or-string* *ts-true-list-or-string*234,10254
(defconst *ts-empty* *ts-empty*236,10330
(defconst *ts-unknown* *ts-unknown*238,10355
(defun one-bit-type-setp one-bit-type-setp246,10717
(defconst *code-type-set-alist**code-type-set-alist*284,12371
(defun logior-lst logior-lst368,16017
(defun logand-lst logand-lst374,16147
(defun ts-complement-fn ts-complement-fn382,16296
(defun ts-union-fn ts-union-fn388,16443
(defun ts-intersection-fn ts-intersection-fn398,16751
(defun eval-type-set eval-type-set408,17070
(defun eval-type-set-lst eval-type-set-lst429,17886
(defmacro ts-complement ts-complement442,18204
(defmacro ts-intersection ts-intersection445,18278
(defmacro ts-union ts-union448,18362
(defmacro ts-subsetp ts-subsetp451,18432
(defun type-set-binary-+-alist-entry type-set-binary-+-alist-entry466,18880
(defun type-set-binary-+-alist1 type-set-binary-+-alist1598,25544
(defun type-set-binary-+-alist type-set-binary-+-alist607,25950
(defun type-set-binary-*-alist-entry type-set-binary-*-alist-entry615,26215
(defun type-set-binary-*-alist1 type-set-binary-*-alist1748,33303
(defun type-set-binary-*-alist type-set-binary-*-alist758,33762
(defun type-set-<-alist-entry type-set-<-alist-entry766,34027
(defun type-set-<-alist1 type-set-<-alist1850,38068
(defun type-set-<-alist type-set-<-alist860,38447

linear-a.lisp,7860
(defabbrev ts-acl2-numberp ts-acl2-numberp41,1662
(defabbrev ts-rationalp ts-rationalp44,1731
(defabbrev ts-integerp ts-integerp47,1794
(defun all-quoteps all-quoteps50,1855
(defun dumb-occur dumb-occur57,2002
(defun dumb-occur-lst dumb-occur-lst68,2319
(defrec history-entryhistory-entry84,2851
(defun pt-occur pt-occur192,9284
(defun pt-intersectp pt-intersectp200,9482
(deflabel ttreettree282,13062
(defun tag-tree-occur tag-tree-occur340,15607
(defun add-to-tag-tree add-to-tag-tree355,16152
(defconst *fake-rune-for-anonymous-enabled-rule**fake-rune-for-anonymous-enabled-rule*373,16877
(defun push-lemma push-lemma376,16975
(defun push-lemmas push-lemmas389,17519
(defun cons-tag-trees cons-tag-trees398,17883
(defun tagged-objects tagged-objects403,18011
(defun tagged-object tagged-object418,18523
(defun scons-tag-trees scons-tag-trees464,21215
(defun move-unmarked-subbtrees move-unmarked-subbtrees479,21787
(defun reverse-marked-tag-tree-to-list reverse-marked-tag-tree-to-list498,22527
(defun accumulate-ttree-into-state accumulate-ttree-into-state516,23321
(defun pts-to-ttree-lst pts-to-ttree-lst538,24349
(defun marry-parents marry-parents550,24887
(defun collect-parents1 collect-parents1562,25280
(defun collect-parents0 collect-parents0571,25511
(defun collect-parents collect-parents582,25894
(defun ignore-polyp ignore-polyp594,26302
(defun to-be-ignoredp to-be-ignoredp609,26950
(defrec assumnote assumnote645,28430
(defrec assumptionassumption660,29363
(defrec fc-derivationfc-derivation721,32979
(defun contains-assumptionp contains-assumptionp729,33274
(defun remove-ttrees-from-type-alist remove-ttrees-from-type-alist746,33951
(defun force-assumption1force-assumption1767,34728
(defun dumb-occur-in-type-alist dumb-occur-in-type-alist797,36061
(defun all-dumb-occur-in-type-alist all-dumb-occur-in-type-alist806,36257
(defun force-assumptionforce-assumption813,36471
(defun tag-tree-occur-assumption-nil tag-tree-occur-assumption-nil911,41846
(defun assumption-free-ttreep assumption-free-ttreep927,42500
(defconst *impossible-assumption**impossible-assumption*942,43100
(defaxiom *-preserves-<*-preserves-<1027,47181
(defthm realpart-rationalrealpart-rational1035,47388
(defthm imagpart-rationalimagpart-rational1038,47465
(defun cplus cplus1189,54540
(defun ctimes ctimes1196,54741
(defun clessp clessp1205,55080
(defun clesseqp clesseqp1213,55329
(defthm fix-id fix-id1219,55482
(defthm operators-fix-their-argumentsoperators-fix-their-arguments1232,55902
(defthm cplus-associativity-etccplus-associativity-etc1245,56352
(defthm ctimes-distributivityctimes-distributivity1253,56588
(defthm ctimes-associativity-etcctimes-associativity-etc1262,56865
(defthm cplus-inversecplus-inverse1271,57111
(defthm clesseqp-reflexivityclesseqp-reflexivity1277,57203
(defthm clessp-antisymmetryclessp-antisymmetry1283,57332
(defthm clessp-trichotomyclessp-trichotomy1294,57573
(defthm clessp-additive-propertiesclessp-additive-properties1331,58700
(defthm cplus-1-trickcplus-1-trick1345,59110
(defthm multiplication-by-positive-preserves-inequalitymultiplication-by-positive-preserves-inequality1389,60458
(defthm zero-trichotomy-trickzero-trichotomy-trick1408,61030
(defthm find-equational-poly-trickfind-equational-poly-trick1419,61359
(deflabel linear-arithmeticlinear-arithmetic1449,62357
(defun fn-count-evg-rec fn-count-evg-rec1556,67204
(defmacro fn-count-evg fn-count-evg1595,68770
(defun arith-fn-var-count arith-fn-var-count1600,68849
(defun arith-fn-var-count-lst arith-fn-var-count-lst1616,69372
(defun arith-term-order arith-term-order1628,69730
(defrec poly poly1651,70372
(defabbrev first-var first-var1783,76450
(defabbrev first-coefficient first-coefficient1785,76507
(defun good-coefficient good-coefficient1808,77567
(defun good-pot-varp good-pot-varp1811,77617
(defun good-polyp good-polyp1821,77997
(defun logical-< logical-<1831,78391
(defun logical-<= logical-<=1844,78803
(defun evaluate-ground-poly evaluate-ground-poly1854,79129
(defun impossible-polyp impossible-polyp1863,79398
(defun true-polyp true-polyp1867,79507
(defun silly-polyp silly-polyp1871,79601
(defun impossible-poly impossible-poly1878,79807
(defun base-poly0 base-poly01888,80044
(defun base-poly base-poly1901,80409
(defun poly-alist-equal poly-alist-equal1914,80782
(defun poly-equal poly-equal1928,81179
(defun poly-weakerp poly-weakerp1939,81558
(defun poly-member poly-member1965,82619
(defun new-and-ugly-linear-varsp new-and-ugly-linear-varsp1981,83274
(defun filter-polys filter-polys2007,84293
(defun add-linear-variable1 add-linear-variable12034,85265
(defun zero-factor-p zero-factor-p2058,86255
(defun get-coefficient get-coefficient2079,87089
(defun add-linear-variable add-linear-variable2093,87627
(defun dumb-eval-yields-quotep dumb-eval-yields-quotep2115,88301
(defun dumb-eval dumb-eval2137,89107
(defun add-linear-term add-linear-term2166,90093
(defun add-linear-terms-fn add-linear-terms-fn2236,92659
(defmacro add-linear-terms add-linear-terms2250,93110
(defun normalize-poly1 normalize-poly12268,93661
(defun normalize-poly normalize-poly2275,93854
(defun normalize-poly-lst normalize-poly-lst2291,94258
(defrec linear-pot linear-pot2304,94533
(defun modify-linear-pot modify-linear-pot2313,95037
(defconst *max-linear-pot-loop-stopper-value* *max-linear-pot-loop-stopper-value*2391,97937
(defun loop-stopper-value-of-var loop-stopper-value-of-var2393,97987
(defun set-loop-stopper-values set-loop-stopper-values2404,98376
(defun var-in-pot-lst-p var-in-pot-lst-p2436,100023
(defun bounds-polys-with-var1 bounds-polys-with-var12446,100288
(defun bounds-polys-with-var bounds-polys-with-var2463,101000
(defun polys-with-var1 polys-with-var12486,101800
(defun polys-with-var polys-with-var2493,102103
(defun new-vars-in-pot-lst new-vars-in-pot-lst2505,102539
(defun changed-pot-vars changed-pot-vars2549,104725
(defun infect-polys infect-polys2575,105952
(defun infect-first-n-polys infect-first-n-polys2590,106536
(defun infect-new-polys infect-new-polys2605,107147
(defun fcomplementary-multiplep1 fcomplementary-multiplep12676,110444
(defun fcomplementary-multiplep fcomplementary-multiplep2689,110928
(defun already-used-by-find-equational-polyp1 already-used-by-find-equational-polyp12704,111583
(defun already-used-by-find-equational-polyp already-used-by-find-equational-polyp2719,112135
(defun cons-term-binary-+-constant cons-term-binary-+-constant2748,113658
(defun cons-term-unary-- cons-term-unary--2757,113955
(defun cons-term-binary-*-constant cons-term-binary-*-constant2763,114189
(defun find-equational-poly-rhs1 find-equational-poly-rhs12774,114552
(defun find-equational-poly-rhs find-equational-poly-rhs2788,115054
(defun find-equational-poly3 find-equational-poly32819,116089
(defun find-equational-poly2 find-equational-poly22847,117372
(defun find-equational-poly1 find-equational-poly12867,118073
(defun find-equational-poly find-equational-poly2887,118821
(defun get-coeff-for-cancel1 get-coeff-for-cancel12924,120448
(defun cancel2 cancel22948,121256
(defun cancel1 cancel12956,121459
(defun cancel cancel2982,122500
(defun cancel-poly-against-all-polys cancel-poly-against-all-polys3053,125873
(defun add-poly add-poly3146,129928
(defun prune-poly-lst prune-poly-lst3275,135443
(defun add-polys1 add-polys13283,135706
(defun add-polys0 add-polys03327,137688
(defun show-poly2 show-poly23350,138673
(defun show-poly1 show-poly13358,138941
(defun show-poly show-poly3371,139558
(defun show-poly-lst show-poly-lst3396,140703
(defun show-pot-lst show-pot-lst3402,140863
(defun show-type-alist show-type-alist3413,141250

type-set-b.lisp,12535
(defconst *number-of-numeric-type-set-bits**number-of-numeric-type-set-bits*32,1319
(defconst *type-set-binary-+-table-list**type-set-binary-+-table-list*36,1423
(defconst *type-set-binary-+-table**type-set-binary-+-table*45,1792
(defconst *type-set-binary-*-table-list**type-set-binary-*-table-list*49,1913
(defconst *type-set-binary-*-table**type-set-binary-*-table*58,2282
(defconst *type-set-<-table-list**type-set-<-table-list*66,2564
(defconst *type-set-<-table**type-set-<-table*81,3015
(defun assoc-equal-cdr assoc-equal-cdr95,3616
(defun runep runep103,3841
(defmacro base-symbol base-symbol234,10598
(defmacro strip-base-symbols strip-base-symbols248,11164
(deflabel executable-counterpartexecutable-counterpart251,11227
(deflabel worldworld330,15031
(deflabel runerune435,21214
(deflabel rule-namesrule-names569,27694
(defun fnume fnume584,27932
(defun frunic-mapping-pair frunic-mapping-pair600,28711
(defun fn-rune-nume fn-rune-nume608,28965
(defun definition-runes definition-runes624,29750
(defun get-next-nume get-next-nume629,29932
(defun deref-macro-name deref-macro-name665,31766
(defun rule-name-designatorp rule-name-designatorp671,31925
(defun theoryp1 theoryp1715,34103
(defun theoryp theoryp721,34307
(defun theoryp!1 theoryp!1729,34580
(defun theoryp! theoryp!751,35609
(defun runic-theoryp1 runic-theoryp1756,35729
(defun runic-theoryp runic-theoryp771,36277
(defun find-mapping-pairs-tail1 find-mapping-pairs-tail1847,40552
(defun find-mapping-pairs-tail find-mapping-pairs-tail862,41220
(defun augment-runic-theory1 augment-runic-theory1879,42043
(defun augment-runic-theory augment-runic-theory901,43101
(defconst *bad-runic-designator-string**bad-runic-designator-string*926,44421
(defun convert-theory-to-unordered-mapping-pairs1 convert-theory-to-unordered-mapping-pairs1932,44781
(defun convert-theory-to-unordered-mapping-pairs convert-theory-to-unordered-mapping-pairs990,47003
(defun duplicitous-cons-car duplicitous-cons-car1008,47820
(defun duplicitous-revappend-car duplicitous-revappend-car1017,48072
(defun duplicitous-merge-car duplicitous-merge-car1025,48335
(defun duplicitous-sort-car duplicitous-sort-car1059,50160
(defun augment-theory augment-theory1080,51165
(defmacro assert$-runic-theoryp assert$-runic-theoryp1106,52511
(defun runic-theory runic-theory1120,52829
(defrec enabled-structureenabled-structure1163,54732
(defun enabled-numep enabled-numep1252,59400
(defun enabled-arith-numep enabled-arith-numep1267,59891
(defun enabled-runep enabled-runep1283,60567
(defmacro active-runep active-runep1291,60849
(defun enabled-xfnp enabled-xfnp1326,62035
(defun theory-warning-fns-aux theory-warning-fns-aux1349,63048
(defun theory-warning-fns theory-warning-fns1377,64265
(defun maybe-warn-about-theory maybe-warn-about-theory1404,65871
(defrec theory-invariant-recordtheory-invariant-record1460,68342
(defun chk-theory-invariant1 chk-theory-invariant11464,68411
(defun chk-theory-invariant chk-theory-invariant1548,72500
(defun load-theory-into-enabled-structureload-theory-into-enabled-structure1559,72833
(defun initial-global-enabled-structure initial-global-enabled-structure1636,76800
(defun recompress-global-enabled-structure recompress-global-enabled-structure1665,78018
(defun recompress-stobj-accessor-arrays recompress-stobj-accessor-arrays1717,80580
(defconst *fake-rune-for-type-set**fake-rune-for-type-set*1773,83616
(defun puffert puffert1778,83753
(defun immediate-forcep immediate-forcep1788,84165
(defmacro numeric-type-set numeric-type-set1796,84374
(defmacro rational-type-set rational-type-set1819,85321
(defmacro real-type-set real-type-set1840,86103
(defun type-set-binary-+ type-set-binary-+1861,86879
(defun type-set-binary-* type-set-binary-*1903,88936
(defun type-set-not type-set-not1919,89504
(defun type-set-<-1 type-set-<-11927,89704
(defun type-set-< type-set-<2046,94125
(defun type-set-unary-- type-set-unary--2208,101865
(defun type-set-unary-/ type-set-unary-/2231,102887
(defun type-set-numerator type-set-numerator2250,103785
(defun type-set-realpart type-set-realpart2265,104469
(defun type-set-imagpart type-set-imagpart2276,104862
(defun type-set-complex type-set-complex2297,105641
(defun type-set-floor1 type-set-floor12340,107460
(defun type-set-standard-part type-set-standard-part2355,108137
(defun type-set-standard-numberp type-set-standard-numberp2369,108740
(defrec recognizer-tuplerecognizer-tuple2387,109371
(defconst *initial-recognizer-alist**initial-recognizer-alist*2491,113805
(defun most-recent-enabled-recog-tuple most-recent-enabled-recog-tuple2597,117552
(defun type-set-recognizer type-set-recognizer2609,118063
(defun type-set-car type-set-car2642,119621
(defun type-set-cdr type-set-cdr2646,119758
(defun type-set-coerce type-set-coerce2657,120112
(defun type-set-intern-in-package-of-symbol type-set-intern-in-package-of-symbol2679,120991
(defun type-set-length type-set-length2686,121291
(defun type-set-cons type-set-cons2697,121659
(defconst *singleton-type-sets**singleton-type-sets*2708,122012
(defun type-set-equal type-set-equal2711,122081
(defun type-set-quote type-set-quote2724,122614
(defun type-set-char-code type-set-char-code2761,123916
(defun var-fn-count var-fn-count2773,124290
(defun var-fn-count-lst var-fn-count-lst2834,127479
(defun fn-count-1 fn-count-12846,127848
(defmacro fn-count fn-count2882,129588
(defun term-order term-order2885,129646
(defrec type-prescriptiontype-prescription3096,140096
(defun find-runed-type-prescription find-runed-type-prescription3137,141735
(defconst *expandable-boot-strap-non-rec-fns**expandable-boot-strap-non-rec-fns*3148,142062
(defun mv-atf mv-atf3197,144396
(defun assume-true-false-error assume-true-false-error3235,145973
(defun non-cons-cdr non-cons-cdr3244,146343
(defconst *one-way-unify1-implicit-fns**one-way-unify1-implicit-fns*3262,147143
(defun one-way-unify1 one-way-unify13273,147307
(defun one-way-unify1-lst one-way-unify1-lst3508,158956
(defun one-way-unify1-equal1 one-way-unify1-equal13525,159616
(defun one-way-unify1-equal one-way-unify1-equal3549,160768
(defun one-way-unify one-way-unify3557,161007
(defun canonical-representative canonical-representative3617,163926
(defun subst-type-alist1-check subst-type-alist1-check3663,165538
(defun subst-type-alist1 subst-type-alist13674,165919
(defun subst-type-alist subst-type-alist3721,168071
(defun infect-type-alist-entry infect-type-alist-entry3736,168673
(defun infect-new-type-alist-entries2 infect-new-type-alist-entries23744,168891
(defun infect-new-type-alist-entries1 infect-new-type-alist-entries13763,169689
(defun infect-new-type-alist-entries infect-new-type-alist-entries3776,170233
(defun extend-type-alist-simple extend-type-alist-simple3795,171147
(defun extend-type-alist1 extend-type-alist13814,171927
(defun extend-type-alist extend-type-alist3892,175192
(defun zip-variable-type-alist zip-variable-type-alist3943,177440
(defun assoc-equiv assoc-equiv3957,178051
(defun assoc-equiv+ assoc-equiv+3976,178803
(defun assoc-type-alist assoc-type-alist4042,181782
(defun look-in-type-alist look-in-type-alist4059,182398
(defun member-char-stringp member-char-stringp4064,182554
(defun terminal-substringp1 terminal-substringp14069,182710
(defun terminal-substringp terminal-substringp4078,183054
(defun evg-occur evg-occur4082,183189
(defun occur occur4145,185678
(defun occur-lst occur-lst4155,185974
(defun pseudo-variantp pseudo-variantp4178,186707
(defun pseudo-variantp-list pseudo-variantp-list4211,188027
(defun worse-than worse-than4476,195504
(defun worse-than-or-equal worse-than-or-equal4507,196574
(defun basic-worse-than-lst1 basic-worse-than-lst14531,197430
(defun basic-worse-than-lst2 basic-worse-than-lst24546,198019
(defun basic-worse-than basic-worse-than4554,198276
(defun some-subterm-worse-than-or-equal some-subterm-worse-than-or-equal4598,200153
(defun some-subterm-worse-than-or-equal-lst some-subterm-worse-than-or-equal-lst4610,200586
(defun worse-than-lst worse-than-lst4615,200812
(defun push-ancestor push-ancestor4630,201300
(defun earlier-ancestor-biggerp earlier-ancestor-biggerp4658,202610
(defun ancestors-check1 ancestors-check14678,203521
(defun ancestors-check ancestors-check4802,209698
(defun type-set-finish type-set-finish4834,211194
(defun search-type-alist-rec search-type-alist-rec4857,212138
(defun free-varsp free-varsp4895,213888
(defun free-varsp-lst free-varsp-lst4900,214054
(defun search-type-alist search-type-alist4907,214217
(defun term-and-typ-to-lookup term-and-typ-to-lookup4982,217937
(defun lookup-hyp lookup-hyp5003,218846
(defun sublis-var-and-mark-free sublis-var-and-mark-free5015,219255
(defun sublis-var-and-mark-free-lst sublis-var-and-mark-free-lst5038,220316
(defun add-accumulated-persistence add-accumulated-persistence5097,223119
(defmacro accumulated-persistence accumulated-persistence5107,223503
(defun merge-car-> merge-car->5238,230122
(defun merge-sort-car-> merge-sort-car->5245,230347
(defun show-accumulated-persistence-phrase1 show-accumulated-persistence-phrase15250,230512
(defun show-accumulated-persistence-phrase2 show-accumulated-persistence-phrase25269,231220
(defun show-accumulated-persistence-phrase show-accumulated-persistence-phrase5278,231650
(defmacro show-accumulated-persistence show-accumulated-persistence5293,232274
(defun push-accp push-accp5318,233138
(defun pop-accp pop-accp5329,233457
(defmacro with-accumulated-persistence with-accumulated-persistence5344,233945
(defun assume-true-false-<assume-true-false-<5367,234833
(defun mv-atf-2 mv-atf-25573,243457
(defun binding-hyp-p binding-hyp-p5626,245582
(defmacro adjust-ignore-for-atf adjust-ignore-for-atf5674,247960
(defun type-set type-set5686,248317
(defun type-set-lst type-set-lst6243,275594
(defun type-set-relieve-hypstype-set-relieve-hyps6264,276564
(defun extend-type-alist-with-bindingsextend-type-alist-with-bindings6441,284742
(defun type-set-with-rule type-set-with-rule6468,285777
(defun type-set-with-rule1type-set-with-rule16545,289247
(defun type-set-with-rules type-set-with-rules6583,291201
(defun type-set-primitive type-set-primitive6636,293514
(defun assume-true-false-if assume-true-false-if7172,314441
(defun assume-true-false assume-true-false7469,329491
(defun assume-true-false1assume-true-false18582,383693
(defun proper/improper-cons-ts-tupleproper/improper-cons-ts-tuple8641,386186
(defun extend-with-proper/improper-cons-ts-tupleextend-with-proper/improper-cons-ts-tuple8715,389564
(defun ok-to-force-ens ok-to-force-ens8735,390359
(defun add-linear-assumption add-linear-assumption8744,390716
(defun return-type-alistreturn-type-alist8855,395613
(defun type-alist-equality-loop1 type-alist-equality-loop18885,396770
(defun clean-up-alist clean-up-alist8976,400724
(defun duplicate-keysp duplicate-keysp8989,401289
(defun clean-type-alist clean-type-alist8997,401514
(defun type-alist-equality-loop-exit type-alist-equality-loop-exit9002,401654
(defconst *type-alist-equality-loop-max-depth* *type-alist-equality-loop-max-depth*9008,401876
(defun type-alist-equality-loop type-alist-equality-loop9010,401928
(defun reconsider-type-alist reconsider-type-alist9041,403303
(defun type-alist-clause-finish1 type-alist-clause-finish19092,405623
(defun type-alist-clause-finish type-alist-clause-finish9129,407400
(defun type-alist-clause type-alist-clause9262,414530
(defun known-whether-nil known-whether-nil9324,418126
(defun ts-booleanp ts-booleanp9358,419870
(defun weak-cons-occur weak-cons-occur9370,420379
(defun equal-x-cons-x-yp equal-x-cons-x-yp9384,420837
(defun not-ident not-ident9459,424189
(defun first-if first-if9495,425872
(defun all-variablep all-variablep9509,426360
(defun normalize-with-type-set normalize-with-type-set9514,426495
(defun normalize normalize9543,427508
(defun normalize-lst normalize-lst9688,434463
(defun normalize-or-distribute-first-if normalize-or-distribute-first-if9697,434927
(defun distribute-first-if distribute-first-if9715,435733
(defun decode-type-set1 decode-type-set19836,441186
(defun decode-type-set decode-type-set9846,441584
(defmacro dts dts9864,442304
(defun ens ens9881,442811
(defmacro git git9884,442881

linear-b.lisp,458
(defun polys-from-type-set polys-from-type-set42,1478
(defun add-type-set-polys add-type-set-polys141,5723
(defun add-polys add-polys185,7858
(defun eval-ground-subexpressions eval-ground-subexpressions218,9036
(defun eval-ground-subexpressions-lst eval-ground-subexpressions-lst308,12274
(defun poly-set poly-set324,12779
(defun linearize1 linearize1406,16961
(defun linearize linearize773,33051
(defun linearize-lstlinearize-lst820,35200

non-linear.lisp,1703
(defun cleanse-type-alist cleanse-type-alist35,1407
(defthm uniqueness-of-+-inverses-lemmauniqueness-of-+-inverses-lemma46,1793
(defun var-with-divisionp var-with-divisionp63,2263
(defun varify varify94,3513
(defun varify! varify!117,4107
(defun varify!-lst1 varify!-lst1126,4338
(defun varify!-lst varify!-lst131,4458
(defun invert-var invert-var138,4628
(defun part-of1 part-of1179,6437
(defun part-of part-of210,7426
(defun product-already-triedp product-already-triedp227,7945
(defun too-many-polysp too-many-polysp241,8458
(defun expanded-new-vars-in-pot-lst2 expanded-new-vars-in-pot-lst2259,9035
(defun expanded-new-vars-in-pot-lst1 expanded-new-vars-in-pot-lst1292,10448
(defun expanded-new-vars-in-pot-lst expanded-new-vars-in-pot-lst338,12811
(defun extract-bounds extract-bounds362,13813
(defun good-bounds-in-pot good-bounds-in-pot404,15985
(defun inverse-polys inverse-polys433,17039
(defun add-inverse-polys add-inverse-polys769,33900
(defun add-polys-from-type-set add-polys-from-type-set812,35469
(defun length-of-shortest-polys-with-var length-of-shortest-polys-with-var849,36971
(defun shortest-polys-with-var1 shortest-polys-with-var1869,37890
(defun shortest-polys-with-var shortest-polys-with-var881,38399
(defun binary-*-leaves binary-*-leaves913,39710
(defun binary-*-tree binary-*-tree919,39868
(defun merge-arith-term-order merge-arith-term-order937,40390
(defun insert-arith-term-order insert-arith-term-order944,40651
(defun sort-arith-term-order sort-arith-term-order953,40907
(defun multiply-alist-and-const multiply-alist-and-const960,41108
(defun collect-rational-poly-p-lst collect-rational-poly-p-lst975,41796

rewrite.lisp,20883
(defrec congruence-rule congruence-rule274,13866
(defconst *geneqv-iff**geneqv-iff*433,21915
(defun refinementp refinementp451,22690
(defun geneqv-refinementp1 geneqv-refinementp1512,25230
(defun geneqv-refinementp geneqv-refinementp524,25669
(defun some-congruence-rule-disabledp some-congruence-rule-disabledp578,28605
(defun filter-geneqv1 filter-geneqv1584,28834
(defun filter-geneqv filter-geneqv590,29083
(defun some-geneqv-disabledp some-geneqv-disabledp604,29563
(defun filter-geneqv-lst1 filter-geneqv-lst1609,29739
(defun filter-geneqv-lst filter-geneqv-lst614,29904
(defun refinementp1 refinementp1633,30681
(defun pair-congruence-rules-with-coarsenings pair-congruence-rules-with-coarsenings646,31175
(defun add-to-cr-and-coarseningsadd-to-cr-and-coarsenings658,31655
(defun union-geneqv1 union-geneqv1708,33906
(defun union-geneqv union-geneqv735,35361
(defun pairwise-union-geneqv pairwise-union-geneqv755,36177
(defun geneqv-lst1 geneqv-lst1772,36905
(defun geneqv-lst geneqv-lst880,41931
(defun subst-var subst-var992,47090
(defun subst-var-lst subst-var-lst1001,47388
(defun subst-expr1 subst-expr11017,47881
(defun subst-expr1-lst subst-expr1-lst1024,48112
(defun subst-expr-error subst-expr-error1032,48289
(defun subst-expr subst-expr1038,48505
(defun scons-term scons-term1112,52383
(defun subst-equiv-expr1 subst-equiv-expr11173,54762
(defun subst-equiv-expr1-lst subst-equiv-expr1-lst1228,57516
(defun subst-equiv-expr subst-equiv-expr1251,58441
(defun ffnnamesp ffnnamesp1264,58876
(defun ffnnamesp-lst ffnnamesp-lst1279,59428
(defun collect-ffnnames collect-ffnnames1289,59576
(defun collect-ffnnames-lst collect-ffnnames-lst1312,60444
(defun comm-equal comm-equal1319,60629
(defun complementaryp complementaryp1333,61021
(defun member-term2 member-term21354,61786
(defun member-complement-term2 member-complement-term21368,62255
(defun member-complement-term1 member-complement-term11377,62577
(defun member-term member-term1392,63023
(defun member-complement-term member-complement-term1407,63571
(defun instr-listp instr-listp1425,64211
(defun spliced-instr-listp spliced-instr-listp1444,65034
(defun next-tag next-tag1462,65768
(defun if-compile-formal if-compile-formal1470,65981
(defun ffnnamep-hide ffnnamep-hide1485,66633
(defun ffnnamep-hide-lst ffnnamep-hide-lst1504,67373
(defun if-compile if-compile1516,67661
(defun if-compile-lst if-compile-lst1615,72430
(defun if-interp-assume-true if-interp-assume-true1670,75586
(defun if-interp-switch if-interp-switch1690,76407
(defun if-interp-assumed-value0 if-interp-assumed-value01703,76906
(defun if-interp-assumed-value1 if-interp-assumed-value11714,77301
(defun if-interp-assumed-value2 if-interp-assumed-value21726,77795
(defun if-interp-assumed-value3 if-interp-assumed-value31758,79285
(defun if-interp-assumed-value4 if-interp-assumed-value41775,80043
(defun if-interp-assumed-value-x if-interp-assumed-value-x1792,80834
(defun if-interp-assumed-value if-interp-assumed-value1812,81646
(defun convert-assumptions-to-clause-segment convert-assumptions-to-clause-segment1830,82414
(defun convert-clause-to-assumptions convert-clause-to-assumptions1853,83540
(defun simplifiable-mv-nth1 simplifiable-mv-nth11875,84647
(defun simplifiable-mv-nth simplifiable-mv-nth1904,85887
(defun simplifiable-mv-nthp simplifiable-mv-nthp1931,87066
(defun call-stack call-stack1940,87285
(defun ret-stack ret-stack2063,92511
(defun quick-and-dirty-subsumption-replacement-step1 quick-and-dirty-subsumption-replacement-step12067,92616
(defun quick-and-dirty-subsumption-replacement-step quick-and-dirty-subsumption-replacement-step2084,93237
(defun if-interp-add-clause if-interp-add-clause2223,99400
(defun if-interp if-interp2238,100072
(defun splice-instrs1 splice-instrs12366,107490
(defun splice-instrs splice-instrs2396,108581
(defun strip-branches strip-branches2400,108695
(defun merge-length merge-length2428,109812
(defun merge-sort-length merge-sort-length2437,110152
(defun member-equal-+- member-equal-+-2443,110369
(defun arg1-almost-subsumes-arg2 arg1-almost-subsumes-arg22457,110970
(defun find-subsumer-replacement find-subsumer-replacement2503,113082
(defun remove-one-complement remove-one-complement2522,113943
(defun weak-disc-tree weak-disc-tree2529,114227
(defun sweep-clauses1 sweep-clauses12539,114591
(defun sweep-clauses sweep-clauses2545,114815
(defun filter-with-and-without filter-with-and-without2549,114922
(defun disc-tree disc-tree2563,115606
(defun find-clauses1 find-clauses12587,116783
(defun find-clauses find-clauses2605,117610
(defun remove-one-+- remove-one-+-2608,117680
(defun store-clause1 store-clause12614,117867
(defun store-clause store-clause2643,118988
(defun subsumption-replacement-loop subsumption-replacement-loop2662,119578
(defun clausify clausify2712,121696
(defun find-rewriting-equivalence find-rewriting-equivalence2754,123615
(defun obj-table obj-table2825,127422
(defun rewrite-solidify-rec rewrite-solidify-rec2870,129179
(defconst *rewrite-equiv-solidify-iteration-bound**rewrite-equiv-solidify-iteration-bound*2932,132026
(defun rewrite-solidify rewrite-solidify2939,132226
(defun rewrite-if11 rewrite-if112994,134005
(defun rewrite-if1rewrite-if13005,134408
(defun equal-mod-alist equal-mod-alist3056,136434
(defun equal-mod-alist-lst equal-mod-alist-lst3090,137805
(defun member-equal-mod-alist member-equal-mod-alist3097,138040
(defun not-to-be-rewrittenp1 not-to-be-rewrittenp13103,138263
(defun not-to-be-rewrittenp not-to-be-rewrittenp3115,138608
(defun rewrite-recognizer rewrite-recognizer3131,139323
(defun remove-invisible-fncalls remove-invisible-fncalls3191,141906
(defun term-order+ term-order+3205,142332
(defun invisible-fns invisible-fns3345,147523
(defun loop-stopperp-rec loop-stopperp-rec3378,148723
(defun loop-stopperp loop-stopperp3396,149312
(defrec rewrite-rule rewrite-rule3400,149436
(defun relevant-ground-lemmas relevant-ground-lemmas3444,151795
(defun search-ground-units1search-ground-units13454,152128
(defun search-ground-units search-ground-units3514,155036
(defun if-tautologyp if-tautologyp3528,155610
(defun expand-some-non-rec-fns expand-some-non-rec-fns3554,156867
(defun expand-some-non-rec-fns-lst expand-some-non-rec-fns-lst3568,157456
(defun tautologyp tautologyp3575,157667
(defun make-true-list-cons-nest make-true-list-cons-nest3621,159726
(defun being-openedp-rec being-openedp-rec3632,160179
(defmacro being-openedp being-openedp3654,161293
(defun recursive-fn-on-fnstackp recursive-fn-on-fnstackp3674,162275
(defun fnstack-term-member fnstack-term-member3687,162737
(defun occur-cnt-rec occur-cnt-rec3867,170307
(defun occur-cnt-lst occur-cnt-lst3877,170606
(defun occur-cnt occur-cnt3884,170805
(defun count-ifs count-ifs3889,170889
(defun count-ifs-lst count-ifs-lst3899,171180
(defun too-many-ifs1 too-many-ifs13906,171314
(defun too-many-ifs too-many-ifs3916,171693
(defun all-args-occur-in-top-clausep all-args-occur-in-top-clausep3945,173060
(defun max-form-count max-form-count3952,173288
(defun max-form-count-lst max-form-count-lst3972,174225
(defun controller-complexity1 controller-complexity13979,174374
(defun controller-complexity controller-complexity4002,175318
(defun controller-pocket-simplerp controller-pocket-simplerp4015,175894
(defun constant-controller-pocketp1 constant-controller-pocketp14033,176618
(defun constant-controller-pocketp constant-controller-pocketp4042,177018
(defun some-controller-pocket-constant-and-non-controller-simplerpsome-controller-pocket-constant-and-non-controller-simplerp4053,177477
(defun rewrite-fncallp rewrite-fncallp4069,178188
(defun rewrite-fncallp-listp rewrite-fncallp-listp4135,181166
(defun contains-rewriteable-callpcontains-rewriteable-callp4153,181836
(defun contains-rewriteable-callp-lstcontains-rewriteable-callp-lst4183,183155
(defun pairlis-x1 pairlis-x14196,183606
(defun pairlis-x2 pairlis-x24204,183794
(defrec linear-lemma linear-lemma4212,183986
(defrec current-literal current-literal4261,185919
(defrec rewrite-constantrewrite-constant4263,185963
(defconst *empty-rewrite-constant**empty-rewrite-constant*4348,189591
(defrec metafunction-contextmetafunction-context4366,190072
(defun ok-to-force ok-to-force4380,190588
(defun backchain-limit-reachedp1 backchain-limit-reachedp14419,192343
(defun backchain-limit-reachedp backchain-limit-reachedp4424,192510
(defun new-backchain-limit new-backchain-limit4435,193029
(defun plist-to-alist plist-to-alist4518,196303
(defmacro adjust-rdepth adjust-rdepth4527,196585
(defun add-rewrite-args add-rewrite-args4536,196804
(defmacro rewrite-entry rewrite-entry4556,197626
(deflabel rule-classesrule-classes4578,198674
(deflabel free-variablesfree-variables4838,214187
(deflabel free-variables-examplesfree-variables-examples5026,224254
(deflabel free-variables-examples-rewritefree-variables-examples-rewrite5040,224819
(deflabel free-variables-examples-forward-chainingfree-variables-examples-forward-chaining5468,238759
(defconst *fake-rune-for-linear**fake-rune-for-linear*5667,245804
(defrec gframe gframe5674,245992
(defparameter *deep-gstack* *deep-gstack*5714,247724
(defmacro push-gframe push-gframe5716,247758
(defmacro initial-gstack initial-gstack5748,249070
(defun tilde-@-bkptr-phrase tilde-@-bkptr-phrase5758,249437
(defun cw-gframe cw-gframe5802,251767
(defun cw-gstack1 cw-gstack15849,253671
(defun cw-gstack-fn cw-gstack-fn5856,253981
(defmacro cw-gstack cw-gstack5900,256180
(defun restore-brr-globals1 restore-brr-globals16104,267632
(defun restore-brr-globals restore-brr-globals6113,267950
(defun save-brr-globals save-brr-globals6145,269234
(defun get-brr-global get-brr-global6168,270141
(defun exit-brr-wormhole exit-brr-wormhole6207,272121
(defmacro brr-wormhole brr-wormhole6216,272446
(defun initialize-brr-stack initialize-brr-stack6265,274572
(defun lookup-brr-stack lookup-brr-stack6283,275237
(defun clean-brr-stack1 clean-brr-stack16295,275759
(defun clean-brr-stack clean-brr-stack6301,275931
(defun get-brr-local get-brr-local6349,278514
(defun put-brr-local1 put-brr-local16362,279139
(defun put-brr-local put-brr-local6373,279621
(defun put-brr-local-lst put-brr-local-lst6388,280297
(defun some-cdr-equalp some-cdr-equalp6393,280495
(defun push-brr-stack-frame push-brr-stack-frame6401,280715
(defun pop-brr-stack-frame pop-brr-stack-frame6432,282131
(defun decode-type-alist decode-type-alist6443,282582
(defun translate-break-condition translate-break-condition6454,283016
(defun eval-break-condition eval-break-condition6470,283639
(defconst *default-free-vars-display-limit* *default-free-vars-display-limit*6489,284299
(defmacro set-free-vars-display-limit set-free-vars-display-limit6491,284348
(defun free-vars-display-limit free-vars-display-limit6501,284780
(defun limit-failure-reason limit-failure-reason6511,285100
(defun limit-failure-reason-alist limit-failure-reason-alist6533,286134
(defun alist-difference-eq alist-difference-eq6556,287341
(defun tilde-@-failure-reason-free-phrase tilde-@-failure-reason-free-phrase6571,287766
(defun tilde-@-failure-reason-phrase tilde-@-failure-reason-phrase6600,289121
(defun stuff-standard-oi stuff-standard-oi6711,295146
(deflabel break-rewritebreak-rewrite6736,296399
(defmacro set-brr-term-evisc-tuple set-brr-term-evisc-tuple6973,308822
(deflabel break-lemmabreak-lemma7025,310876
(deflabel brr-commandsbrr-commands7106,314529
(defun raw-mode-p raw-mode-p7151,316556
(defun defun-mode-prompt-string defun-mode-prompt-string7154,316624
(defun brr-prompt brr-prompt7177,317282
(defun ts< ts<7191,317765
(defun add-to-type-alist-segments add-to-type-alist-segments7217,318217
(defun merge-term-order merge-term-order7230,318555
(defun merge-sort-term-order merge-sort-term-order7237,318792
(defun sort-type-alist-segments sort-type-alist-segments7242,318982
(defun type-alist-segments type-alist-segments7254,319395
(defun print-terms print-terms7263,319719
(defun print-type-alist-segments print-type-alist-segments7278,320177
(defun print-type-alist print-type-alist7296,320917
(defun tilde-*-ancestors-stack-msg1 tilde-*-ancestors-stack-msg17301,321074
(defun tilde-*-ancestors-stack-msg tilde-*-ancestors-stack-msg7323,322137
(defun brkpt1 brkpt17327,322278
(defun brkpt2 brkpt27531,329784
(defrec expand-hintexpand-hint7784,339838
(defun expand-permission-result expand-permission-result7801,340212
(defun expand-permission-p expand-permission-p7849,342584
(defun one-way-unify-restrictions1 one-way-unify-restrictions17860,342982
(defun one-way-unify-restrictions one-way-unify-restrictions7870,343345
(defun ev-fncall! ev-fncall!7876,343527
(defun ev-fncall-meta ev-fncall-meta7914,345131
(defun get-evg get-evg7946,346543
(defun ev-synp ev-synp7958,346850
(defun bad-synp-alist1 bad-synp-alist17990,348329
(defun bad-synp-alist bad-synp-alist8020,349616
(defun flatten-ands-in-lit flatten-ands-in-lit8041,350486
(defun evgs-or-t evgs-or-t8054,351018
(deflabel nu-rewriternu-rewriter8163,354985
(defparameter *nth-update-tracingp* *nth-update-tracingp*8274,359792
(defparameter *lambda-abstractp* *lambda-abstractp*8277,359871
(defparameter *nu-memos* *nu-memos*8280,359945
(defparameter *nu-memos-ens* *nu-memos-ens*8283,360032
(defparameter *nu-memos-wrld* *nu-memos-wrld*8286,360104
(defparameter *ring-buffer-size* *ring-buffer-size*8289,360177
(defun-one-output initialize-nu-memos initialize-nu-memos8303,360816
(defun-one-output clear-nu-memos1 clear-nu-memos18314,361185
(defun-one-output clear-nu-memos clear-nu-memos8333,361968
(defmacro this-item this-item8352,362780
(defmacro next-ptr next-ptr8353,362815
(defmacro prev-ptr prev-ptr8354,362850
(defun-one-output link-em link-em8365,363156
(defun-one-output destructive-get-memo1 destructive-get-memo18370,363275
(defun-one-output destructive-get-memo destructive-get-memo8418,364733
(defun get-memo get-memo8432,365281
(defun-one-output destructive-retire-memo destructive-retire-memo8487,367212
(defun-one-output destructive-insert-memo destructive-insert-memo8499,367649
(defun-one-output nu-memo-stats1 nu-memo-stats18518,368280
(defun-one-output nu-memo-stats nu-memo-stats8535,368958
(defun memo-key1 memo-key18549,369357
(defun bounded-length bounded-length8580,370608
(defun memo-key memo-key8591,370833
(defun mk mk8615,371699
(defun show-rbuff1 show-rbuff18623,371900
(defun show-rbuff show-rbuff8626,371997
(defun memo-exit memo-exit8641,372769
(defun nfix-quote nfix-quote8687,374473
(defun bound-in-framep bound-in-framep8708,375113
(defun non-rec-defun1 non-rec-defun18717,375396
(defun non-rec-defun non-rec-defun8763,377697
(defun deref-var deref-var8824,380325
(defun deref deref8837,380792
(defun equal-derefs equal-derefs8908,382963
(defun filter-args filter-args8923,383402
(defun foccurrences foccurrences8931,383672
(defun foccurrences-lst foccurrences-lst8960,384646
(defun every-var-at-most-oncep every-var-at-most-oncep8967,384877
(defun every-actual-simple every-actual-simple8977,385184
(defun make-clean-lambda-application make-clean-lambda-application8984,385375
(defun lambda-stack lambda-stack9037,387735
(defun shorten-each-stack-to-len shorten-each-stack-to-len9064,388874
(defun all-equal-stacks all-equal-stacks9075,389307
(defun non-quoted-stack non-quoted-stack9084,389691
(defun cdr-all cdr-all9090,389870
(defun len-common-tail len-common-tail9094,389966
(defun butlast-all-stacks butlast-all-stacks9099,390135
(defun min-stack-len min-stack-len9106,390388
(defun reconcile-stacks reconcile-stacks9116,390718
(defun reconcile-terms reconcile-terms9165,392660
(defun all-equal all-equal9171,392834
(defun recon recon9176,392963
(defun with-reconciliation-let-bindings with-reconciliation-let-bindings9199,393952
(defmacro with-reconciliation with-reconciliation9205,394211
(defun lambda-stack-one-way-unify1 lambda-stack-one-way-unify19238,395190
(defun lambda-stack-one-way-unify1-lst lambda-stack-one-way-unify1-lst9287,397039
(defun lambda-stack-one-way-unify lambda-stack-one-way-unify9307,397863
(defun apply-abbrevs-to-lambda-stack1 apply-abbrevs-to-lambda-stack19336,398876
(defun apply-abbrevs-to-lambda-stack apply-abbrevs-to-lambda-stack9379,400959
(defconst *fake-rune-for-nu-rewriter**fake-rune-for-nu-rewriter*9471,404454
(defun nth-update-rewriter1-continuenth-update-rewriter1-continue9478,404601
(defun nth-update-rewriter1nth-update-rewriter19536,406685
(defun nth-update-rewriter1-lst nth-update-rewriter1-lst10090,429943
(defun nth-update-rewriter-targetp nth-update-rewriter-targetp10113,430949
(defun nth-update-rewriter-target-lstp nth-update-rewriter-target-lstp10127,431560
(defun make-stack-from-alist make-stack-from-alist10136,431805
(defun nth-update-rewriter nth-update-rewriter10159,432701
(defun collect-by-position collect-by-position10275,437533
(defun make-lambda-application make-lambda-application10293,438236
(defun lambda-nest-hidep lambda-nest-hidep10328,439452
(defun lambda-nest-unhide lambda-nest-unhide10344,439907
(defun search-type-alist+ search-type-alist+10355,440199
(defun oncep oncep10375,441034
(defun restrict-alist restrict-alist10389,441656
(defabbrev memo-activep memo-activep10401,441944
(defabbrev activate-memo activate-memo10404,442014
(defmacro zero-depthp zero-depthp10407,442079
(defmacro rdepth-error rdepth-error10424,442748
(defun bad-synp-hyp-msg1 bad-synp-hyp-msg110454,444249
(defun bad-synp-hyp-msg bad-synp-hyp-msg10608,453025
(defmacro new-unify-subst-lst new-unify-subst-lst10635,454312
(defmacro rewrite-entry-extending-failure rewrite-entry-extending-failure10639,454481
(defun set-difference-assoc-eq set-difference-assoc-eq10652,455124
(defun relieve-hyp-synp relieve-hyp-synp10660,455456
(defmacro recursivep recursivep10753,459457
(defun push-lemma? push-lemma?10762,459688
(defun rewrite rewrite10775,460046
(defun rewrite-solidify-plus rewrite-solidify-plus11298,485691
(defun rewrite-if rewrite-if11351,488144
(defun rewrite-args rewrite-args11495,495548
(defun rewrite-primitive rewrite-primitive11521,496580
(defun rewrite-equal rewrite-equal11556,497964
(defun relieve-hyprelieve-hyp11724,505592
(defun relieve-hyps1 relieve-hyps112038,521949
(defun relieve-hyps1-free-1 relieve-hyps1-free-112151,528302
(defun relieve-hyps1-free-2 relieve-hyps1-free-212219,531631
(defun relieve-hyps relieve-hyps12306,535104
(defun rewrite-with-lemma rewrite-with-lemma12354,537476
(defun rewrite-with-lemmas1 rewrite-with-lemmas112655,552719
(defun rewrite-fncall rewrite-fncall12694,554478
(defun rewrite-with-lemmas rewrite-with-lemmas12983,569356
(defun rewrite-linear-term rewrite-linear-term13089,574498
(defun rewrite-linear-term-lst rewrite-linear-term-lst13174,578444
(defun add-linear-lemma add-linear-lemma13221,580632
(defun add-linear-lemmas add-linear-lemmas13445,590784
(defun multiply-alists2 multiply-alists213493,593014
(defun multiply-alists1 multiply-alists113546,595476
(defun multiply-alists multiply-alists13586,597235
(defun multiply-polys1 multiply-polys113635,599283
(defun multiply-polys multiply-polys13712,602382
(defun multiply-pots2 multiply-pots213767,604778
(defun multiply-pots1 multiply-pots113807,606365
(defun multiply-pots-super-filter multiply-pots-super-filter13856,608400
(defun multiply-pots-filter multiply-pots-filter13904,610595
(defun multiply-pots multiply-pots13955,612912
(defun add-multiplied-polys-filter add-multiplied-polys-filter14001,614909
(defun add-multiplied-polys add-multiplied-polys14046,617063
(defun deal-with-product1 deal-with-product114120,620438
(defun deal-with-product deal-with-product14231,626160
(defun deal-with-factor deal-with-factor14271,627970
(defun deal-with-division deal-with-division14351,632077
(defun non-linear-arithmetic non-linear-arithmetic14462,637042
(defun add-polys-and-lemmas2-nl add-polys-and-lemmas2-nl14805,651110
(defun add-polys-and-lemmas1-nl add-polys-and-lemmas1-nl14893,655095
(defun add-polys-and-lemmas1 add-polys-and-lemmas114991,659307
(defun add-polys-and-lemmas add-polys-and-lemmas15051,661997
(defun add-disjunct-polys-and-lemmas add-disjunct-polys-and-lemmas15146,665933
(defun add-disjuncts-polys-and-lemmas add-disjuncts-polys-and-lemmas15255,671011
(defun add-terms-and-lemmas add-terms-and-lemmas15435,679262
(defun rewrite-with-linear rewrite-with-linear15522,683322

simplify.lisp,10262
(defun dumb-negate-lit-lst dumb-negate-lit-lst62,2645
(defun negate-lit negate-lit76,3300
(defun pegate-lit pegate-lit95,4058
(defun add-literal add-literal114,4785
(defun add-each-literal add-each-literal151,6205
(defun subsumes-rec subsumes-rec159,6395
(defun subsumes1 subsumes1187,7782
(defun subsumes!-rec subsumes!-rec220,9184
(defun subsumes!1 subsumes!1231,9568
(defconst *init-subsumes-count**init-subsumes-count*249,10180
(defun subsumes subsumes269,10998
(defun some-member-subsumes some-member-subsumes291,11964
(defun conjoin-clause-to-clause-set conjoin-clause-to-clause-set304,12486
(defun add-each-literal-lst add-each-literal-lst323,13410
(defun conjoin-clause-sets conjoin-clause-sets329,13613
(defun some-element-member-complement-term some-element-member-complement-term336,13820
(defun disjoin-clauses1 disjoin-clauses1344,14141
(defun disjoin-clauses disjoin-clauses360,14794
(defun disjoin-clause-segments-to-clause disjoin-clause-segments-to-clause368,15022
(defun disjoin-clause-segment-to-clause-set-rec disjoin-clause-segment-to-clause-set-rec376,15326
(defun disjoin-clause-segment-to-clause-set disjoin-clause-segment-to-clause-set386,15641
(defun split-on-assumptions split-on-assumptions405,16559
(defun rewrite-clause-action rewrite-clause-action419,17034
(defrec forward-chaining-ruleforward-chaining-rule467,19059
(defrec fc-activationfc-activation477,19553
(defun fc-activation fc-activation509,21332
(defun fc-activation-lst fc-activation-lst567,24528
(defun add-new-fc-pots add-new-fc-pots593,25713
(defun add-new-fc-pots-lst add-new-fc-pots-lst634,27677
(defun add-new-fc-pots-lst-lstadd-new-fc-pots-lst-lst644,28099
(defun suspend-fc-activation suspend-fc-activation662,28851
(defun sublis-varp sublis-varp699,30184
(defun sublis-var-lstp sublis-var-lstp708,30469
(defun mult-search-type-alist mult-search-type-alist717,30716
(defun mult-lookup-hyp mult-lookup-hyp779,33928
(defun ev-respecting-ens ev-respecting-ens793,34433
(defun ev-lst-respecting-ens ev-lst-respecting-ens850,37344
(defun mult-relieve-fc-hypsmult-relieve-fc-hyps865,38003
(defun mult-relieve-all-fc-hyps mult-relieve-all-fc-hyps1020,45989
(defun make-ttrees-from-fc-derivations make-ttrees-from-fc-derivations1127,51984
(defun expunge-fc-derivations expunge-fc-derivations1132,52228
(defun add-fc-derivations add-fc-derivations1211,55881
(defun mult-advance-each-fc-activation1 mult-advance-each-fc-activation11238,57045
(defun mult-advance-fc-activation1mult-advance-fc-activation11304,60754
(defun mult-advance-fc-activation mult-advance-fc-activation1344,62925
(defun advance-fc-activations advance-fc-activations1375,64317
(defun advance-fc-pot-lstadvance-fc-pot-lst1401,65559
(defun type-alist-fcd-lst type-alist-fcd-lst1429,66807
(defun fcd-runep fcd-runep1477,68994
(defun fcd-worse-than-or-equal fcd-worse-than-or-equal1498,69876
(defun exists-lit-worse-than-or-equal exists-lit-worse-than-or-equal1538,72055
(defun exists-fcd-worse-than-or-equal exists-fcd-worse-than-or-equal1548,72395
(defun approved-fc-derivationp approved-fc-derivationp1564,73120
(defun approve-fc-derivations approve-fc-derivations1584,74117
(defun max-level-no max-level-no1611,75383
(defun max-level-no-lst max-level-no-lst1626,76022
(defun get-level-no get-level-no1631,76185
(defun sort-approved1-rating1 sort-approved1-rating11645,76485
(defun sort-approved1-rating1-lst sort-approved1-rating1-lst1663,77334
(defun sort-approved1-rating sort-approved1-rating1670,77585
(defun sort-approved1 sort-approved11688,78526
(defun sort-approved sort-approved1697,78829
(defun strip-fcd-concls strip-fcd-concls1704,79086
(defun forward-chain1 forward-chain11709,79265
(defun fc-pair-lst fc-pair-lst1748,81445
(defun fc-pair-lst-type-alist fc-pair-lst-type-alist1764,82141
(defun forward-chain forward-chain1875,86891
(defun select-forward-chained-concls-and-ttrees select-forward-chained-concls-and-ttrees1949,90519
(defun rewrite-clause-type-alist rewrite-clause-type-alist1976,92003
(defun maximal-multiples1 maximal-multiples12316,107809
(defun maximal-multiples maximal-multiples2330,108305
(defun lambda-abstract1 lambda-abstract12343,108740
(defun lambda-abstract lambda-abstract2352,109091
(defun mutually-exclusive-tests mutually-exclusive-tests2369,109610
(defun mutually-exclusive-subsumptionp mutually-exclusive-subsumptionp2400,110738
(defun cleanup-if-expr cleanup-if-expr2420,111432
(defun cleanup-if-expr-lst cleanup-if-expr-lst2444,112344
(defun rewrite-atm rewrite-atm2450,112534
(defun every-occurrence-equiv-hittablep1every-occurrence-equiv-hittablep12610,118511
(defun every-occurrence-equiv-hittablep1-listpevery-occurrence-equiv-hittablep1-listp2649,119859
(defun every-occurrence-equiv-hittablep every-occurrence-equiv-hittablep2667,120354
(defun every-occurrence-equiv-hittablep-in-clausep every-occurrence-equiv-hittablep-in-clausep2688,121214
(defun some-occurrence-equiv-hittablep1 some-occurrence-equiv-hittablep12710,121970
(defun some-occurrence-equiv-hittablep1-listpsome-occurrence-equiv-hittablep1-listp2742,123049
(defun some-occurrence-equiv-hittablep some-occurrence-equiv-hittablep2758,123480
(defun equiv-hittable-in-some-other-lit equiv-hittable-in-some-other-lit2775,124087
(defun find-trivial-equivalence1find-trivial-equivalence12788,124643
(defun find-trivial-equivalence find-trivial-equivalence2944,132682
(defun add-literal-and-pt1 add-literal-and-pt12995,135166
(defun add-literal-and-pt add-literal-and-pt3013,135982
(defun subst-equiv-and-maybe-delete-litsubst-equiv-and-maybe-delete-lit3044,137116
(defun remove-trivial-equivalencesremove-trivial-equivalences3097,139776
(defrec built-in-clause built-in-clause3168,143620
(defconst *initial-built-in-clauses**initial-built-in-clauses*3181,144332
(defun built-in-clausep2 built-in-clausep23409,152849
(defun built-in-clausep1 built-in-clausep13422,153464
(defun possible-trivial-clause-p possible-trivial-clause-p3445,154604
(defun disjoin2 disjoin23471,155607
(defun disjoin disjoin3482,155936
(defun trivial-clause-p trivial-clause-p3487,156077
(defun built-in-clausep built-in-clausep3492,156227
(defun crunch-clause-segments1 crunch-clause-segments13552,159618
(defun crunch-clause-segments2 crunch-clause-segments23592,161809
(defun crunch-clause-segments crunch-clause-segments3606,162320
(defun strip-non-rewrittenp-assumptions strip-non-rewrittenp-assumptions3673,165980
(defun assumnote-list-to-token-list assumnote-list-to-token-list3709,167467
(defun resume-suspended-assumption-rewriting1resume-suspended-assumption-rewriting13715,167680
(defun resume-suspended-assumption-rewritingresume-suspended-assumption-rewriting3871,175383
(defun cons-into-ttree cons-into-ttree3889,176222
(defun helpful-little-ecnt-msg helpful-little-ecnt-msg3978,180937
(defun rewrite-clause rewrite-clause3992,181290
(defun rewrite-clause-lst rewrite-clause-lst4284,194541
(defun setup-simplify-clause-pot-lst1 setup-simplify-clause-pot-lst14337,196733
(defun setup-simplify-clause-pot-lst setup-simplify-clause-pot-lst4362,197705
(defun sequential-subst-var-term sequential-subst-var-term4451,200782
(defun process-equational-polysprocess-equational-polys4463,201248
(defun enumerate-elements enumerate-elements4645,209872
(defun already-used-by-fertilize-clausep already-used-by-fertilize-clausep4649,209993
(defun unhidden-lit-info unhidden-lit-info4666,210864
(defun tilde-@-hyp-phrase tilde-@-hyp-phrase4685,211716
(defun simplify-clause1 simplify-clause14714,212826
(defun some-element-dumb-occur-lst some-element-dumb-occur-lst4882,220856
(defrec prove-spec-varprove-spec-var4895,221426
(defconst *empty-prove-spec-var**empty-prove-spec-var*4909,221986
(defun filter-disabled-expand-terms filter-disabled-expand-terms4922,222315
(defun found-hit-rewrite-hist-entry found-hit-rewrite-hist-entry4973,224639
(defabbrev append? append?4987,225208
(defun simplify-clause simplify-clause4991,225282
(defun settled-down-clause settled-down-clause5345,242874
(defun insert-pair-by-cdr insert-pair-by-cdr5368,243846
(defun extend-car-cdr-sorted-alist extend-car-cdr-sorted-alist5394,244710
(defun extract-and-classify-lemmas extract-and-classify-lemmas5409,245268
(deflabel SimpleSimple5459,247483
(defun tilde-*-conjunction-of-possibly-forced-names-phrase1 tilde-*-conjunction-of-possibly-forced-names-phrase15492,248878
(defun tilde-*-conjunction-of-possibly-forced-names-phrase tilde-*-conjunction-of-possibly-forced-names-phrase5502,249175
(defun tilde-*-simp-phrase1 tilde-*-simp-phrase15517,249778
(defun recover-forced-runes recover-forced-runes5659,255501
(defun tilde-*-simp-phrase tilde-*-simp-phrase5692,256615
(defrec clause-id clause-id5739,258575
(defconst *initial-clause-id**initial-clause-id*5748,258940
(defun tilde-@-pool-name-phrase tilde-@-pool-name-phrase5760,259354
(defun tilde-@-pool-name-phrase-lst tilde-@-pool-name-phrase-lst5798,261292
(defun tilde-@-clause-id-phrase tilde-@-clause-id-phrase5803,261518
(defun string-for-tilde-@-clause-id-phrase/periods string-for-tilde-@-clause-id-phrase/periods5898,264955
(defun string-for-tilde-@-clause-id-phrase/primes string-for-tilde-@-clause-id-phrase/primes5908,265303
(defun string-for-tilde-@-clause-id-phrase string-for-tilde-@-clause-id-phrase5916,265583
(defrec bddnotebddnote5943,266908
(defun tilde-@-bddnote-phrase tilde-@-bddnote-phrase5947,267009
(defun parse-natural parse-natural5961,267528
(defun parse-dotted-naturals parse-dotted-naturals5987,268520
(defun parse-match parse-match6016,269835
(defun parse-primes parse-primes6030,270398
(defun parse-clause-id2 parse-clause-id26056,271381
(defun parse-clause-id1 parse-clause-id16086,272377
(defun parse-clause-id parse-clause-id6152,274639
(defun tilde-@-case-split-limitations-phrase tilde-@-case-split-limitations-phrase6190,275942
(defun simplify-clause-msg1 simplify-clause-msg16205,276568
(deflabel specious-simplificationspecious-simplification6281,280694
(defun settled-down-clause-msg1 settled-down-clause-msg16393,286282

bdd.lisp,5938
(defmacro mvf mvf52,1875
(defmacro logandf logandf64,2439
(defmacro logxorf logxorf67,2507
(defmacro logiorf logiorf70,2574
(defmacro ashf ashf73,2641
(defmacro mx-id-bound mx-id-bound77,2748
(defmacro 1+mx-id 1+mx-id85,2999
(defmacro bdd-error bdd-error139,5124
(defmacro unique-id unique-id221,8495
(defmacro tst tst223,8544
(defmacro cst-boolp cst-boolp229,8834
(defmacro tbr tbr231,8872
(defmacro fbr fbr232,8904
(defmacro leafp leafp234,8937
(defmacro trm trm237,8980
(defun bdd-constructors bdd-constructors239,9011
(defun make-leaf-cst make-leaf-cst249,9357
(defun evg-fn-symb evg-fn-symb259,9659
(defun bdd-constructor-trm-p bdd-constructor-trm-p290,10622
(defun evg-type evg-type296,10835
(defun make-if-cst make-if-cst312,11375
(defconst *cst-t* *cst-t*371,14302
(defconst *cst-nil* *cst-nil*372,14347
(defmacro cst= cst=374,14395
(defmacro cst-tp cst-tp378,14473
(defmacro cst-nilp cst-nilp381,14524
(defmacro cst-varp cst-varp384,14577
(defun cst-nonnilp cst-nonnilp387,14630
(defun bool-mask1 bool-mask1411,15687
(defun boolean-term-var boolean-term-var428,16507
(defun boolean-hyps-vars boolean-hyps-vars461,17691
(defun first-boolean-type-prescription first-boolean-type-prescription476,18071
(defun recognizer-rune recognizer-rune511,19686
(defun bool-mask bool-mask521,20112
(defun commutative-p1 commutative-p1565,21701
(defun find-equivalence-rune find-equivalence-rune594,23097
(defun equivalence-rune1 equivalence-rune1605,23450
(defun equivalence-rune equivalence-rune632,24446
(defun commutative-p commutative-p642,24817
(defun op-alist op-alist659,25455
(defun op-alist-info op-alist-info695,26990
(defmacro if-op-code if-op-code718,27602
(defmacro hash-size hash-size720,27630
(defmacro if-hash-index if-hash-index747,28708
(defmacro *f *f759,29129
(defun op-hash-index1 op-hash-index1762,29186
(defmacro op-hash-index op-hash-index789,30233
(defmacro op-hash-index-2 op-hash-index-2794,30368
(defmacro op-hash-index-if op-hash-index-if804,30639
(defun if-search-bucket if-search-bucket814,30950
(defun cst=-lst cst=-lst825,31240
(defmacro eq-op eq-op831,31363
(defun op-search-bucket op-search-bucket837,31470
(defun op-search-bucket-2 op-search-bucket-2850,31949
(defun op-search-bucket-if op-search-bucket-if867,32683
(defun chk-memo chk-memo883,33297
(defun chk-memo-2 chk-memo-2901,33966
(defun chk-memo-if chk-memo-if917,34500
(defmacro half-hash-size half-hash-size937,35214
(defmacro fourth-hash-size fourth-hash-size940,35268
(defun op-hash-index-string op-hash-index-string943,35324
(defun op-hash-index-evg op-hash-index-evg956,35720
(defun op-search-bucket-quote op-search-bucket-quote989,36759
(defun chk-memo-quotep chk-memo-quotep997,37034
(defun bdd-quotep bdd-quotep1013,37518
(defmacro bdd-quotep+ bdd-quotep+1046,38629
(defrec bdd-rulebdd-rule1063,39448
(defun rewrite-rule-to-bdd-rule rewrite-rule-to-bdd-rule1067,39490
(defun bdd-rules-alist1bdd-rules-alist11073,39692
(defun extra-rules-for-bdds extra-rules-for-bdds1151,43827
(defun bdd-rules-alist bdd-rules-alist1218,46537
(defmacro one-way-unify1-cst-2 one-way-unify1-cst-21280,49157
(defmacro one-way-unify1-cst-3 one-way-unify1-cst-31294,49775
(defun one-way-unify1-cst one-way-unify1-cst1312,50505
(defun one-way-unify1-cst-lst one-way-unify1-cst-lst1493,61350
(defun one-way-unify1-cst-equal one-way-unify1-cst-equal1511,62003
(defun some-one-way-unify-cst-lst some-one-way-unify-cst-lst1525,62492
(defun leaf-cst-list leaf-cst-list1554,63643
(defun decode-cst decode-cst1576,64496
(defun decode-cst-lst decode-cst-lst1614,65767
(defun decode-cst-alist1 decode-cst-alist11626,66134
(defun decode-cst-alist decode-cst-alist1638,66582
(defun leaf-cst-list-array leaf-cst-list-array1644,66764
(defconst *some-non-nil-value* *some-non-nil-value*1651,66995
(defun falsifying-assignment1 falsifying-assignment11653,67049
(defun falsifying-assignment falsifying-assignment1690,68436
(defun make-if make-if1700,68797
(defun make-if-no-memo make-if-no-memo1779,72384
(defmacro split-var split-var1813,73663
(defun min-var min-var1826,74002
(defun combine-op-csts1 combine-op-csts11846,74590
(defun bool-flg bool-flg1879,76113
(defun some-bdd-constructorp some-bdd-constructorp1901,76764
(defun combine-op-csts-simplecombine-op-csts-simple1908,77021
(defmacro mv-let? mv-let?1960,78952
(defmacro combine-if-csts+ combine-if-csts+2023,81371
(defun combine-if-csts1 combine-if-csts12032,81694
(defun combine-if-cstscombine-if-csts2052,82419
(defun cst-list-to-evg-list cst-list-to-evg-list2130,85577
(defun cst-quote-listp cst-quote-listp2136,85740
(defrec bddspvbddspv2144,85924
(defun bdd-ev-fncallbdd-ev-fncall2155,86327
(defmacro combine-op-csts+ combine-op-csts+2185,87543
(defun make-if-for-opmake-if-for-op2203,88490
(defun combine-op-csts combine-op-csts2252,90061
(defun combine-op-csts-comm combine-op-csts-comm2282,91195
(defun combine-op-csts-gutscombine-op-csts-guts2359,94422
(defun bdd bdd2480,99583
(defun bdd-alist bdd-alist2600,104381
(defun bdd-list bdd-list2618,105137
(defun if-ht-max-length if-ht-max-length2644,106088
(defun op-ht-max-length op-ht-max-length2649,106243
(defun leaf-cst-list-to-alist leaf-cst-list-to-alist2654,106398
(defvar *request-bigger-fixnum-table**request-bigger-fixnum-table*2668,106826
(defun bdd-top bdd-top2671,106916
(defun get-bool-vars get-bool-vars2779,112571
(defun bdd-clause1 bdd-clause12797,113176
(defmacro expand-and-or-simple+expand-and-or-simple+2923,118606
(defun expand-and-or-simpleexpand-and-or-simple2935,119071
(defun expand-clauseexpand-clause3082,125567
(defun bdd-clause bdd-clause3107,126569
(deflabel obddobdd3222,132439
(deflabel bdd-algorithmbdd-algorithm3230,132593
(deflabel bdd-introductionbdd-introduction3740,157786

other-processes.lisp,5385
(defun strip-final-digits1 strip-final-digits136,1577
(defun strip-final-digits strip-final-digits57,2441
(defconst *var-families-by-type**var-families-by-type*82,3639
(defun assoc-ts-subsetp assoc-ts-subsetp103,4338
(defun first-non-member-eq first-non-member-eq113,4605
(defun abbreviate-hyphenated-string1 abbreviate-hyphenated-string1126,5013
(defun abbreviate-hyphenated-string abbreviate-hyphenated-string153,6112
(defun generate-variable-root1 generate-variable-root1170,6699
(defun generate-variable-root generate-variable-root231,9193
(defun generate-variable generate-variable250,9897
(defun generate-variable-lst generate-variable-lst262,10449
(defrec elim-ruleelim-rule293,12055
(defun occurs-nowhere-else occurs-nowhere-else299,12193
(defun first-nomination first-nomination311,12592
(defun second-nomination second-nomination318,12760
(defun some-hyp-probably-nilp some-hyp-probably-nilp331,13181
(defun sublis-expr sublis-expr355,14023
(defun sublis-expr-lst sublis-expr-lst373,14715
(defun nominate-destructor-candidatenominate-destructor-candidate380,14881
(defun nominate-destructor-candidatesnominate-destructor-candidates505,21378
(defun nominate-destructor-candidates-lstnominate-destructor-candidates-lst528,22206
(defun sum-level-nos sum-level-nos555,23314
(defun pick-highest-sum-level-nos pick-highest-sum-level-nos571,23979
(defun select-instantiated-elim-rule select-instantiated-elim-rule590,24763
(defrec type-set-inverter-rule type-set-inverter-rule644,27448
(defconst *initial-type-set-inverter-rules**initial-type-set-inverter-rules*672,28871
(defun convert-type-set-to-term-lst convert-type-set-to-term-lst895,39497
(defun convert-type-set-to-term convert-type-set-to-term923,40613
(defun type-restriction-segment type-restriction-segment957,42155
(defun subterm-one-way-unify subterm-one-way-unify1046,46348
(defun subterm-one-way-unify-lst subterm-one-way-unify-lst1059,46886
(defrec generalize-rule generalize-rule1069,47179
(defun apply-generalize-rule apply-generalize-rule1071,47231
(defun generalize-rule-segment1 generalize-rule-segment11110,48995
(defun generalize-rule-segment generalize-rule-segment1132,50097
(defun generalize1 generalize11156,51276
(defun apply-instantiated-elim-rule apply-instantiated-elim-rule1189,52903
(defun eliminate-destructors-clause1eliminate-destructors-clause11284,57513
(defun owned-vars owned-vars1405,63694
(defun eliminate-destructors-clause eliminate-destructors-clause1484,67944
(defun prettyify-clause1 prettyify-clause11518,69587
(defun prettyify-clause2 prettyify-clause21523,69773
(defun prettyify-clause prettyify-clause1537,70383
(defun prettyify-clause-lst prettyify-clause-lst1550,70934
(defun prettyify-clause-set prettyify-clause-set1556,71218
(defun tilde-*-elim-phrase/alist1 tilde-*-elim-phrase/alist11562,71483
(defun tilde-*-elim-phrase/alist tilde-*-elim-phrase/alist1569,71754
(defun tilde-*-elim-phrase3 tilde-*-elim-phrase31581,72198
(defun tilde-*-elim-phrase2 tilde-*-elim-phrase21589,72601
(defun tilde-*-elim-phrase1 tilde-*-elim-phrase11616,73925
(defun tilde-*-elim-phrase tilde-*-elim-phrase1649,75555
(defun tilde-*-untranslate-lst-phrase tilde-*-untranslate-lst-phrase1669,76173
(defun eliminate-destructors-clause-msg1 eliminate-destructors-clause-msg11674,76319
(defun almost-quotep1 almost-quotep11727,78759
(defun almost-quotep1-listp almost-quotep1-listp1738,79132
(defun almost-quotep almost-quotep1745,79297
(defun destructor-applied-to-varsp destructor-applied-to-varsp1757,79652
(defun dumb-occur-lst-except dumb-occur-lst-except1774,80335
(defun fertilize-feasible fertilize-feasible1792,81144
(defun fertilize-complexity fertilize-complexity1810,81934
(defun maximize-fertilize-complexity maximize-fertilize-complexity1820,82269
(defun first-fertilize-lit first-fertilize-lit1827,82473
(defun cross-fertilizep/c cross-fertilizep/c1861,84037
(defun cross-fertilizep/d cross-fertilizep/d1875,84528
(defun cross-fertilizep cross-fertilizep1889,85019
(defun delete-from-ttree-1 delete-from-ttree-11914,86336
(defun delete-from-ttree delete-from-ttree1938,87429
(defun fertilize-clause1 fertilize-clause11944,87612
(defun fertilize-clause fertilize-clause2143,96914
(defun fertilize-clause-msg1 fertilize-clause-msg12231,101374
(defun collectable-fnp collectable-fnp2276,103376
(defun smallest-common-subterms1 smallest-common-subterms12294,104005
(defun smallest-common-subterms1-lst smallest-common-subterms1-lst2355,106437
(defun smallest-common-subterms smallest-common-subterms2376,107118
(defun generalizing-relationp generalizing-relationp2392,107825
(defun generalizable-terms-across-relations generalizable-terms-across-relations2423,109192
(defun generalizable-terms-across-literals1 generalizable-terms-across-literals12438,109813
(defun generalizable-terms-across-literals generalizable-terms-across-literals2444,110059
(defun generalizable-terms generalizable-terms2456,110538
(defun generalize-clause generalize-clause2467,110892
(defun tilde-*-gen-phrase/alist1 tilde-*-gen-phrase/alist12542,114391
(defun tilde-*-gen-phrase/alist tilde-*-gen-phrase/alist2549,114660
(defun tilde-*-gen-phrase tilde-*-gen-phrase2557,114829
(defun generalize-clause-msg1 generalize-clause-msg12611,117685

induct.lisp,7604
(defun select-x-cl-set select-x-cl-set29,1205
(defun unchangeables unchangeables41,1660
(defun changeables changeables56,2254
(defun sound-induction-principle-mask1 sound-induction-principle-mask172,2840
(defun sound-induction-principle-mask sound-induction-principle-mask110,4631
(defrec candidatecandidate168,7593
(defun count-non-nils count-non-nils215,10533
(defun controllers controllers220,10678
(defun changed/unchanged-vars changed/unchanged-vars227,10961
(defrec tests-and-alists tests-and-alists234,11249
(defun tests-and-alists/alist tests-and-alists/alist236,11295
(defun tests-and-alists/alists tests-and-alists/alists263,12470
(defrec tests-and-calls tests-and-calls285,13493
(defrec justification justification300,14290
(defun tests-and-alists tests-and-alists302,14342
(defun tests-and-alists-lst tests-and-alists-lst318,15087
(defun flesh-out-induction-principle flesh-out-induction-principle330,15556
(defun intrinsic-suggested-induction-candintrinsic-suggested-induction-cand367,16698
(defrec induction-rule induction-rule407,18870
(defun apply-induction-rule apply-induction-rule411,18961
(defun suggested-induction-cands1suggested-induction-cands1461,21234
(defun suggested-induction-candssuggested-induction-cands517,23512
(defun get-induction-cands get-induction-cands538,24399
(defun get-induction-cands-lst get-induction-cands-lst554,24914
(defun get-induction-cands-from-cl-set1 get-induction-cands-from-cl-set1569,25290
(defun get-induction-cands-from-cl-set get-induction-cands-from-cl-set595,26368
(defun pigeon-holep-apply pigeon-holep-apply630,27887
(defun pigeon-holep pigeon-holep672,29675
(defun pigeon-holep1 pigeon-holep1691,30497
(defun flush-cand1-down-cand2 flush-cand1-down-cand2712,31197
(defun flush-candidates flush-candidates748,33032
(defun alists-agreep alists-agreep773,34268
(defun irreconcilable-alistsp irreconcilable-alistsp786,34769
(defun affinity affinity804,35535
(defun member-affinity member-affinity817,36008
(defun occur-affinity occur-affinity826,36296
(defun some-occur-affinity some-occur-affinity842,36866
(defun all-occur-affinity all-occur-affinity851,37200
(defun contains-affinity contains-affinity860,37533
(defun antagonistic-tests-and-alists-lstp antagonistic-tests-and-alists-lstp873,38020
(defun antagonistic-tests-and-alists-lstsp antagonistic-tests-and-alists-lstsp899,38951
(defun every-alist1-matedp every-alist1-matedp914,39436
(defun merge-alist1-into-alist2 merge-alist1-into-alist2935,40361
(defun merge-alist1-lst-into-alist2 merge-alist1-lst-into-alist2956,41294
(defun merge-lst1-into-alist2 merge-lst1-into-alist2970,41766
(defun merge-lst1-into-alist2-lst merge-lst1-into-alist2-lst986,42243
(defun merge-lst1-into-lst2 merge-lst1-into-lst2991,42479
(defun merge-tests-and-alists-lsts merge-tests-and-alists-lsts1001,42890
(defun merge-cand1-into-cand2 merge-cand1-into-cand21082,47461
(defun merge-candidates merge-candidates1180,52824
(defun controller-variables1 controller-variables11195,53294
(defun controller-variables controller-variables1210,53924
(defun induct-vars1 induct-vars11224,54629
(defun induct-vars induct-vars1238,55053
(defun vetoedp vetoedp1257,55800
(defun compute-vetoes1 compute-vetoes11281,56803
(defun compute-vetoes2 compute-vetoes21303,57644
(defun compute-vetoes compute-vetoes1319,58195
(defun induction-complexity1 induction-complexity11383,61534
(defun maximal-elements-apply maximal-elements-apply1401,62347
(defun maximal-elements1 maximal-elements11414,62787
(defun maximal-elements maximal-elements1439,63841
(defun intersectp-eq/union-equal intersectp-eq/union-equal1463,64734
(defun equal/union-equal equal/union-equal1469,64922
(defun subsetp-equal/smaller subsetp-equal/smaller1475,65075
(defun m&m-apply m&m-apply1480,65193
(defun count-off count-off1493,65710
(defun m&m-search m&m-search1501,65916
(defun m&m1 m&m11519,66676
(defun m&m m&m1570,68815
(defun cons-subset-tree cons-subset-tree1655,73320
(defabbrev car-subset-tree car-subset-tree1672,73744
(defabbrev cdr-subset-tree cdr-subset-tree1678,73829
(defun or-subset-trees or-subset-trees1684,73914
(defun m&m-over-powerset1 m&m-over-powerset11696,74412
(defun m&m-over-powerset m&m-over-powerset1722,75209
(defun all-picks2 all-picks21831,80484
(defun all-picks2r all-picks2r1837,80664
(defun all-picks1 all-picks11843,80853
(defun all-picks all-picks1852,81172
(defun dumb-negate-lit-lst-lst dumb-negate-lit-lst-lst1893,83144
(defun induction-hyp-clause-segments2 induction-hyp-clause-segments21905,83639
(defun induction-hyp-clause-segments1 induction-hyp-clause-segments11911,83884
(defun induction-hyp-clause-segments induction-hyp-clause-segments1923,84302
(defun induction-formula3 induction-formula31959,86064
(defun induction-formula2 induction-formula22002,87829
(defun induction-formula1 induction-formula12031,89075
(defun induction-formula induction-formula2047,89827
(defun all-picks-size all-picks-size2119,93035
(defun induction-formula-size1 induction-formula-size12126,93238
(defun induction-formula-size induction-formula-size2142,93972
(defconst *maximum-induct-size* *maximum-induct-size*2157,94568
(defun termify-clause-set termify-clause-set2162,94690
(defun inform-simplify3 inform-simplify32179,95363
(defun inform-simplify2 inform-simplify22188,95682
(defun inform-simplify1 inform-simplify12198,95970
(defun inform-simplify inform-simplify2212,96539
(defun all-vars1-lst-lst all-vars1-lst-lst2263,99425
(defun gen-new-name1 gen-new-name12272,99726
(defun gen-new-name gen-new-name2282,100051
(defun unmeasured-variables3 unmeasured-variables32290,100283
(defun unmeasured-variables2 unmeasured-variables22298,100595
(defun unmeasured-variables1 unmeasured-variables12304,100825
(defun unmeasured-variables unmeasured-variables2313,101237
(defun tilde-@-well-founded-relation-phrase tilde-@-well-founded-relation-phrase2324,101726
(defun measured-variables measured-variables2342,102472
(defun induct-msg/continue induct-msg/continue2352,102861
(defun induct-msg/lose induct-msg/lose2521,110738
(defun load-hint-settings-into-rcnst load-hint-settings-into-rcnst2548,111771
(defun update-hint-settings update-hint-settings2595,114053
(defun load-hint-settings-into-pspv load-hint-settings-into-pspv2610,114618
(defun restore-hint-settings-in-pspv restore-hint-settings-in-pspv2642,116102
(defun remove-trivial-clauses remove-trivial-clauses2655,116789
(defun classicalp classicalp2664,117069
(defun classical-fn-list-p classical-fn-list-p2685,117854
(defun non-standard-vector-check non-standard-vector-check2692,118062
(defun merge-ns-check merge-ns-check2700,118333
(defun trap-non-standard-vector-aux trap-non-standard-vector-aux2708,118616
(defun remove-adjacent-duplicates remove-adjacent-duplicates2722,119312
(defun non-standard-induction-vars non-standard-induction-vars2729,119587
(defun trap-non-standard-vector trap-non-standard-vector2741,120011
(defun induct induct2749,120374
(defun pair-vars-with-lits pair-vars-with-lits2926,128789
(defun ffnnames-subsetp ffnnames-subsetp2939,129131
(defun ffnnames-subsetp-listp ffnnames-subsetp-listp2953,129624
(defun probably-not-validp probably-not-validp2963,129904
(defun irrelevant-lits irrelevant-lits2996,131482
(defun eliminate-irrelevance-clause eliminate-irrelevance-clause3008,131965
(defun eliminate-irrelevance-clause-msg1 eliminate-irrelevance-clause-msg13038,133281

history-management.lisp,31017
(defrec goal-tree goal-tree42,1468
(defmacro initialize-from-alist initialize-from-alist100,4615
(deflabel proof-treeproof-tree114,5133
(deflabel proof-tree-emacsproof-tree-emacs189,8434
(deflabel proof-tree-bindingsproof-tree-bindings269,11305
(deflabel proof-tree-examplesproof-tree-examples333,13923
(defun start-proof-tree-fn start-proof-tree-fn612,24070
(defmacro start-proof-tree start-proof-tree647,25504
(defmacro start-proof-tree start-proof-tree676,26530
(defmacro checkpoint-forced-goals checkpoint-forced-goals686,26821
(defun stop-proof-tree-fn stop-proof-tree-fn709,27607
(defmacro stop-proof-tree stop-proof-tree715,27819
(deflabel proof-tree-detailsproof-tree-details744,28882
(defun insert-into-goal-tree insert-into-goal-tree794,31096
(defun insert-into-goal-tree-lst insert-into-goal-tree-lst821,32093
(defun set-difference-equal-changedp set-difference-equal-changedp846,32885
(defun prune-goal-tree prune-goal-tree864,33536
(defun prune-goal-tree-lst prune-goal-tree-lst949,37441
(defun prune-proof-tree prune-proof-tree966,38108
(defun print-string-repeat print-string-repeat978,38646
(defconst *format-proc-alist**format-proc-alist*990,39049
(defun format-forced-subgoals format-forced-subgoals1002,39400
(defun format-processor format-processor1025,40385
(defun format-goal-tree-lstformat-goal-tree-lst1078,42402
(defun format-goal-tree format-goal-tree1110,43654
(defun format-proof-tree format-proof-tree1160,45806
(defun print-proof-tree1 print-proof-tree11182,46623
(defconst *proof-failure-string**proof-failure-string*1195,47183
(defun print-proof-tree-ctx print-proof-tree-ctx1198,47293
(defconst *proof-tree-start-delimiter* *proof-tree-start-delimiter*1222,48125
(defconst *proof-tree-end-delimiter* *proof-tree-end-delimiter*1224,48175
(defun print-proof-tree print-proof-tree1226,48222
(defun logical-namep logical-namep1294,51466
(defun logical-name-type logical-name-type1310,52014
(defun logical-name-type-string logical-name-type-string1335,53013
(defun signature-fns signature-fns1431,57889
(defun make-event-tuple make-event-tuple1446,58501
(defun access-event-tuple-depth access-event-tuple-depth1488,60572
(defun access-event-tuple-type access-event-tuple-type1491,60647
(defun access-event-tuple-namex access-event-tuple-namex1500,60883
(defun access-event-tuple-form access-event-tuple-form1522,61635
(defun access-event-tuple-symbol-class access-event-tuple-symbol-class1527,61725
(defun make-command-tuple make-command-tuple1553,63033
(defun access-command-tuple-number access-command-tuple-number1574,63889
(defun access-command-tuple-defun-mode access-command-tuple-defun-mode1582,64113
(defun access-command-tuple-form access-command-tuple-form1587,64215
(defun access-command-tuple-last-make-event-expansion access-command-tuple-last-make-event-expansion1590,64301
(defun access-event-tuple-number access-event-tuple-number1593,64372
(defun max-absolute-event-number max-absolute-event-number1603,64658
(defun next-absolute-event-number next-absolute-event-number1613,65057
(defun max-absolute-command-number max-absolute-command-number1616,65140
(defun next-absolute-command-number next-absolute-command-number1624,65419
(defun scan-to-event scan-to-event1629,65536
(defun scan-to-command scan-to-command1640,65824
(defun scan-to-landmark-number scan-to-landmark-number1650,66086
(defun add-to-zap-table add-to-zap-table1787,73679
(defun fetch-from-zap-table fetch-from-zap-table1795,73921
(defconst *event-index-interval* *event-index-interval*1814,74602
(defconst *command-index-interval* *command-index-interval*1815,74639
(defun update-world-index update-world-index1817,74679
(defun lookup-world-index1 lookup-world-index11891,78220
(defun lookup-world-index lookup-world-index1913,79128
(defun store-absolute-event-number store-absolute-event-number1942,80380
(defun the-namex-symbol-class1 the-namex-symbol-class11966,81198
(defun the-namex-symbol-class the-namex-symbol-class1988,82470
(defun add-event-landmark add-event-landmark1996,82721
(defun scan-to-defpkg scan-to-defpkg2026,84090
(defun scan-to-include-book scan-to-include-book2041,84727
(defun assoc-equal-cadr assoc-equal-cadr2055,85330
(defun multiple-assoc-terminal-substringp1 multiple-assoc-terminal-substringp12060,85490
(defun multiple-assoc-terminal-substringp multiple-assoc-terminal-substringp2066,85799
(defun possibly-add-lisp-extension possibly-add-lisp-extension2075,86189
(defun decode-logical-name decode-logical-name2091,86665
(defun er-decode-logical-name er-decode-logical-name2134,88212
(defun renew-lemmas renew-lemmas2166,89482
(defun renew-name/erase renew-name/erase2177,89924
(defun renew-name/overwrite renew-name/overwrite2203,90962
(defun renew-name renew-name2316,94667
(defun renew-names renew-names2359,96757
(defun collect-redefined-alist collect-redefined-alist2365,96975
(defun scrunch-eq scrunch-eq2388,97922
(defun print-redefinition-warning print-redefinition-warning2393,98091
(defun initialize-summary-accumulators initialize-summary-accumulators2432,99779
(defun print-warnings-summary print-warnings-summary2455,100749
(defun print-time-summary print-time-summary2471,101209
(defun all-runes-in-lmi all-runes-in-lmi2519,103235
(defun all-runes-in-lmi-lst all-runes-in-lmi-lst2534,103830
(defun all-runes-in-var-to-runes-alist all-runes-in-var-to-runes-alist2539,104038
(defun all-runes-in-elim-sequence all-runes-in-elim-sequence2547,104256
(defun all-runes-in-ttree all-runes-in-ttree2562,104937
(defun rune-< rune-<2670,109750
(defun merge-runes merge-runes2679,109893
(defun merge-sort-runes merge-sort-runes2686,110111
(defun print-rules-summary print-rules-summary2691,110276
(defun merge-cdr-> merge-cdr->2715,111190
(defun merge-sort-cdr-> merge-sort-cdr->2723,111436
(defun print-summary print-summary2728,111601
(defmacro with-ctx-summarized with-ctx-summarized2829,115964
(defun supply-cddr-for-lst supply-cddr-for-lst2906,119874
(defun proved-functional-instances-from-tagged-objects proved-functional-instances-from-tagged-objects2915,120101
(defvar *monitor-count* *monitor-count*3001,123426
(defvar *string-count**string-count*3003,123456
(defvar *cons-count**cons-count*3006,123556
(defvar *count-hash-table**count-hash-table*3009,123654
(defun increment-string-count increment-string-count3012,123726
(defun increment-cons-count increment-cons-count3027,124284
(defvar *acl2-strings*)*acl2-strings*3039,124703
(defun count-objects1 count-objects13041,124728
(defun count-objects count-objects3058,125223
(defun add-command-landmark add-command-landmark3155,128081
(defun find-longest-common-retraction1 find-longest-common-retraction13189,129788
(defun find-longest-common-retraction1-event find-longest-common-retraction1-event3195,130010
(defun find-longest-common-retraction find-longest-common-retraction3201,130234
(defun install-global-enabled-structure install-global-enabled-structure3222,131083
(defun set-w set-w3257,132760
(defun set-w! set-w!3333,136133
(defmacro revert-world-on-error revert-world-on-error3367,137642
(defun chk-theory-expr-value1 chk-theory-expr-value13385,138423
(defun chk-theory-expr-value chk-theory-expr-value3414,139790
(defun theory-fn-translated-callp theory-fn-translated-callp3422,140131
(defun eval-theory-expr eval-theory-expr3441,140731
(defun append-strip-cdrs append-strip-cdrs3473,141856
(defun no-rune-based-on no-rune-based-on3480,142013
(defun revappend-delete-runes-based-on-symbols1 revappend-delete-runes-based-on-symbols13486,142201
(defun revappend-delete-runes-based-on-symbols revappend-delete-runes-based-on-symbols3498,142755
(defun current-theory1 current-theory13519,143694
(defun first-n-ac-rev first-n-ac-rev3557,145502
(defun longest-common-tail-length-rec longest-common-tail-length-rec3569,145891
(defun longest-common-tail-length longest-common-tail-length3583,146458
(defun extend-current-theory extend-current-theory3592,146806
(defun update-current-theory update-current-theory3623,148135
(defun install-event install-event3647,149352
(deflabel redundant-eventsredundant-events3765,156095
(defun stop-redundant-event stop-redundant-event3986,167126
(defrec command-number-baseline-infocommand-number-baseline-info4037,169264
(defun absolute-to-relative-command-number absolute-to-relative-command-number4041,169344
(defun relative-to-absolute-command-number relative-to-absolute-command-number4046,169531
(defun normalize-absolute-command-number normalize-absolute-command-number4051,169718
(defun tree-occur tree-occur4101,171649
(defun cd-form-matchp cd-form-matchp4110,171838
(defun cd-some-event-matchp cd-some-event-matchp4123,172214
(defun cd-search cd-search4142,172994
(defun superior-command-world superior-command-world4183,174798
(defun er-decode-cd er-decode-cd4214,176286
(defun make-ldd-flags make-ldd-flags4401,185500
(defun make-ldd make-ldd4413,186120
(defun access-ldd-class access-ldd-class4430,186784
(defun access-ldd-markp access-ldd-markp4431,186828
(defun access-ldd-cdpair access-ldd-cdpair4432,186872
(defun access-ldd-fullp access-ldd-fullp4433,186916
(defun access-ldd-n access-ldd-n4434,186960
(defun access-ldd-form access-ldd-form4435,187003
(defun big-d-little-d-name1 big-d-little-d-name14437,187047
(defun big-d-little-d-name big-d-little-d-name4451,187671
(defun big-d-little-d-clique1 big-d-little-d-clique14465,188312
(defun big-d-little-d-clique big-d-little-d-clique4478,188862
(defun big-d-little-d-event big-d-little-d-event4489,189321
(defun big-d-little-d-command-block big-d-little-d-command-block4515,190537
(defun symbol-class-char symbol-class-char4558,192547
(defun defun-mode-string defun-mode-string4569,192863
(defun big-c-little-c-event big-c-little-c-event4577,193117
(defun big-c-little-c-command-block big-c-little-c-command-block4604,194386
(defun print-ldd-full-or-sketch/mutual-recursion print-ldd-full-or-sketch/mutual-recursion4642,196186
(defun print-ldd-full-or-sketch/encapsulate print-ldd-full-or-sketch/encapsulate4651,196494
(defun normalize-char normalize-char4664,197023
(defun normalize-string1 normalize-string14670,197179
(defun normalize-string normalize-string4682,197713
(defun string-matchp string-matchp4692,198118
(defun string-search1 string-search14718,199106
(defun string-search string-search4725,199333
(defun doc-stringp doc-stringp4742,199923
(defconst *zapped-doc-string**zapped-doc-string*4759,200423
(defun zap-doc-string-from-event-form/all-but-last zap-doc-string-from-event-form/all-but-last4762,200492
(defun zap-doc-string-from-event-form/second-arg zap-doc-string-from-event-form/second-arg4771,200851
(defun zap-doc-string-from-event-form/third-arg zap-doc-string-from-event-form/third-arg4781,201119
(defun zap-doc-string-from-event-form/mutual-recursion zap-doc-string-from-event-form/mutual-recursion4792,201443
(defun zap-doc-string-from-event-form/doc-keyword zap-doc-string-from-event-form/doc-keyword4797,201684
(defun zap-doc-string-from-event-form zap-doc-string-from-event-form4818,202650
(defun print-ldd-full-or-sketch print-ldd-full-or-sketch4837,203407
(defmacro with-base-10 with-base-104886,205166
(defun print-ldd print-ldd4897,205457
(defun print-ldds print-ldds4949,207336
(defun make-command-ldd make-command-ldd4981,208893
(defun make-event-ldd make-event-ldd4993,209397
(defun make-ldds-command-sequence make-ldds-command-sequence5002,209697
(defun make-ldds-command-block1 make-ldds-command-block15026,210824
(defun make-ldds-command-block make-ldds-command-block5097,213240
(defun pcb-pcb!-fn pcb-pcb!-fn5115,214025
(defun pcb!-fn pcb!-fn5128,214488
(defun pcb-fn pcb-fn5131,214543
(defmacro pcb! pcb!5134,214599
(defun pc-fn pc-fn5154,215230
(defmacro pc pc5166,215639
(defun pcs-fn pcs-fn5288,221070
(defmacro pcs pcs5339,223477
(defmacro pbt pbt5361,224322
(defmacro pcb pcb5385,225215
(defun print-indented-list print-indented-list5416,226693
(defun print-book-path print-book-path5430,227173
(defun pe-fn1 pe-fn15445,227681
(defun pe-fn2 pe-fn25475,228698
(defun pe-fn pe-fn5485,229236
(defmacro pe pe5510,230461
(defmacro pe! pe!5556,232165
(defun command-block-names1 command-block-names15570,232512
(defun command-block-names command-block-names5605,234207
(defun symbol-name-lst symbol-name-lst5614,234580
(defun acl2-query-simulate-interaction acl2-query-simulate-interaction5619,234725
(defun acl2-query1 acl2-query15637,235437
(defun acl2-query acl2-query5690,237553
(defun collect-names-in-defun-modes collect-names-in-defun-modes5740,239891
(defun ubt-ubu-query ubt-ubu-query5751,240334
(defmacro ubt ubt5878,247399
(defmacro ubt! ubt!5921,249360
(defmacro ubu ubu5939,249902
(defmacro ubu! ubu!5970,251116
(defmacro u u5988,251665
(defun chk-virgin chk-virgin6010,252342
(deflabel namename6022,252603
(defun chk-all-but-new-name chk-all-but-new-name6069,254830
(defun chk-boot-strap-redefineable-namep chk-boot-strap-redefineable-namep6099,256047
(defun maybe-coerce-overwrite-to-erase maybe-coerce-overwrite-to-erase6115,256758
(defun silent-error silent-error6121,256936
(defun redefinition-renewal-moderedefinition-renewal-mode6124,256985
(defun redefined-names1 redefined-names16343,267554
(defun redefined-names redefined-names6353,267932
(defun chk-redefineable-namep chk-redefineable-namep6375,268664
(defun chk-just-new-name chk-just-new-name6440,271656
(defun no-new-namesp no-new-namesp6487,273830
(defun chk-just-new-names chk-just-new-names6496,274050
(defconst *return-character* *return-character*6522,275274
(defun read-symbol-from-string1 read-symbol-from-string16524,275320
(defun read-symbol-from-string2 read-symbol-from-string26539,275884
(defun read-symbol-from-string read-symbol-from-string6548,276215
(defun scan-past-newline scan-past-newline6599,278775
(defun scan-past-newlines scan-past-newlines6606,278991
(defun scan-past-tilde-slash scan-past-tilde-slash6613,279204
(defun scan-to-doc-string-part1 scan-to-doc-string-part16625,279769
(defun scan-to-doc-string-part scan-to-doc-string-part6636,280072
(defun get-one-liner-as-string1 get-one-liner-as-string16655,280834
(defun get-one-liner-as-string get-one-liner-as-string6660,281008
(defun read-doc-string-citations1 read-doc-string-citations16668,281319
(defun read-doc-string-citations read-doc-string-citations6682,281827
(defun doc-topicp doc-topicp6698,282596
(defun chk-doc-string-citations chk-doc-string-citations6701,282688
(defun chk-well-formed-doc-string chk-well-formed-doc-string6737,284312
(defun translate-doc translate-doc6827,288623
(defun translate-doc-lst translate-doc-lst6849,289544
(defun get-cites get-cites6856,289822
(defun alpha-< alpha-<6867,290159
(defun merge-alpha-< merge-alpha-<6887,290902
(defun merge-sort-alpha-< merge-sort-alpha-<6894,291127
(defun update-alpha-<-alist update-alpha-<-alist6899,291302
(defun put-cited-bys put-cited-bys6911,291752
(defun update-doc-data-base update-doc-data-base6936,292693
(defun update-doc-data-base-lst update-doc-data-base-lst6961,293773
(defun putprop-unless putprop-unless6969,294045
(defun redefined-warning redefined-warning6977,294307
(defun get-event get-event6990,294765
(defun redundant-labelp redundant-labelp6999,295031
(defun deflabel-fn deflabel-fn7009,295395
(defun defdoc-fn defdoc-fn7053,297027
(defmacro defdoc defdoc7098,298651
(defun access-doc-string-data-base access-doc-string-data-base7166,301827
(defun get-doc-string get-doc-string7199,302985
(defun get-doc-string-de-indent1 get-doc-string-de-indent17206,303168
(defun get-doc-string-de-indent get-doc-string-de-indent7210,303309
(defun use-doc-string-de-indent use-doc-string-de-indent7222,303825
(defun doc-prefix doc-prefix7233,304145
(defun princ-prefix princ-prefix7238,304266
(defun length-prefix length-prefix7244,304508
(defun save-more-doc-state save-more-doc-state7248,304633
(defun doc-char-subst-table-p doc-char-subst-table-p7255,304914
(defun set-doc-char-subst-table set-doc-char-subst-table7268,305209
(defun doc-char-subst-table doc-char-subst-table7278,305630
(defun doc-fmt-alist doc-fmt-alist7285,305814
(defconst *terminal-markup-table**terminal-markup-table*7289,305935
(defun doc-markup-table doc-markup-table7406,312015
(defun doc-scan-past-tilde-key doc-scan-past-tilde-key7414,312226
(defun doc-scan-past-tilde-argdoc-scan-past-tilde-arg7442,313492
(defun doc-scan-past-tildedoc-scan-past-tilde7487,315608
(defun assoc-char-alist-stringp assoc-char-alist-stringp7525,317353
(defun apply-char-subst-table1 apply-char-subst-table17535,317666
(defun apply-char-subst-table apply-char-subst-table7556,318559
(defun read-pointer-and-text1 read-pointer-and-text17583,319614
(defun read-pointer-and-text2 read-pointer-and-text27607,320700
(defun read-pointer-and-text-raw read-pointer-and-text-raw7616,321032
(defun posn-char-stringp posn-char-stringp7629,321443
(defun replace-colons replace-colons7639,321667
(defun read-pointer-and-text read-pointer-and-text7651,322056
(defun lookup-fmt-alist lookup-fmt-alist7659,322283
(defun bar-sep-p bar-sep-p7735,325671
(defun print-doc-string-part1 print-doc-string-part17739,325780
(defun print-doc-string-partprint-doc-string-part7923,334946
(defun get-doc-section get-doc-section7987,337876
(defmacro pstate-global-let* pstate-global-let*7995,338171
(defun print-doc print-doc8009,338599
(defun print-doc-lst print-doc-lst8091,342112
(defun degree-of-match2 degree-of-match28108,342791
(defun degree-of-match1 degree-of-match18116,343090
(defun degree-of-match degree-of-match8122,343336
(defun find-likely-near-misses find-likely-near-misses8136,343873
(defun print-doc-dwim print-doc-dwim8154,344688
(defun end-doc end-doc8171,345327
(defun doc-fn doc-fn8181,345674
(defun more-fn more-fn8232,348047
(defun doc!-fn doc!-fn8256,349113
(defmacro more more8277,350177
(defmacro more! more!8325,352252
(defun print-doc-outlineprint-doc-outline8350,353103
(defun print-doc-outline-lst print-doc-outline-lst8380,354228
(deflabel aproposapropos8394,354957
(deflabel markupmarkup8418,355800
(deflabel doc-stringdoc-string8693,366820
(deflabel print-doc-start-columnprint-doc-start-column8926,379532
(defmacro doc doc8948,380420
(defmacro doc! doc!9010,383312
(defun more-doc-fn more-doc-fn9028,383730
(defmacro more-doc more-doc9042,384378
(defun get-doc-section-symbols get-doc-section-symbols9068,385356
(defun get-docs-apropos1 get-docs-apropos19073,385549
(defun get-docs-apropos get-docs-apropos9079,385824
(defun docs-fn docs-fn9082,385929
(defmacro docs docs9137,388090
(defun print-top-doc-topics print-top-doc-topics9186,390109
(defun help-fn help-fn9198,390566
(deflabel q q9253,392922
(defmacro help help9275,393722
(deflabel logical-namelogical-name9290,393965
(deflabel commandcommand9365,397508
(deflabel command-descriptorcommand-descriptor9391,398545
(defun trans-fn trans-fn9479,402928
(defun trans!-fn trans!-fn9505,404060
(defmacro trans trans9526,404861
(defmacro trans! trans!9572,406272
(defun trans1-fn trans1-fn9589,406741
(defmacro trans1 trans19599,407128
(defun tilde-*-props-fn-phrase1 tilde-*-props-fn-phrase19619,407646
(defun tilde-*-props-fn-phrase tilde-*-props-fn-phrase9626,407882
(defun props-fn props-fn9630,407998
(defmacro props props9651,408753
(deflabel enter-boot-strap-modeenter-boot-strap-mode9666,409050
(deflabel exit-boot-strap-modeexit-boot-strap-mode9697,410499
(defun walkabout-nth walkabout-nth9721,411464
(defun walkabout-ip walkabout-ip9744,412287
(defun walkabout-huh walkabout-huh9755,412607
(defun walkabout1 walkabout19760,412760
(defun walkabout walkabout9838,415791
(defun walkabout=-fn walkabout=-fn9853,416391
(defmacro walkabout= walkabout=9859,416594
(defun lookup-bddnote lookup-bddnote9864,416725
(defun update-bddnote-with-term update-bddnote-with-term9871,416922
(defmacro show-bdd show-bdd9884,417400
(defun show-bdd-goal show-bdd-goal9965,420823
(defun merge-car-term-order merge-car-term-order10014,422860
(defun merge-sort-car-term-order merge-sort-car-term-order10021,423121
(defun falsifying-pair-p falsifying-pair-p10026,423331
(defun bogus-falsifying-assignment-var bogus-falsifying-assignment-var10035,423628
(defun show-falsifying-assignment show-falsifying-assignment10046,423880
(defun show-bdd-term show-bdd-term10119,427392
(defun tilde-*-substitution-phrase1 tilde-*-substitution-phrase110186,430209
(defun tilde-*-substitution-phrase tilde-*-substitution-phrase10197,430741
(defun show-bdd-backtrace show-bdd-backtrace10203,430994
(defun show-bdd-fn show-bdd-fn10232,432058
(defun chk-no-duplicate-defuns chk-no-duplicate-defuns10298,435223
(defun remove-all-eq remove-all-eq10308,435590
(defun chk-state-ok chk-state-ok10314,435756
(defun chk-arglist chk-arglist10330,436414
(defun chk-defuns-tuples chk-defuns-tuples10349,437214
(defun get-docs get-docs10396,438999
(defun get-guards1 get-guards110409,439437
(defun get-guards get-guards10454,441432
(defun get-guardsp get-guardsp10474,442162
(defun get-measures1 get-measures110488,442799
(defun get-measures2 get-measures210519,444303
(defun get-measures get-measures10525,444557
(defun get-hints1 get-hints110541,445160
(defun get-hints get-hints10562,445761
(defun get-guard-hints1 get-guard-hints110572,446073
(defun get-guard-hints get-guard-hints10594,446724
(defun get-std-hints1 get-std-hints110605,447085
(defun get-std-hints get-std-hints10628,447723
(defun get-normalizep get-normalizep10638,448051
(defun get-normalizeps get-normalizeps10677,449451
(defun get-unambiguous-xargs-flg1/edcls get-unambiguous-xargs-flg1/edcls10688,449948
(defun get-unambiguous-xargs-flg1 get-unambiguous-xargs-flg110721,451438
(defun get-unambiguous-xargs-flg get-unambiguous-xargs-flg10738,452278
(defun chk-xargs-keywords1 chk-xargs-keywords110762,453545
(defun chk-xargs-keywords chk-xargs-keywords10776,454259
(defun get-names get-names10797,455085
(defun get-bodies get-bodies10802,455205
(defun chk-free-vars chk-free-vars10807,455334
(defun chk-declared-ignores chk-declared-ignores10818,455841
(defun chk-free-and-ignored-varschk-free-and-ignored-vars10830,456359
(defun symbol-list-listp symbol-list-listp10885,459181
(defun chk-free-and-ignored-vars-lstschk-free-and-ignored-vars-lsts10890,459328
(defun putprop-x-lst1 putprop-x-lst110923,461194
(defun putprop-x-lst2 putprop-x-lst210933,461502
(defun putprop-x-lst2-unless putprop-x-lst2-unless10944,461848
(defun translate-term-lst translate-term-lst10960,462555
(defun find-named-lemma find-named-lemma11056,467152
(defun find-runed-lemma find-runed-lemma11073,467814
(defun free-varsp-member free-varsp-member11086,468163
(defun free-varsp-member-lst free-varsp-member-lst11094,468413
(defun translate-expand-term1 translate-expand-term111101,468594
(defun translate-expand-term translate-expand-term11226,474261
(defun translate-expand-hint1 translate-expand-hint111254,475378
(defun translate-expand-hint translate-expand-hint11267,475911
(defun cons-all-to-lst cons-all-to-lst11321,478022
(defun translate-substitution translate-substitution11326,478204
(defun translate-substitution-lst translate-substitution-lst11377,480538
(defun get-rewrite-and-defn-runes-from-runic-mapping-pairs get-rewrite-and-defn-runes-from-runic-mapping-pairs11386,480891
(defun translate-restrict-hint translate-restrict-hint11395,481233
(defconst *do-not-processes**do-not-processes*11443,483332
(defun coerce-to-process-name-lst coerce-to-process-name-lst11447,483468
(defun coerce-to-acl2-package-lst coerce-to-acl2-package-lst11454,483707
(defun chk-do-not-expr-value chk-do-not-expr-value11461,483920
(defun translate-do-not-hint translate-do-not-hint11491,485248
(defun translate-do-not-induct-hint translate-do-not-induct-hint11525,486468
(defun translate-hands-off-hint1 translate-hands-off-hint111537,486952
(defun translate-hands-off-hint translate-hands-off-hint11577,488456
(defun convert-returned-vars-to-term-lst convert-returned-vars-to-term-lst11602,489298
(defun implicate implicate11607,489505
(defun convert-type-prescription-to-term convert-type-prescription-to-term11617,489762
(defun truncated-class truncated-class11638,490808
(defun tests-and-alists-lst-from-fn tests-and-alists-lst-from-fn11652,491503
(defun corollary corollary11673,492522
(defun formula formula11754,496002
(defun pf-fn pf-fn11775,496909
(defmacro pf pf11818,498902
(defun merge-symbol-< merge-symbol-<11839,499543
(defun merge-sort-symbol-< merge-sort-symbol-<11846,499816
(defun strict-merge-symbol-< strict-merge-symbol-<11857,500326
(defun strict-merge-sort-symbol-< strict-merge-sort-symbol-<11878,501144
(defun strict-symbol-<-sortedp strict-symbol-<-sortedp11895,501640
(defun sort-symbol-listp sort-symbol-listp11902,501868
(defconst *non-instantiable-primitives**non-instantiable-primitives*11910,502088
(defun instantiablep instantiablep11941,503476
(defun all-ffn-symbs all-ffn-symbs11971,504889
(defun all-ffn-symbs-lst all-ffn-symbs-lst11981,505284
(defun remove-guard-holders1 remove-guard-holders111994,505634
(defun remove-guard-holders1-lst remove-guard-holders1-lst12036,507530
(defun contains-guard-holdersp contains-guard-holdersp12046,507856
(defun contains-guard-holdersp-lst contains-guard-holdersp-lst12064,508441
(defun remove-guard-holders remove-guard-holders12069,508636
(defun remove-guard-holders-lst remove-guard-holders-lst12078,508878
(defun constraint-info constraint-info12086,509099
(defun constraint constraint12137,511188
(defun chk-equal-arities chk-equal-arities12591,530446
(defun extend-sorted-symbol-alist extend-sorted-symbol-alist12612,531083
(defun chk-equiv-classicalp chk-equiv-classicalp12626,531450
(defun translate-functional-substitution translate-functional-substitution12646,532254
(defun sublis-fn sublis-fn12745,536647
(defun sublis-fn-lst sublis-fn-lst12850,541892
(defun instantiable-ffn-symbs instantiable-ffn-symbs12865,542410
(defun instantiable-ffn-symbs-lst instantiable-ffn-symbs-lst12886,543133
(defun immediate-instantiable-ancestors immediate-instantiable-ancestors12896,543394
(defun instantiable-ancestors instantiable-ancestors12930,545003
(defun hitp hitp12951,545600
(defun hitp-lst hitp-lst12964,546042
(defun event-responsible-for-proved-constraintevent-responsible-for-proved-constraint12971,546191
(defun getprop-x-lst getprop-x-lst13006,547947
(defun filter-hitps filter-hitps13012,548180
(defun add-to-set add-to-set13019,548373
(defun relevant-constraints1relevant-constraints113024,548477
(defun relevant-constraints1-axiomsrelevant-constraints1-axioms13174,555372
(defun relevant-constraints relevant-constraints13220,557526
(defun bound-vars bound-vars13264,559490
(defun bound-vars-lst bound-vars-lst13275,559894
(defun translate-lmi/instancetranslate-lmi/instance13283,560055
(defun translate-lmi/functional-instancetranslate-lmi/functional-instance13320,561851
(defun translate-lmi translate-lmi13386,565094
(deflabel lemma-instancelemma-instance13472,568618
(defun translate-use-hint1 translate-use-hint113569,573958
(defun translate-use-hint translate-use-hint13592,575065
(defun convert-name-tree-to-new-name1 convert-name-tree-to-new-name113703,580526
(defun convert-name-tree-to-new-name convert-name-tree-to-new-name13730,581874
(defun translate-by-hint translate-by-hint13752,582931
(defun translate-cases-hint translate-cases-hint13820,585992
(defun translate-induct-hint translate-induct-hint13835,586470
(defconst *built-in-executable-counterparts**built-in-executable-counterparts*13847,586935
(defconst *s-prop-theory**s-prop-theory*13867,587596
(defconst *definition-minimal-theory**definition-minimal-theory*13880,588094
(defun translate-in-theory-hinttranslate-in-theory-hint13883,588193
(defun all-function-symbolps all-function-symbolps13955,591673
(defun collect-non-function-symbols collect-non-function-symbols13961,591896
(defun translate-bdd-hint1 translate-bdd-hint113968,592176
(defun translate-bdd-hint translate-bdd-hint14055,596250
(defun translate-nonlinearp-hint translate-nonlinearp-hint14073,596882
(defconst *hint-keywords**hint-keywords*14085,597229
(defun translate-x-hint-value translate-x-hint-value14099,597410
(defun translate-hint-settings translate-hint-settings14134,598578
(defun translate-hint-expression translate-hint-expression14162,599649
(defun translate-hint-expressions translate-hint-expressions14246,603360
(defun translate-hint translate-hint14264,604142
(defun translate-hints translate-hints14384,610985
(defun eval-and-translate-hint-expressioneval-and-translate-hint-expression14416,612471
(deflabel goal-specgoal-spec14556,619131
(deflabel hintshints14642,622424
(deflabel clause-identifierclause-identifier15024,641954
(deflabel computed-hintscomputed-hints15077,644004
(deflabel using-computed-hints-1using-computed-hints-115188,649549
(deflabel using-computed-hints-2using-computed-hints-215239,650772
(deflabel using-computed-hints-3using-computed-hints-315344,655011
(deflabel using-computed-hints-4using-computed-hints-415464,659988
(deflabel using-computed-hints-5using-computed-hints-515606,665888
(deflabel using-computed-hints-6using-computed-hints-615670,668250
(deflabel using-computed-hints-7using-computed-hints-715927,678615
(deflabel using-computed-hints-8using-computed-hints-816159,687839
(deflabel using-computed-hintsusing-computed-hints16201,689737
(defmacro ttags-seen ttags-seen16244,691437
(defun active-book-name active-book-name16296,693737
(defun notify-on-defttag notify-on-defttag16307,694199
(defun ttag-allowed-p ttag-allowed-p16340,695503
(defun chk-acceptable-ttag1 chk-acceptable-ttag116364,696491
(defun chk-acceptable-ttag chk-acceptable-ttag16416,699171
(defun chk-acceptable-ttags2 chk-acceptable-ttags216431,699655
(defun chk-acceptable-ttags1 chk-acceptable-ttags116447,700596
(defun chk-acceptable-ttags chk-acceptable-ttags16476,702288
(defun chk-table-nil-args chk-table-nil-args16492,703033
(defun chk-table-guard chk-table-guard16504,703438
(defun chk-table-guards-rec chk-table-guards-rec16540,704791
(defun chk-table-guards chk-table-guards16554,705483
(defun put-assoc-equal-fast put-assoc-equal-fast16567,706107
(defun global-set? global-set?16579,706528
(defun table-fn1 table-fn116584,706640
(defun table-fn table-fn16766,715217

prove.lisp,8349
(defun abbreviationp1 abbreviationp143,1707
(defun abbreviationp1-lst abbreviationp1-lst61,2427
(defun abbreviationp abbreviationp69,2686
(defun all-vars-bag all-vars-bag82,3182
(defun all-vars-bag-lst all-vars-bag-lst87,3336
(defun find-abbreviation-lemma find-abbreviation-lemma93,3499
(defun expand-abbreviations-with-lemma expand-abbreviations-with-lemma128,5104
(defun expand-abbreviations expand-abbreviations154,6062
(defun expand-abbreviations-lstexpand-abbreviations-lst428,18325
(defun and-orp and-orp447,19056
(defun find-and-or-lemma find-and-or-lemma458,19386
(defun expand-and-orexpand-and-or490,20964
(defun clausify-input1clausify-input1570,24664
(defun clausify-input1-lstclausify-input1-lst643,27718
(defun clausify-input clausify-input660,28443
(defun expand-some-non-rec-fns-in-clauses expand-some-non-rec-fns-in-clauses686,29703
(defun no-op-histp no-op-histp705,30496
(defun expand-any-final-implies1 expand-any-final-implies1741,32000
(defun expand-any-final-implies1-lst expand-any-final-implies1-lst773,33247
(defun expand-any-final-implies expand-any-final-implies782,33489
(defun preprocess-clause preprocess-clause806,34346
(defun tilde-*-preprocess-phrase tilde-*-preprocess-phrase966,42020
(defun preprocess-clause-msg1 preprocess-clause-msg1992,42927
(defun more-than-simplifiedp more-than-simplifiedp1032,44553
(defrec pool-element pool-element1047,45046
(defun delete-assoc-eq-lst delete-assoc-eq-lst1049,45104
(defun delete-assumptions-1 delete-assumptions-11057,45375
(defun delete-assumptions delete-assumptions1091,47076
(defun push-clause push-clause1101,47396
(defun g1-lst g1-lst1330,57869
(defthm g1-lst=g1g1-lst=g11334,57942
(defun f1-lst f1-lst1344,58052
(defthm f1-lst=f1f1-lst=f11348,58125
(defthm 0=f10=f11355,58279
(defthm 0=10=11362,58406
(defun pool-lst1 pool-lst11382,59187
(defun pool-lst pool-lst1389,59441
(defun push-clause-msg1 push-clause-msg11410,60290
(deflabel otf-flgotf-flg1468,63082
(defun clause-set-subsumes-1 clause-set-subsumes-11512,64895
(defun clause-set-subsumes clause-set-subsumes1526,65638
(defun apply-use-hint-clauses apply-use-hint-clauses1539,66107
(defun apply-cases-hint-clause apply-cases-hint-clause1649,71134
(defun apply-top-hints-clause apply-top-hints-clause1685,72405
(defun lmi-seed lmi-seed1971,85804
(defun lmi-techs lmi-techs1989,86499
(defun lmi-seed-lst lmi-seed-lst1999,86803
(defun lmi-techs-lst lmi-techs-lst2004,86973
(defun filter-atoms filter-atoms2009,87142
(defun tilde-@-lmi-phrase tilde-@-lmi-phrase2019,87427
(defun apply-top-hints-clause-msg1apply-top-hints-clause-msg12091,90674
(defun decorate-forced-goals-1 decorate-forced-goals-12266,99042
(defun decorate-forced-goals-1-lstdecorate-forced-goals-1-lst2283,99752
(defun decorate-forced-goals decorate-forced-goals2308,100649
(defun decorate-forced-goals-in-proof-treedecorate-forced-goals-in-proof-tree2328,101432
(defun assumnote-list-to-clause-id-list assumnote-list-to-clause-id-list2337,101774
(defun assumnote-list-list-to-clause-id-list-list assumnote-list-list-to-clause-id-list-list2343,101996
(defun extend-proof-tree-for-forcing-roundextend-proof-tree-for-forcing-round2349,102267
(defun previous-process-was-speciousp previous-process-was-speciousp2380,103250
(defun initialize-proof-tree1 initialize-proof-tree12436,106346
(defun initialize-proof-tree initialize-proof-tree2476,107967
(defconst *star-1-clause-id**star-1-clause-id*2510,109497
(defun revert-goal-tree revert-goal-tree2519,109654
(defun revert-goal-tree-lst revert-goal-tree-lst2536,110252
(defun increment-proof-treeincrement-proof-tree2545,110452
(defconst *preprocess-clause-ledge**preprocess-clause-ledge*2659,115706
(defun waterfall-msg1waterfall-msg12691,117035
(defun waterfall-msgwaterfall-msg2732,118668
(defun put-ttree-into-pspv put-ttree-into-pspv2776,120577
(defun set-cl-ids-of-assumptions set-cl-ids-of-assumptions2781,120767
(defun collect-assumptions collect-assumptions2829,123094
(defun sublis-var-lst-lst sublis-var-lst-lst2872,125147
(defun add-segments-to-clause add-segments-to-clause2877,125335
(defun guard-clauses guard-clauses2935,128055
(defun guard-clauses-lst guard-clauses-lst3074,134142
(defun linked-variables1 linked-variables13088,134568
(defun linked-variables linked-variables3105,135288
(defun contains-constrained-constantp contains-constrained-constantp3166,138659
(defun contains-constrained-constantp-lst contains-constrained-constantp-lst3180,139303
(defun disvar-type-alist1 disvar-type-alist13188,139584
(defun collect-all-vars collect-all-vars3196,139958
(defun disvar-type-alist disvar-type-alist3200,140085
(defun unencumber-type-alist unencumber-type-alist3219,140891
(defun unencumber-assumption unencumber-assumption3262,142897
(defun unencumber-assumptions unencumber-assumptions3275,143411
(defun dumb-type-alist-implicationp1 dumb-type-alist-implicationp13302,144436
(defun dumb-type-alist-implicationp2 dumb-type-alist-implicationp23314,145069
(defun dumb-type-alist-implicationp dumb-type-alist-implicationp3320,145351
(defun partition-according-to-assumption-term partition-according-to-assumption-term3384,148729
(defun exists-assumption-with-weaker-type-alist exists-assumption-with-weaker-type-alist3406,149620
(defun add-assumption-with-weak-type-alist add-assumption-with-weak-type-alist3424,150407
(defun dumb-keep-assumptions-with-weakest-type-alists dumb-keep-assumptions-with-weakest-type-alists3449,151532
(defun dumb-assumption-subsumption1 dumb-assumption-subsumption13484,153048
(defun dumb-assumption-subsumption dumb-assumption-subsumption3500,153574
(defun clausify-type-alist clausify-type-alist3517,154380
(defun clausify-assumption clausify-assumption3544,155619
(defun clausify-assumptions clausify-assumptions3559,156020
(defun strip-assumption-terms strip-assumption-terms3577,156741
(defun extract-and-clausify-assumptions extract-and-clausify-assumptions3585,157000
(defun waterfall-step1 waterfall-step13699,163005
(defun waterfall-step waterfall-step3729,163955
(defun find-applicable-hint-settingsfind-applicable-hint-settings3931,173246
(defun thanks-for-the-hint thanks-for-the-hint4018,177650
(defun lmi-name-or-rune lmi-name-or-rune4038,178339
(defun enabled-lmi-names1 enabled-lmi-names14051,178739
(defun enabled-lmi-names enabled-lmi-names4066,179281
(defun maybe-warn-for-use-hint maybe-warn-for-use-hint4087,179989
(defun maybe-warn-about-theory-simple maybe-warn-about-theory-simple4108,180712
(defun maybe-warn-about-theory-from-rcnsts maybe-warn-about-theory-from-rcnsts4119,181213
(defun waterfall-print-clause waterfall-print-clause4143,182363
(defun waterfall1waterfall14179,183873
(defun waterfall0-with-hint-settingswaterfall0-with-hint-settings4244,186579
(defun waterfall0waterfall04310,189341
(defun waterfall1-lst waterfall1-lst4453,195394
(defun waterfall waterfall4520,198043
(defun some-pool-member-subsumes some-pool-member-subsumes4584,200645
(defun add-to-pop-historyadd-to-pop-history4600,201350
(defun pop-clause1 pop-clause14646,203494
(defun make-defthm-forms-for-byes make-defthm-forms-for-byes4722,206980
(defun pop-clause-msg1 pop-clause-msg14733,207382
(defun pop-clause-msg pop-clause-msg4859,213026
(defun pop-clause pop-clause4878,213661
(defun tilde-@-assumnotes-phrase-lst tilde-@-assumnotes-phrase-lst4904,214821
(defun tilde-*-assumnotes-column-phrase tilde-*-assumnotes-column-phrase4953,217647
(defun process-assumptions-msg1 process-assumptions-msg14960,217864
(defun process-assumptions-msg process-assumptions-msg4987,219032
(deflabel forcing-roundforcing-round5033,221184
(deflabel failurefailure5162,228222
(deflabel failed-forcingfailed-forcing5194,229718
(defun quickly-count-assumptions quickly-count-assumptions5341,236725
(defun process-assumptions process-assumptions5359,237545
(defun do-not-induct-msg do-not-induct-msg5440,240937
(defun prove-loop1 prove-loop15469,241933
(defun prove-loop prove-loop5569,246354
(defmacro make-rcnst make-rcnst5593,247182
(defmacro make-pspv make-pspv5618,248190
(defun chk-assumption-free-ttree chk-assumption-free-ttree5640,249066
(defun prove prove5669,250264

defuns.lisp,14204
(defconst *mutual-recursion-ctx-string**mutual-recursion-ctx-string*37,1631
(defun translate-bodies1translate-bodies140,1718
(defun translate-bodiestranslate-bodies64,2874
(defun chk-mutual-recursion-bad-names chk-mutual-recursion-bad-names83,3620
(defconst *chk-mutual-recursion-string**chk-mutual-recursion-string*91,3932
(defun chk-mutual-recursion1 chk-mutual-recursion1100,4319
(defun chk-mutual-recursion chk-mutual-recursion120,4986
(defun ffnnamep-mod-mbe ffnnamep-mod-mbe149,6191
(defun ffnnamep-mod-mbe-lst ffnnamep-mod-mbe-lst166,6883
(defun putprop-recursivep-lst putprop-recursivep-lst181,7301
(defrec tests-and-call tests-and-call209,8637
(defun all-calls all-calls218,9005
(defun all-calls-lst all-calls-lst249,10435
(defun all-calls-alist all-calls-alist258,10675
(defun termination-machine1 termination-machine1267,11000
(defun termination-machine termination-machine282,11622
(defun termination-machines termination-machines382,16272
(defun proper-dumb-occur-as-output proper-dumb-occur-as-output395,16726
(defun always-tested-and-changedp always-tested-and-changedp420,17884
(defun guess-measure guess-measure446,18946
(defun guess-measure-alist guess-measure-alist496,21548
(defun add-literal-to-clause-segments add-literal-to-clause-segments528,23191
(defun remove-built-in-clauses remove-built-in-clauses534,23462
(defun length-exceedsp length-exceedsp555,24210
(defun clean-up-clause-set clean-up-clause-set560,24336
(defun measure-clause-for-branch measure-clause-for-branch643,28102
(defun measure-clauses-for-fn1 measure-clauses-for-fn1674,29237
(defun measure-clauses-for-fn measure-clauses-for-fn688,29855
(defun measure-clauses-for-clique measure-clauses-for-clique719,30970
(defun tilde-*-measure-phrase1 tilde-*-measure-phrase1736,31678
(defun tilde-*-measure-phrase tilde-*-measure-phrase744,32019
(defun find-?-measure find-?-measure772,33019
(defun prove-termination prove-termination781,33322
(defun putprop-justification-lst putprop-justification-lst954,41665
(defun cross-tests-and-calls1 cross-tests-and-calls1971,42290
(defun cross-tests-and-calls cross-tests-and-calls995,43337
(defun induction-machine-for-fn1 induction-machine-for-fn11033,45310
(defun induction-machine-for-fn induction-machine-for-fn1140,49811
(defun induction-machines induction-machines1157,50450
(defun putprop-induction-machine-lst putprop-induction-machine-lst1176,51252
(defun quick-block-initial-settings quick-block-initial-settings1188,51623
(defun quick-block-info1 quick-block-info11193,51798
(defun quick-block-info2 quick-block-info21198,51947
(defun quick-block-settings quick-block-settings1206,52173
(defun quick-block-down-t-machine quick-block-down-t-machine1215,52606
(defun quick-block-info quick-block-info1231,53235
(defun putprop-quick-block-info-lst putprop-quick-block-info-lst1249,54002
(deflabel subversive-recursionssubversive-recursions1265,54632
(deflabel subversive-inductionssubversive-inductions1394,60730
(defmacro big-mutrec big-mutrec1404,60898
(defmacro update-w update-w1414,61303
(defun put-induction-infoput-induction-info1430,61860
(defconst *equality-aliases* *equality-aliases*1574,68454
(defun destructure-definition destructure-definition1576,68497
(defun member-rewrite-rule-rune member-rewrite-rule-rune1633,70508
(defun replace-rewrite-rule-rune replace-rewrite-rule-rune1642,70801
(defun preprocess-hyp preprocess-hyp1654,71219
(defun preprocess-hyps preprocess-hyps1663,71469
(defun add-definition-rule-with-ttree add-definition-rule-with-ttree1668,71625
(defun add-definition-rule add-definition-rule1741,74887
(defun listof-standard-numberp-macro listof-standard-numberp-macro1750,75261
(defun putprop-body-lst putprop-body-lst1765,75706
(defun type-set-implied-by-term1 type-set-implied-by-term12061,91349
(defun type-set-implied-by-term type-set-implied-by-term2086,92370
(defun putprop-initial-type-prescriptions putprop-initial-type-prescriptions2107,93282
(defun map-returned-formals-via-formals map-returned-formals-via-formals2155,95417
(defun map-type-sets-via-formals map-type-sets-via-formals2186,97055
(defun vector-ts-union vector-ts-union2202,97764
(defun map-cons-tag-trees map-cons-tag-trees2211,98076
(defun type-set-and-returned-formals-with-rule1type-set-and-returned-formals-with-rule12220,98295
(defun type-set-and-returned-formals-with-ruletype-set-and-returned-formals-with-rule2277,100602
(defun type-set-and-returned-formals-with-rulestype-set-and-returned-formals-with-rules2357,103786
(defun type-set-and-returned-formals type-set-and-returned-formals2428,106756
(defun type-set-and-returned-formals-lsttype-set-and-returned-formals-lst2718,120824
(defun guess-type-prescription-for-fn-step guess-type-prescription-for-fn-step2736,121591
(defconst *clique-step-install-interval**clique-step-install-interval*2781,123654
(defun guess-and-putprop-type-prescription-lst-for-clique-stepguess-and-putprop-type-prescription-lst-for-clique-step2789,123933
(defun cleanse-type-prescriptionscleanse-type-prescriptions2853,126573
(defun guess-and-putprop-type-prescription-lst-for-cliqueguess-and-putprop-type-prescription-lst-for-clique2921,129819
(defun get-normalized-bodies get-normalized-bodies2972,132195
(defun putprop-type-prescription-lst putprop-type-prescription-lst2988,132815
(defun putprop-level-no-lst putprop-level-no-lst3046,135379
(defun primitive-recursive-argp primitive-recursive-argp3072,136719
(defun primitive-recursive-callp primitive-recursive-callp3136,140320
(defun primitive-recursive-callsp primitive-recursive-callsp3141,140552
(defun primitive-recursive-machinep primitive-recursive-machinep3146,140784
(defun putprop-primitive-recursive-defunp-lst putprop-primitive-recursive-defunp-lst3163,141540
(defun make-controller-pocket make-controller-pocket3197,143085
(defun make-controller-alist1 make-controller-alist13210,143558
(defun make-controller-alist make-controller-alist3234,144707
(defun max-nume-exceeded-error max-nume-exceeded-error3251,145563
(defun putprop-defun-runic-mapping-pairs1 putprop-defun-runic-mapping-pairs13260,145983
(defun putprop-defun-runic-mapping-pairs putprop-defun-runic-mapping-pairs3297,147748
(defun guard-clauses-for-body guard-clauses-for-body3379,151963
(defun guard-clauses-for-fn guard-clauses-for-fn3399,152737
(defun guard-clauses-for-clique guard-clauses-for-clique3450,154724
(defun print-verify-guards-msg print-verify-guards-msg3470,155513
(defun collect-ideals collect-ideals3496,156417
(defun collect-non-ideals collect-non-ideals3502,156656
(defun collect-non-common-lisp-compliants collect-non-common-lisp-compliants3508,156895
(defun all-fnnames1-mbe-exec all-fnnames1-mbe-exec3515,157215
(defmacro all-fnnames-mbe-exec all-fnnames-mbe-exec3534,157918
(defun chk-common-lisp-compliant-subfunctionschk-common-lisp-compliant-subfunctions3537,157999
(defun chk-acceptable-verify-guards chk-acceptable-verify-guards3567,159410
(defun prove-guard-clauses prove-guard-clauses3676,164390
(defun verify-guards-fn1 verify-guards-fn13802,170020
(defun append-lst append-lst4040,179777
(defun verify-guards-fn verify-guards-fn4044,179883
(defconst *super-defun-wart-table**super-defun-wart-table*4133,183453
(defun project-out-columns-i-and-j project-out-columns-i-and-j4180,186041
(defconst *super-defun-wart-binding-alist**super-defun-wart-binding-alist*4186,186240
(defconst *super-defun-wart-stobjs-in-alist**super-defun-wart-stobjs-in-alist*4189,186346
(defun super-defun-wart-bindings super-defun-wart-bindings4192,186454
(defun store-stobjs-ins store-stobjs-ins4199,186742
(defun store-super-defun-warts-stobjs-in store-super-defun-warts-stobjs-in4205,186994
(defun collect-old-nameps collect-old-nameps4219,187478
(defun defuns-fn-short-cut defuns-fn-short-cut4225,187702
(defun print-defun-msg/collect-type-prescriptions print-defun-msg/collect-type-prescriptions4255,189059
(defun print-defun-msg/type-prescriptions1 print-defun-msg/type-prescriptions14279,190053
(defun print-defun-msg/type-prescriptions print-defun-msg/type-prescriptions4318,191737
(defun simple-signaturep simple-signaturep4361,193247
(defun all-simple-signaturesp all-simple-signaturesp4369,193462
(defun print-defun-msg/signatures1 print-defun-msg/signatures14374,193646
(defun print-defun-msg/signatures print-defun-msg/signatures4391,194223
(defun print-defun-msg print-defun-msg4404,194699
(defun get-ignores get-ignores4432,195832
(defun get-ignorables get-ignorables4438,195996
(defun chk-all-stobj-names chk-all-stobj-names4444,196169
(defun get-declared-stobj-names get-declared-stobj-names4461,196871
(defun get-stobjs-in-lst get-stobjs-in-lst4502,198723
(defun chk-stobjs-out-bound chk-stobjs-out-bound4554,201365
(defun store-stobjs-out store-stobjs-out4562,201700
(defun unparse-signature unparse-signature4571,201993
(defconst *built-in-program-mode-fns* *built-in-program-mode-fns*4583,202420
(defun chk-defun-mode chk-defun-mode4585,202476
(defun scan-to-cltl-command scan-to-cltl-command4600,203102
(defun plausible-dclsp1 plausible-dclsp14614,203588
(defun plausible-dclsp plausible-dclsp4636,204619
(defun dcl-fields1 dcl-fields14664,205962
(defun dcl-fields dcl-fields4671,206215
(defun strip-keyword-list strip-keyword-list4685,206814
(defun strip-dcls1 strip-dcls14697,207206
(defun strip-dcls strip-dcls4709,207728
(defun fetch-dcl-field1 fetch-dcl-field14726,208561
(defun fetch-dcl-field fetch-dcl-field4738,209114
(defun set-equalp-eq set-equalp-eq4761,210272
(defun non-identical-defp non-identical-defp4767,210471
(defun identical-defp identical-defp4928,218604
(defun redundant-or-reclassifying-defunp redundant-or-reclassifying-defunp4935,218845
(defun redundant-or-reclassifying-defunsp1 redundant-or-reclassifying-defunsp15148,227159
(defun redundant-or-reclassifying-defunsp redundant-or-reclassifying-defunsp5162,227756
(defun collect-when-cadr-eq collect-when-cadr-eq5210,230514
(defun all-programp all-programp5216,230728
(defun formal-position formal-position5309,235632
(defun make-slot make-slot5314,235791
(defun make-slots make-slots5317,235876
(defun slot-member slot-member5322,236046
(defun expand-clique-alist-term expand-clique-alist-term5337,236423
(defun expand-clique-alist-term-lst expand-clique-alist-term-lst5358,237274
(defun expand-clique-alist1 expand-clique-alist15365,237495
(defun expand-clique-alist expand-clique-alist5372,237791
(defun make-clique-alist1 make-clique-alist15375,237886
(defun make-clique-alist make-clique-alist5388,238411
(defun relevant-slots-term relevant-slots-term5400,238821
(defun relevant-slots-term-lst relevant-slots-term-lst5416,239439
(defun relevant-slots-callrelevant-slots-call5423,239721
(defun relevant-slots-defrelevant-slots-def5445,240574
(defun relevant-slots-clique1 relevant-slots-clique15461,241240
(defun relevant-slots-clique relevant-slots-clique5474,241699
(defun all-non-lambda-slots-clique all-non-lambda-slots-clique5485,242181
(defun ignored/ignorable-slots ignored/ignorable-slots5495,242605
(defun irrelevant-non-lambda-slots-clique irrelevant-non-lambda-slots-clique5521,243876
(defun tilde-*-irrelevant-formals-msg1 tilde-*-irrelevant-formals-msg15539,244899
(defun tilde-*-irrelevant-formals-msg tilde-*-irrelevant-formals-msg5547,245265
(defun chk-irrelevant-formalschk-irrelevant-formals5550,245397
(deflabel irrelevant-formalsirrelevant-formals5580,246659
(defun chk-logic-subfunctions chk-logic-subfunctions5656,250198
(defun get-non-classical-fns-from-list get-non-classical-fns-from-list5683,251428
(defmacro get-non-classical-fns get-non-classical-fns5695,251949
(defun get-non-classical-fns-aux get-non-classical-fns-aux5699,252065
(defun strip-zero-measures strip-zero-measures5713,252668
(defun chk-classical-measures chk-classical-measures5721,252907
(defun chk-no-recursive-non-classical chk-no-recursive-non-classical5741,253788
(defun union-collect-non-x union-collect-non-x5778,255572
(defun translate-measures translate-measures5783,255747
(defun chk-acceptable-defuns chk-acceptable-defuns5809,256906
(deflabel XARGSXARGS6256,279203
(defmacro link-doc-to-keyword link-doc-to-keyword6365,284262
(defmacro link-doc-to link-doc-to6381,284587
(defun build-valid-std-usage-clause build-valid-std-usage-clause6433,286473
(defun verify-valid-std-usage verify-valid-std-usage6441,286811
(defun defuns-fn0defuns-fn06516,290160
(defun strip-non-hidden-package-names strip-non-hidden-package-names6686,298073
(defun in-package-fn in-package-fn6695,298497
(defun defstobj-functionsp defstobj-functionsp6717,299340
(defun index-of-non-number index-of-non-number6781,302810
(defun non-std-error non-std-error6790,303016
(defun non-std-body non-std-body6799,303422
(defun non-std-def-lst non-std-def-lst6813,303915
(defun make-udf-insigs make-udf-insigs6828,304481
(defun intro-udf intro-udf6837,304770
(defun intro-udf-lst1 intro-udf-lst16866,305606
(defun intro-udf-lst2 intro-udf-lst26871,305773
(defun intro-udf-lst intro-udf-lst6889,306492
(defun defuns-fn defuns-fn6905,307117
(defun defun-fn defun-fn7096,315182
(defun args-fn args-fn7111,315725
(defmacro args args7190,319499
(defun make-verify-termination-def make-verify-termination-def7211,320134
(defun make-verify-termination-defs-lst make-verify-termination-defs-lst7238,321302
(defun chk-acceptable-verify-termination1 chk-acceptable-verify-termination17254,322095
(defun uniform-defun-modes uniform-defun-modes7292,324290
(defun recover-defs-lst recover-defs-lst7306,324894
(defun get-clique get-clique7338,326281
(defun chk-acceptable-verify-termination chk-acceptable-verify-termination7353,326955
(defun verify-termination-fn verify-termination-fn7398,329043
(defun fns-used-in-axioms fns-used-in-axioms7446,331089
(defun check-out-instantiablep1 check-out-instantiablep17472,332063
(defun check-out-instantiablep check-out-instantiablep7481,332351

proof-checker-pkg.lisp,37
(defpkg "ACL2-PC" "ACL2-PC"29,1205

proof-checker-a.lisp,6093
(defmacro pc-value pc-value35,1595
(defmacro pc-assign pc-assign39,1698
(defun initialize-pc-acl2 initialize-pc-acl246,1853
(defmacro state-stack state-stack56,2106
(defmacro old-ss old-ss59,2159
(defmacro ss-alist ss-alist64,2274
(defmacro define-global define-global67,2321
(define-global pc-prompt pc-prompt79,2693
(define-global pc-prompt-depth-prefix pc-prompt-depth-prefix80,2726
(define-global print-macroexpansion-flg print-macroexpansion-flg81,2769
(define-global print-prompt-and-instr-flg print-prompt-and-instr-flg83,2868
(defrec pc-statepc-state94,3427
(defconst *pc-state-fields-for-primitives**pc-state-fields-for-primitives*103,3540
(defmacro instruction instruction106,3653
(defmacro goals goals113,3871
(defmacro abbreviations abbreviations120,4077
(defmacro local-tag-tree local-tag-tree127,4299
(defmacro pc-ens pc-ens134,4523
(defmacro tag-tree tag-tree141,4731
(defrec goalgoal154,5273
(defconst *goal-fields**goal-fields*159,5358
(defmacro conc conc162,5433
(defmacro hyps hyps165,5528
(defmacro current-addr current-addr168,5623
(defmacro goal-name goal-name171,5734
(defmacro depends-on depends-on174,5839
(defmacro make-official-pc-command make-official-pc-command177,5946
(defun intern-in-keyword-package intern-in-keyword-package185,6260
(defun make-pretty-pc-command make-pretty-pc-command192,6491
(defun make-pretty-pc-instr make-pretty-pc-instr197,6657
(defmacro change-pc-state change-pc-state208,7052
(defun make-official-pc-instr make-official-pc-instr211,7136
(defun check-formals-length check-formals-length228,7795
(defun check-&optional-and-&rest check-&optional-and-&rest257,9208
(defun make-let-pairs-from-formals make-let-pairs-from-formals283,10351
(defun all-symbols all-symbols299,10975
(defun all-symbols-list all-symbols-list313,11325
(defun make-access-bindings make-access-bindings321,11465
(defun let-form-for-pc-state-vars let-form-for-pc-state-vars327,11722
(defun check-field-names check-field-names339,12241
(defmacro print-no-change print-no-change349,12659
(defmacro print-no-change2 print-no-change2352,12765
(defun print-no-change-fn print-no-change-fn356,12875
(defmacro maybe-update-instruction maybe-update-instruction375,13617
(defun add-pc-doc-header add-pc-doc-header384,14017
(defun remove-doc remove-doc395,14304
(defun pc-primitive-defun-form pc-primitive-defun-form402,14616
(defmacro add-pc-command add-pc-command425,15508
(defun table-get table-get428,15604
(defmacro pc-command-type pc-command-type433,15755
(defmacro print-no-change3 print-no-change3436,15845
(defun add-pc-command-1 add-pc-command-1440,15984
(defun toggle-pc-macro-fn toggle-pc-macro-fn447,16188
(defun pc-meta-or-macro-defun pc-meta-or-macro-defun472,17805
(defun my-trans-eval my-trans-eval491,18590
(defun goal-names goal-names503,19003
(defun instructions-of-state-stack instructions-of-state-stack509,19147
(defmacro fms0 fms0518,19427
(defmacro with-output-forced with-output-forced530,19867
(defun print-pc-prompt print-pc-prompt554,20656
(defun pc-macroexpand pc-macroexpand565,21009
(defun find-goal find-goal617,23790
(defun print-all-goals-proved-message print-all-goals-proved-message624,23971
(defmacro when-goals when-goals633,24245
(defmacro when-goals-trip when-goals-trip638,24350
(defun current-immediate-deps current-immediate-deps644,24496
(defun goal-dependent-p goal-dependent-p654,24921
(defun current-all-deps current-all-deps662,25137
(defun maybe-print-proved-goal-message maybe-print-proved-goal-message672,25550
(defun accumulate-ttree-in-pc-state accumulate-ttree-in-pc-state711,27560
(defun pc-process-assumptions pc-process-assumptions717,27812
(defun make-implication make-implication743,28536
(defun cl-set-to-implications cl-set-to-implications749,28686
(defun known-assumptions known-assumptions756,28921
(defun add-assumptions-to-top-goaladd-assumptions-to-top-goal773,29653
(defun unproved-goals unproved-goals791,30342
(defun make-pc-ens make-pc-ens799,30561
(defun initial-rcnst-from-ens initial-rcnst-from-ens804,30647
(defun make-new-goals-fixed-hyps make-new-goals-fixed-hyps811,30902
(defun pc-single-step-primitive pc-single-step-primitive824,31383
(defun maybe-print-macroexpansion maybe-print-macroexpansion995,39500
(defun pc-single-step-1 pc-single-step-11014,40499
(defun union-lastn-pc-tag-trees union-lastn-pc-tag-trees1077,43840
(defun pc-single-step pc-single-step1090,44237
(defconst *pc-complete-signal* *pc-complete-signal*1121,45851
(defun pc-main-loop pc-main-loop1123,45902
(defun make-initial-goal make-initial-goal1186,49393
(defun initial-state-stack initial-state-stack1194,49551
(defun event-name-and-types-and-raw-term event-name-and-types-and-raw-term1204,49943
(defmacro install-initial-state-stack install-initial-state-stack1207,50065
(defun pc-top pc-top1217,50468
(defun illegal-fnp illegal-fnp1238,51227
(defun illegal-fnp-list illegal-fnp-list1252,51614
(defun verify-fn verify-fn1258,51757
(defun print-unproved-goals-message print-unproved-goals-message1298,53387
(defun state-stack-from-instructionsstate-stack-from-instructions1307,53774
(defun state-from-instructionsstate-from-instructions1318,54255
(defun print-defthm print-defthm1326,54545
(defmacro print-goal print-goal1337,54915
(defmacro print-pc-state print-pc-state1361,55982
(defun proof-checkerproof-checker1380,56782
(deflabel proof-checker-commandsproof-checker-commands1449,59493
(deflabel macro-commandmacro-command1459,59796
(defmacro verify verify1486,61025
(deflabel instructionsinstructions1538,62882
(defun sublis-expr-non-quoteps sublis-expr-non-quoteps1567,63884
(defun sublis-expr-non-quoteps-lst sublis-expr-non-quoteps-lst1585,64648
(defun invert-abbreviations-alist invert-abbreviations-alist1592,64850
(defun abbreviate abbreviate1599,65081
(defmacro untrans0 untrans01604,65239
(defun untrans0-lst-fn untrans0-lst-fn1610,65434
(defmacro untrans0-lst untrans0-lst1616,65664

defthm.lisp,19910
(defun unprettyify/add-hyps-to-pairs unprettyify/add-hyps-to-pairs58,2506
(defun unprettyify unprettyify67,2845
(defun remove-lambdas remove-lambdas118,5064
(defun remove-lambdas-lst remove-lambdas-lst128,5379
(defun interpret-term-as-rewrite-rule interpret-term-as-rewrite-rule139,5634
(defun non-recursive-fnnames non-recursive-fnnames185,7840
(defun non-recursive-fnnames-lst non-recursive-fnnames-lst198,8435
(defun hide-lambdas1 hide-lambdas1209,8854
(defun hide-lambdas hide-lambdas219,9208
(defun variantp variantp229,9586
(defun surrounding-fns1 surrounding-fns1247,10058
(defun surrounding-fns-lst surrounding-fns-lst275,11153
(defun surrounding-fns surrounding-fns283,11371
(defun loop-stopper1 loop-stopper1309,12371
(defun loop-stopper loop-stopper319,12790
(defun remove-irrelevant-loop-stopper-pairs remove-irrelevant-loop-stopper-pairs494,23138
(defun put-match-free-value put-match-free-value509,23731
(defun free-vars-in-hyps free-vars-in-hyps527,24366
(defun free-vars-in-hyps-simple free-vars-in-hyps-simple567,26222
(defun free-vars-in-fc-hyps free-vars-in-fc-hyps579,26740
(defun free-vars-in-hyps-considering-bind-free free-vars-in-hyps-considering-bind-free591,27157
(defun all-vars-in-hyps all-vars-in-hyps658,30164
(defun match-free-value match-free-value689,31454
(defun match-free-fc-value match-free-fc-value699,31767
(defun create-rewrite-rule create-rewrite-rule712,32366
(defun hyps-that-instantiate-free-vars hyps-that-instantiate-free-vars760,34428
(defun maybe-one-way-unify maybe-one-way-unify777,35115
(defun maybe-one-way-unify-lst maybe-one-way-unify-lst795,35814
(defun maybe-one-way-unify-with-some maybe-one-way-unify-with-some802,36095
(defun maybe-subsumes maybe-subsumes811,36470
(defun subsumes-rewrite-rule subsumes-rewrite-rule831,37438
(defun find-subsumed-rule-names find-subsumed-rule-names883,39667
(defun find-subsuming-rule-names find-subsuming-rule-names900,40520
(defun forced-hyps forced-hyps916,41328
(defun strip-top-level-nots-and-forces strip-top-level-nots-and-forces925,41654
(defun free-variable-error? free-variable-error?939,42237
(defun extend-geneqv-alist extend-geneqv-alist958,43285
(defun covered-geneqv-alist covered-geneqv-alist970,43699
(defun covered-geneqv-alist-lst covered-geneqv-alist-lst991,44597
(defun uncovered-equivs uncovered-equivs1001,45020
(defun uncovered-equivs-alist uncovered-equivs-alist1011,45404
(defun uncovered-equivs-alist-lst uncovered-equivs-alist-lst1105,49669
(defun double-rewrite-opportunities double-rewrite-opportunities1125,50679
(defun show-double-rewrite-opportunities1 show-double-rewrite-opportunities11226,56645
(defun show-double-rewrite-opportunities show-double-rewrite-opportunities1261,58573
(defun chk-rewrite-rule-warnings chk-rewrite-rule-warnings1283,59665
(defun chk-acceptable-rewrite-rule2 chk-acceptable-rewrite-rule21449,68108
(defun chk-acceptable-rewrite-rule1 chk-acceptable-rewrite-rule11502,70368
(defun chk-acceptable-rewrite-rule chk-acceptable-rewrite-rule1520,71145
(defun add-rewrite-rule2 add-rewrite-rule21537,72007
(defun add-rewrite-rule1 add-rewrite-rule11561,73269
(defun add-rewrite-rule add-rewrite-rule1582,74236
(deflabel linearlinear1597,74857
(defun expand-inequality-fncall1 expand-inequality-fncall11746,82636
(defun expand-inequality-fncall expand-inequality-fncall1769,83611
(defun all-vars-in-poly-lst all-vars-in-poly-lst1814,85845
(defun subbagp-eq subbagp-eq1825,86196
(defun always-biggerp-data always-biggerp-data1832,86395
(defun always-biggerp-data-lst always-biggerp-data-lst1840,86586
(defun always-biggerp always-biggerp1848,86779
(defun no-element-always-biggerp no-element-always-biggerp1872,87832
(defun maximal-terms1 maximal-terms11882,88189
(defun maximal-terms maximal-terms1897,88812
(defun collect-when-ffnnamesp collect-when-ffnnamesp1932,90548
(defun make-free-max-terms-msg1 make-free-max-terms-msg11942,90853
(defun make-free-max-terms-msg make-free-max-terms-msg1969,92220
(defun external-linearize external-linearize1985,92824
(defun bad-synp-hyp-msg-for-linear bad-synp-hyp-msg-for-linear1995,93067
(defun show-double-rewrite-opportunities-linear show-double-rewrite-opportunities-linear2004,93447
(defun chk-acceptable-linear-rule2chk-acceptable-linear-rule22025,94348
(defun chk-acceptable-linear-rule1 chk-acceptable-linear-rule12164,102087
(defun chk-acceptable-linear-rule chk-acceptable-linear-rule2180,102766
(defun add-linear-rule3 add-linear-rule32198,103598
(defun add-linear-rule2 add-linear-rule22242,105671
(defun add-linear-rule1 add-linear-rule12256,106329
(defun add-linear-rule add-linear-rule2272,107132
(deflabel well-founded-relationwell-founded-relation2280,107512
(defun destructure-well-founded-relation-rule destructure-well-founded-relation-rule2448,114772
(defun chk-acceptable-well-founded-relation-rule chk-acceptable-well-founded-relation-rule2487,116089
(defun add-well-founded-relation-rule add-well-founded-relation-rule2524,117719
(deflabel built-in-clausesbuilt-in-clauses2536,118205
(defun chk-acceptable-built-in-clause-rule2 chk-acceptable-built-in-clause-rule22673,123557
(defun chk-acceptable-built-in-clause-rule1 chk-acceptable-built-in-clause-rule12698,124646
(defun chk-acceptable-built-in-clause-rule chk-acceptable-built-in-clause-rule2712,125173
(defun fn-and-maximal-level-no fn-and-maximal-level-no2728,125905
(defun fn-and-maximal-level-no-lst fn-and-maximal-level-no-lst2754,127162
(defun built-in-clause-discriminator-fn built-in-clause-discriminator-fn2763,127410
(defun all-fnnames-subsumer all-fnnames-subsumer2769,127583
(defun make-built-in-clause-rules1 make-built-in-clause-rules12793,129016
(defun chk-initial-built-in-clauses chk-initial-built-in-clauses2817,130193
(defun make-built-in-clause-rules make-built-in-clause-rules2846,131433
(defun classify-and-store-built-in-clause-rules classify-and-store-built-in-clause-rules2862,132088
(defun add-built-in-clause-rule add-built-in-clause-rule2908,134557
(deflabel compound-recognizercompound-recognizer2940,136057
(defun destructure-compound-recognizer destructure-compound-recognizer3112,144716
(defun make-recognizer-tuple make-recognizer-tuple3170,147269
(defun comment-on-new-recog-tuple1 comment-on-new-recog-tuple13237,150257
(defun comment-on-new-recog-tuple comment-on-new-recog-tuple3295,153356
(defun chk-acceptable-compound-recognizer-rule chk-acceptable-compound-recognizer-rule3358,156485
(defun add-compound-recognizer-rule add-compound-recognizer-rule3415,158892
(deflabel forward-chainingforward-chaining3438,159951
(defun chk-triggers chk-triggers3522,164296
(defun destructure-forward-chaining-term destructure-forward-chaining-term3613,169127
(defun chk-acceptable-forward-chaining-rule chk-acceptable-forward-chaining-rule3625,169587
(defun putprop-forward-chaining-rules-lstputprop-forward-chaining-rules-lst3646,170333
(defun add-forward-chaining-rule add-forward-chaining-rule3668,171298
(deflabel metameta3684,172035
(deflabel extended-metafunctionsextended-metafunctions4052,189597
(defun evaluator-clause/arglist evaluator-clause/arglist4370,203152
(defun evaluator-clause evaluator-clause4384,203742
(defun evaluator-clauses1 evaluator-clauses14412,204739
(defun evaluator-clauses evaluator-clauses4417,204942
(defun cdrp cdrp4478,208056
(defun expand-eq-and-atom-term-lst expand-eq-and-atom-term-lst4494,208605
(defun normalize-alleged-evaluator-clause normalize-alleged-evaluator-clause4548,211006
(defun normalize-alleged-evaluator-clause-set normalize-alleged-evaluator-clause-set4558,211351
(defun shallow-clausify1 shallow-clausify14563,211565
(defun shallow-clausify shallow-clausify4576,211947
(defun find-evfn-lst-in-clause find-evfn-lst-in-clause4597,212818
(defun guess-evfn-lst-for-evfn guess-evfn-lst-for-evfn4628,213902
(defun find-fn-in-clause find-fn-in-clause4640,214383
(defun guess-fn-args-lst-for-evfn guess-fn-args-lst-for-evfn4654,214899
(defun chk-evaluator chk-evaluator4668,215584
(defun defevaluator-form/defthms defevaluator-form/defthms4752,219699
(defun defevaluator-form/fns-clauses defevaluator-form/fns-clauses4759,220035
(defconst *defevaluator-form-base-theory**defevaluator-form-base-theory*4781,220805
(defun defevaluator-form defevaluator-form4789,221083
(defmacro defevaluator defevaluator4832,222839
(deflabel term-tableterm-table4953,227748
(defun meta-rule-hypothesis-function meta-rule-hypothesis-function4989,229098
(defun meta-fn-args meta-fn-args5024,230482
(defun chk-meta-function chk-meta-function5047,231190
(defun chk-acceptable-meta-rule chk-acceptable-meta-rule5101,233597
(defun add-meta-rule1 add-meta-rule15220,239355
(defun add-meta-rule add-meta-rule5234,239901
(deflabel elimelim5278,241746
(defun destructors destructors5418,248860
(defun destructors-lst destructors-lst5434,249494
(defun strip-ffn-symbs strip-ffn-symbs5441,249654
(defun chk-acceptable-elim-rule1 chk-acceptable-elim-rule15446,249796
(defun chk-acceptable-elim-rule chk-acceptable-elim-rule5469,250807
(defun add-elim-rule1 add-elim-rule15524,253125
(defun add-elim-rule add-elim-rule5549,254233
(deflabel generalizegeneralize5561,254676
(defun chk-acceptable-generalize-rule chk-acceptable-generalize-rule5588,255661
(defun add-generalize-rule add-generalize-rule5595,255853
(deflabel type-prescriptiontype-prescription5607,256285
(defun find-type-prescription-pat find-type-prescription-pat5734,262669
(defun type-prescription-disjunctp type-prescription-disjunctp5776,264416
(defun type-prescription-conclp type-prescription-conclp5822,266623
(defun subst-nil-into-type-prescription-disjunct subst-nil-into-type-prescription-disjunct5847,267721
(defun subst-nil-into-type-prescription-concl subst-nil-into-type-prescription-concl5872,268674
(defun destructure-type-prescription destructure-type-prescription5904,270111
(defun add-type-prescription-rule add-type-prescription-rule6073,279325
(defun chk-acceptable-type-prescription-rulechk-acceptable-type-prescription-rule6148,282391
(deflabel equivalenceequivalence6271,289046
(defun boolean-fn boolean-fn6570,298926
(defun reflexivity reflexivity6578,299124
(defun symmetry symmetry6584,299214
(defun transitivity transitivity6591,299328
(defun equivalence-relation-condition equivalence-relation-condition6599,299479
(defun find-candidate-equivalence-relation find-candidate-equivalence-relation6617,300239
(defun collect-problematic-pre-equivalence-rule-names collect-problematic-pre-equivalence-rule-names6631,300755
(defun chk-acceptable-equivalence-rule chk-acceptable-equivalence-rule6650,301801
(defun add-equivalence-rule add-equivalence-rule6773,307938
(deflabel refinementrefinement6914,313930
(defun chk-acceptable-refinement-rule chk-acceptable-refinement-rule6965,316050
(defun collect-coarsenings collect-coarsenings7004,317986
(defun putprop-coarsenings putprop-coarsenings7014,318315
(defun union-values union-values7042,319616
(defun extend-value-set extend-value-set7050,319855
(defun extend-each-value-set extend-each-value-set7064,320520
(defun close-value-sets close-value-sets7074,320851
(defun add-refinement-rule add-refinement-rule7088,321479
(deflabel congruencecongruence7109,322273
(defun corresponding-args-eq-except corresponding-args-eq-except7186,326199
(defun interpret-term-as-congruence-rule interpret-term-as-congruence-rule7200,326792
(defun some-congruence-rule-same some-congruence-rule-same7281,330697
(defun some-congruence-rule-has-refinement some-congruence-rule-has-refinement7290,330993
(defun chk-acceptable-congruence-rule chk-acceptable-congruence-rule7300,331351
(defun putnth putnth7363,334201
(defun add-congruence-rule-to-congruence add-congruence-rule-to-congruence7370,334463
(defun add-congruence-rule add-congruence-rule7380,334870
(deflabel definitiondefinition7426,337058
(defun chk-destructure-definition chk-destructure-definition7590,346374
(defun chk-acceptable-definition-install-body chk-acceptable-definition-install-body7602,346937
(defun chk-acceptable-definition-rulechk-acceptable-definition-rule7673,349884
(deflabel inductioninduction7722,351976
(defun chk-acceptable-induction-rule chk-acceptable-induction-rule7888,360507
(defun add-induction-rule add-induction-rule7895,360698
(deflabel type-set-invertertype-set-inverter7912,361368
(defun chk-acceptable-type-set-inverter-rule chk-acceptable-type-set-inverter-rule7969,363863
(defun add-type-set-inverter-rule add-type-set-inverter-rule8035,366713
(defun char-subsequencep char-subsequencep8074,368514
(defun disambiguate1 disambiguate18086,368893
(defun make-disambiguation-alist make-disambiguation-alist8096,369220
(defun assoc-cdr assoc-cdr8106,369618
(defun disambiguate disambiguate8114,369830
(defconst *rule-class-disambiguation-alist**rule-class-disambiguation-alist*8157,371924
(defconst *structured-rule-class-disambiguation-alist**structured-rule-class-disambiguation-alist*8178,372471
(defun tilde-@-abbreviates-but-phrase tilde-@-abbreviates-but-phrase8184,372635
(defun primitive-instructionp primitive-instructionp8201,373179
(defun non-primitive-instructions non-primitive-instructions8209,373498
(defun chk-primitive-instruction-listp chk-primitive-instruction-listp8219,373811
(defun translate-instructions translate-instructions8234,374409
(defun controller-alistp controller-alistp8241,374657
(defun alist-to-keyword-alist alist-to-keyword-alist8261,375394
(defun loop-stopper-alist-p loop-stopper-alist-p8272,375790
(defun guess-controller-alist-for-definition-ruleguess-controller-alist-for-definition-rule8285,376144
(defun chk-legal-linear-trigger-terms1 chk-legal-linear-trigger-terms18299,376741
(defun chk-legal-linear-trigger-terms chk-legal-linear-trigger-terms8320,377771
(defun backchain-limit-listp backchain-limit-listp8348,379185
(defun translate-rule-class-alisttranslate-rule-class-alist8362,379540
(defun translate-rule-class1 translate-rule-class19003,412628
(defun reason-for-non-keyword-value-listp reason-for-non-keyword-value-listp9062,415326
(defun translate-rule-class translate-rule-class9081,415891
(defun translate-rule-classes1 translate-rule-classes19132,418198
(defun translate-rule-classes translate-rule-classes9154,419056
(defun chk-acceptable-x-rule chk-acceptable-x-rule9185,420526
(defun chk-acceptable-x-rules chk-acceptable-x-rules9262,423951
(defun collect-assoc-eq collect-assoc-eq9280,424778
(defun chk-acceptable-rules chk-acceptable-rules9290,425135
(defun add-x-rule add-x-rule9373,427773
(defun add-rules1 add-rules19468,432049
(defun truncate-class-alist truncate-class-alist9487,432889
(defun truncate-classes truncate-classes9505,433680
(defun make-runes1 make-runes19523,434559
(defun make-runes make-runes9562,436204
(defun make-runic-mapping-pairs make-runic-mapping-pairs9570,436442
(defun add-rules add-rules9584,436981
(defun redundant-theoremp redundant-theoremp9607,438189
(defun non-tautological-classes non-tautological-classes9620,438767
(defun prove-corollaries1 prove-corollaries19638,439564
(defun prove-corollaries prove-corollaries9686,441979
(defun enabled-runep-string enabled-runep-string9720,443392
(defun untranslate-hyps untranslate-hyps9725,443506
(defun print-lemmas print-lemmas9730,443683
(defun world-to-next-event world-to-next-event9810,447653
(defun assoc-eq-eq assoc-eq-eq9818,447904
(defun actual-props actual-props9829,448240
(defun print-well-founded-relation-rules print-well-founded-relation-rules9847,448862
(defun print-built-in-clause-rules1 print-built-in-clause-rules19868,449605
(defun print-built-in-clause-rules print-built-in-clause-rules9887,450435
(defun print-compound-recognizer-rules print-compound-recognizer-rules9893,450686
(defun print-generalize-rules print-generalize-rules9918,451978
(defun print-linear-lemmas print-linear-lemmas9938,452817
(defun print-eliminate-destructors-rule print-eliminate-destructors-rule9965,454098
(defun print-congruences print-congruences9991,455410
(defun print-coarsenings print-coarsenings9999,455624
(defun print-forward-chaining-rules print-forward-chaining-rules10007,455822
(defun decode-type-set-lst decode-type-set-lst10037,457276
(defun print-type-prescriptions print-type-prescriptions10043,457415
(defun print-induction-rules print-induction-rules10073,458868
(defun print-type-set-inverter-rules print-type-set-inverter-rules10099,460038
(defun print-x-rules print-x-rules10120,461003
(defun print-rules1 print-rules110164,462669
(defun pr-fn pr-fn10175,463055
(defun new-numes new-numes10199,463852
(defun world-to-next-command world-to-next-command10210,464205
(defun pr!-fn pr!-fn10217,464473
(defmacro pr pr10231,464904
(defmacro pr! pr!10278,466503
(defun disabledp-fn-lst disabledp-fn-lst10305,467433
(defun disabledp-fn disabledp-fn10312,467754
(defmacro disabledp disabledp10335,468750
(defun access-x-rule-rune access-x-rule-rune10366,469986
(defun collect-x-rules-of-rune collect-x-rules-of-rune10410,472174
(defun collect-congruence-rules-of-rune-in-geneqv-lst collect-congruence-rules-of-rune-in-geneqv-lst10421,472579
(defun collect-congruence-rules-of-rune collect-congruence-rules-of-rune10433,473028
(defun find-rules-of-rune2 find-rules-of-rune210448,473674
(defun find-rules-of-rune1 find-rules-of-rune110535,477428
(defun find-rules-of-rune find-rules-of-rune10551,478179
(defun collect-non-backchain-subclass collect-non-backchain-subclass10595,480183
(defun chk-acceptable-monitor chk-acceptable-monitor10605,480559
(defun chk-acceptable-monitors chk-acceptable-monitors10680,484185
(defun monitor1 monitor110701,485038
(defun unmonitor1 unmonitor110720,485804
(defun monitor-fn monitor-fn10739,486591
(defun unmonitor-fn unmonitor-fn10764,487353
(defun monitored-runes-fn monitored-runes-fn10806,488868
(defun brr-fn brr-fn10821,489267
(defmacro brr brr10834,489561
(deflabel why-brrwhy-brr10906,493527
(defmacro brr@ brr@10963,496598
(defmacro monitor monitor11090,503365
(defmacro unmonitor unmonitor11260,512427
(defmacro monitored-runes monitored-runes11287,513302
(defun proceed-from-brkpt1 proceed-from-brkpt111303,513687
(defun exit-brr exit-brr11335,514955
(defun ok-if-fn ok-if-fn11346,515326
(defmacro ok-if ok-if11354,515569
(defun print-rule-storage-dependencies print-rule-storage-dependencies11402,517585
(defun defaxiom-fn defaxiom-fn11419,518197
(defun warn-on-inappropriate-defun-mode warn-on-inappropriate-defun-mode11488,521111
(defun strengthen-hyp-using-transfer-principle strengthen-hyp-using-transfer-principle11504,521784
(defun strengthen-hyp-using-transfer-principle-lst strengthen-hyp-using-transfer-principle-lst11524,522533
(defun strengthen-hyps-using-transfer-principle strengthen-hyps-using-transfer-principle11534,522820
(defun weaken-using-transfer-principle weaken-using-transfer-principle11545,523138
(defun chk-classical-term chk-classical-term11557,523462
(defun defthm-fn1 defthm-fn111574,524102
(defun defthm-fn defthm-fn11720,531131
(defmacro thm thm11743,531733
(defun thm-fn thm-fn11775,532558
(defun chk-extensible-rule-classes chk-extensible-rule-classes11807,533951
(defun extend-rule-classes extend-rule-classes11816,534299
(defun gen-new-name-in-package-of-symbol1 gen-new-name-in-package-of-symbol111827,534659
(defun gen-new-name-in-package-of-symbol gen-new-name-in-package-of-symbol11847,535455
(defmacro defequiv defequiv11867,536177
(defmacro defrefinement defrefinement11926,538269
(defmacro defcong defcong11981,540204

other-events.lisp,25818
(defun macro-vars-key macro-vars-key43,1890
(defun macro-vars-after-rest macro-vars-after-rest64,2656
(defun macro-vars-optional macro-vars-optional73,2881
(defun macro-vars macro-vars91,3518
(defun chk-legal-defconst-name chk-legal-defconst-name107,4099
(defun defconst-fn1 defconst-fn1121,4731
(defun defconst-fn defconst-fn127,4914
(defun chk-legal-init chk-legal-init227,8510
(defun chk-macro-arglist-keys chk-macro-arglist-keys254,9517
(defun chk-macro-arglist-after-rest chk-macro-arglist-after-rest339,13976
(defun chk-macro-arglist-optional chk-macro-arglist-optional347,14286
(defun chk-macro-arglist1 chk-macro-arglist1393,16484
(defun subsequencep subsequencep416,17475
(defun collect-lambda-keywordps collect-lambda-keywordps426,17814
(defun chk-macro-arglist chk-macro-arglist432,18030
(defun defmacro-fn1 defmacro-fn1501,21433
(defun chk-defmacro-width chk-defmacro-width517,21971
(defun redundant-defmacrop redundant-defmacrop531,22489
(defun defmacro-fn defmacro-fn549,23316
(defconst *initial-event-defmacros**initial-event-defmacros*636,27278
(defun boot-translate boot-translate847,34834
(defun primordial-event-macro-and-fn1 primordial-event-macro-and-fn1890,36541
(defun primordial-event-macro-and-fn primordial-event-macro-and-fn919,37958
(defun primordial-event-macros-and-fns primordial-event-macros-and-fns1054,44614
(defconst *initial-type-prescriptions**initial-type-prescriptions*1070,45209
(defun strip-caddrs strip-caddrs1090,45938
(defun collect-world-globals collect-world-globals1095,46085
(defun primordial-world-globals primordial-world-globals1102,46355
(defun primordial-world primordial-world1218,51990
(defun same-name-twice same-name-twice1274,53931
(defun conflicting-imports conflicting-imports1282,54163
(defun chk-new-stringp-name chk-new-stringp-name1289,54334
(deflabel package-reincarnation-import-restrictionspackage-reincarnation-import-restrictions1328,55881
(defun chk-package-reincarnation-import-restrictions chk-package-reincarnation-import-restrictions1392,59199
(defun convert-book-name-to-cert-name convert-book-name-to-cert-name1404,59637
(defun tilde-@-defpkg-error-phrase tilde-@-defpkg-error-phrase1415,59963
(defconst *1*-pkg-prefix**1*-pkg-prefix*1459,62349
(defun chk-acceptable-defpkg chk-acceptable-defpkg1472,62775
(defun defpkg-fn defpkg-fn1648,70719
(defun theory-fn-callp theory-fn-callp1841,80508
(defun intersection-augmented-theories-fn1 intersection-augmented-theories-fn11864,81369
(defmacro check-theory check-theory1884,82337
(defun intersection-theories-fn intersection-theories-fn1892,82647
(defmacro intersection-theories intersection-theories1901,82994
(defun union-augmented-theories-fn1 union-augmented-theories-fn11933,83977
(defun union-theories-fn1 union-theories-fn11950,84829
(defun union-theories-fn union-theories-fn1974,85926
(defmacro union-theories union-theories2013,87386
(defun set-difference-augmented-theories-fn1 set-difference-augmented-theories-fn12059,88679
(defun set-difference-theories-fn1 set-difference-theories-fn12074,89402
(defun set-difference-theories-fn set-difference-theories-fn2098,90482
(defmacro set-difference-theories set-difference-theories2129,91674
(defun universal-theory-fn1 universal-theory-fn12168,92972
(defun universal-theory-fn universal-theory-fn2220,95829
(defmacro universal-theory universal-theory2254,97476
(defun function-theory-fn1 function-theory-fn12304,99524
(defun function-theory-fn function-theory-fn2364,102434
(defmacro function-theory function-theory2383,103190
(defun executable-counterpart-theory-fn executable-counterpart-theory-fn2422,104511
(defmacro executable-counterpart-theory executable-counterpart-theory2440,105246
(defun standard-theories standard-theories2483,106797
(defun current-theory-fn current-theory-fn2489,107047
(defmacro current-theory current-theory2506,107702
(defun end-prehistoric-world end-prehistoric-world2640,112659
(defun theory-namep theory-namep2678,114411
(defun theory-fn theory-fn2687,114668
(defmacro theory theory2694,114864
(defun deftheory-fn deftheory-fn2724,115684
(defun in-theory-fn in-theory-fn2842,120871
(defun in-arithmetic-theory-fn in-arithmetic-theory-fn2903,123382
(defmacro disable disable2962,125837
(defmacro enable enable2999,126996
(defmacro theory-invariant theory-invariant3049,128710
(defmacro incompatible incompatible3258,138978
(deflabel signaturesignature3299,140452
(defun gen-formals-from-pretty-flags1 gen-formals-from-pretty-flags13397,144896
(defun gen-formals-from-pretty-flags gen-formals-from-pretty-flags3422,145920
(defconst *generic-bad-signature-string**generic-bad-signature-string*3434,146514
(defun chk-signature chk-signature3440,146824
(defun chk-signatures chk-signatures3645,155525
(defun chk-acceptable-encapsulate1 chk-acceptable-encapsulate13691,157745
(defconst *primitive-event-macros**primitive-event-macros*3741,160275
(deflabel embedded-event-form embedded-event-form3851,164049
(defun name-introduced name-introduced4004,170322
(defun chk-embedded-event-form-orig-form-msg chk-embedded-event-form-orig-form-msg4079,173694
(defun chk-embedded-event-formchk-embedded-event-form4086,173943
(defun destructure-expansion destructure-expansion4425,190280
(defun rebuild-expansion rebuild-expansion4434,190640
(defun set-raw-mode-on set-raw-mode-on4439,190817
(defun set-raw-mode-off set-raw-mode-off4449,191171
(defmacro set-raw-mode-on! set-raw-mode-on!4459,191528
(defmacro set-raw-mode set-raw-mode4475,192102
(defun-one-output stobj-out stobj-out4596,197512
(defun mv-ref! mv-ref!4607,197904
(defmacro add-raw-arity add-raw-arity4646,198732
(defmacro remove-raw-arity remove-raw-arity4699,200748
(defun raw-arity raw-arity4723,201579
(defun alist-to-bindings alist-to-bindings4783,204189
(defun-one-output acl2-raw-eval-form-to-eval acl2-raw-eval-form-to-eval4790,204371
(defun acl2-raw-eval acl2-raw-eval4820,205606
(defun acl2-raw-eval acl2-raw-eval4843,206491
(defun acl2-raw-eval acl2-raw-eval4861,207187
(defun get-and-chk-last-make-event-expansion get-and-chk-last-make-event-expansion4864,207260
(defun eval-event-lst eval-event-lst4891,208452
(defun equal-insig equal-insig5036,215394
(defun bad-signature-alist bad-signature-alist5056,216311
(defmacro if-ns if-ns5074,217186
(defun tilde-*-bad-insigs-phrase1 tilde-*-bad-insigs-phrase15093,217710
(defun tilde-*-bad-insigs-phrase tilde-*-bad-insigs-phrase5115,218672
(defun union-eq-cars union-eq-cars5127,219168
(defun chk-acceptable-encapsulate2 chk-acceptable-encapsulate25131,219291
(defun conjoin-into-alist conjoin-into-alist5171,220811
(defun classes-theorems classes-theorems5185,221340
(defun constraints-introduced1 constraints-introduced15197,221724
(defun new-trips new-trips5210,222223
(defun constraints-introduced constraints-introduced5290,226544
(defun putprop-constraints putprop-constraints5386,230560
(deflabel local-incompatibilitylocal-incompatibility5411,231959
(defun maybe-install-acl2-defaults-table maybe-install-acl2-defaults-table5513,237086
(defun in-encapsulatep in-encapsulatep5530,237792
(defun update-for-redo-flat update-for-redo-flat5546,238353
(defmacro redo-flat redo-flat5564,239016
(defun process-embedded-eventsprocess-embedded-events5706,245607
(defun constrained-functions constrained-functions5939,257425
(defun collect-logicals collect-logicals5961,258463
(defun exported-function-names exported-function-names5970,258747
(defun get-unnormalized-bodies get-unnormalized-bodies5982,259165
(defun collect-t-machines collect-t-machines5988,259414
(defun subversivep subversivep6023,260706
(defun subversive-cliquep subversive-cliquep6039,261413
(defun contains-non-trivial-encapsulatep contains-non-trivial-encapsulatep6071,262783
(defun definitional-constraints definitional-constraints6089,263642
(defun definitional-constraints-list definitional-constraints-list6118,264784
(defun iteratively-grow-constraint1iteratively-grow-constraint16123,264989
(defun iteratively-grow-constraint iteratively-grow-constraint6274,271197
(defun erase-induction-properties erase-induction-properties6346,274132
(defun encapsulate-pass-2 encapsulate-pass-26362,274822
(defun test test6501,281425
(defstobj $s $s6510,281729
(defun bad bad6690,287190
(defthm lemmalemma6849,292073
(defun tilde-@-abbreviate-object-phrase tilde-@-abbreviate-object-phrase7084,299837
(defun encapsulate-ctx encapsulate-ctx7118,300894
(defun print-encapsulate-msg1 print-encapsulate-msg17144,301961
(defun print-encapsulate-msg2 print-encapsulate-msg27161,302667
(defun print-encapsulate-msg3/exported-names print-encapsulate-msg3/exported-names7173,303001
(defun print-encapsulate-msg3/constraints print-encapsulate-msg3/constraints7192,303605
(defun print-encapsulate-msg3 print-encapsulate-msg37221,304865
(defun redundant-event-tuplep redundant-event-tuplep7296,308855
(defun find-first-non-local-name find-first-non-local-name7316,309628
(defun find-first-non-local-name-lst find-first-non-local-name-lst7351,311229
(defun corresponding-encap-events corresponding-encap-events7370,312058
(defun corresponding-encaps corresponding-encaps7386,312610
(defun redundant-encapsulate-tuplep redundant-encapsulate-tuplep7394,312854
(defun redundant-encapsulatep redundant-encapsulatep7420,314051
(defun mark-missing-as-hidden-p mark-missing-as-hidden-p7501,318421
(defun known-package-alist-included-p known-package-alist-included-p7514,318946
(defun encapsulate-fix-known-package-alist encapsulate-fix-known-package-alist7527,319500
(defun subst-by-position1 subst-by-position17562,321455
(defun subst-by-position subst-by-position7582,322172
(defun encapsulate-fn encapsulate-fn7600,322996
(defun progn-fn1 progn-fn17890,338027
(defun progn-fn progn-fn7956,340686
(defun progn!-fn progn!-fn7959,340750
(defun make-event-ctx make-event-ctx7963,340912
(defun state-global-bindings state-global-bindings7968,341080
(defconst *initial-ld-special-bindings**initial-ld-special-bindings*7974,341279
(defconst *protected-state-globals-for-make-event**protected-state-globals-for-make-event*7997,342083
(defmacro protect-state-globals-for-make-event protect-state-globals-for-make-event8031,343621
(defun protected-eval-with-proofs protected-eval-with-proofs8036,343780
(defun make-event-debug-pre make-event-debug-pre8098,346548
(defun make-event-debug-post make-event-debug-post8114,347197
(defmacro do-proofs? do-proofs?8122,347498
(defun make-event-fn make-event-fn8129,347643
(deflabel booksbooks8270,354398
(defun chk-book-name chk-book-name8330,357461
(defun include-book-alist-subsetp include-book-alist-subsetp8376,359544
(defun get-portcullis-cmds get-portcullis-cmds8416,361497
(defun make-include-books-absolute make-include-books-absolute8461,363567
(defun make-include-books-absolute-lst make-include-books-absolute-lst8587,370080
(defun relative-book-name-alist relative-book-name-alist8601,370805
(defun first-known-package-alist first-known-package-alist8666,373543
(defun defpkg-items-rec defpkg-items-rec8686,374235
(defun defpkg-items defpkg-items8752,377358
(defun new-defpkg-list2 new-defpkg-list28763,377774
(defun make-defpkg make-defpkg8785,378537
(defun new-defpkg-list1 new-defpkg-list18794,378886
(defun new-defpkg-list new-defpkg-list8830,380551
(defun fix-portcullis-cmds fix-portcullis-cmds8869,382829
(defun collect-uncertified-books collect-uncertified-books8949,387276
(defun certificate-filep certificate-filep8963,387853
(defun chk-in-package chk-in-package8973,388145
(defconst *ill-formed-certificate-msg**ill-formed-certificate-msg*9015,389948
(defun include-book-er include-book-er9022,390301
(defun tilde-*-book-check-sums-phrase1 tilde-*-book-check-sums-phrase19097,393571
(defun tilde-*-book-check-sums-phrase tilde-*-book-check-sums-phrase9145,395567
(defun get-cmds-from-portcullis get-cmds-from-portcullis9160,396295
(defun chk-raise-portcullis2 chk-raise-portcullis29179,397013
(defun chk-raise-portcullis1 chk-raise-portcullis19233,399551
(defun mark-local-included-books mark-local-included-books9263,400691
(defun unmark-and-delete-local-included-books unmark-and-delete-local-included-books9295,402371
(defun decimal-string-to-number decimal-string-to-number9334,404625
(defun tainted-stringp tainted-stringp9365,406008
(defun taint-string taint-string9384,406612
(defun parse-version parse-version9396,406939
(defun-one-output latest-release-note-string latest-release-note-string9447,409320
(defun earlier-acl2-versionp earlier-acl2-versionp9455,409640
(defun acl2-version-r-p acl2-version-r-p9482,410638
(defun acl2-version-era acl2-version-era9499,411447
(defun ttag-alistp ttag-alistp9505,411563
(defun cert-annotationsp cert-annotationsp9516,411866
(defun include-book-alist-entryp include-book-alist-entryp9530,412259
(defun include-book-alistp1 include-book-alistp19551,413179
(defun include-book-alistp include-book-alistp9568,413812
(defun modernize-include-book-alist-entry modernize-include-book-alist-entry9597,415101
(defun modernize-include-book-alist1 modernize-include-book-alist19608,415537
(defun modernize-include-book-alist modernize-include-book-alist9619,415953
(defrec cert-objcert-obj9631,416438
(defun chk-raise-portcullis chk-raise-portcullis9635,416517
(defun chk-certificate-file1 chk-certificate-file19786,423059
(defun chk-certificate-file chk-certificate-file9966,433113
(defun chk-acceptable-certify-book1 chk-acceptable-certify-book110024,435810
(defun remove-after-last-directory-separator remove-after-last-directory-separator10095,438956
(defun merge-using-dot-dot merge-using-dot-dot10103,439280
(defun our-merge-pathnames our-merge-pathnames10137,440587
(defun extend-pathname extend-pathname10168,441736
(defun registered-full-book-name registered-full-book-name10180,442122
(defun translate-book-names translate-book-names10198,442886
(defun fix-ttags fix-ttags10213,443676
(defun chk-well-formed-ttags chk-well-formed-ttags10254,445657
(defun cbd-fn cbd-fn10264,446021
(defmacro cbd cbd10271,446328
(defun chk-acceptable-certify-book chk-acceptable-certify-book10380,451764
(defun print-objects print-objects10511,458192
(defun new-post-alist3 new-post-alist310516,458368
(defun make-certificate-file1 make-certificate-file110534,459173
(defun make-certificate-file make-certificate-file10585,461205
(defun open-input-object-file open-input-object-file10701,466748
(defun read-object-file1 read-object-file110723,467630
(defun read-object-file read-object-file10735,468084
(defun maybe-add-separator maybe-add-separator10752,468912
(defun set-cbd-fn set-cbd-fn10758,469112
(defmacro set-cbd set-cbd10783,470197
(defun parse-book-name parse-book-name10814,471256
(defun chk-cert-annotationschk-cert-annotations10866,473520
(defun chk-cert-annotations-post-alistchk-cert-annotations-post-alist10912,475788
(defun chk-input-object-file chk-input-object-file10999,479875
(defmacro include-book-dir include-book-dir11013,480511
(defmacro include-book-dir-with-chk include-book-dir-with-chk11021,480839
(defun newly-defined-top-level-fns-rec newly-defined-top-level-fns-rec11040,481782
(defun newly-defined-top-level-fns newly-defined-top-level-fns11068,483007
(defun include-book-fn include-book-fn11078,483292
(defun spontaneous-decertificationp1 spontaneous-decertificationp111716,516706
(defun spontaneous-decertificationp spontaneous-decertificationp11762,518858
(defun note-certification-world note-certification-world11777,519416
(defun note-certification-world-lst note-certification-world-lst11863,524112
(defun remove-duplicates-equal-from-end remove-duplicates-equal-from-end11875,524568
(defun include-book-alist-subsetp-failure-witnesses include-book-alist-subsetp-failure-witnesses11881,524831
(defun expansion-filename expansion-filename11995,531494
(defun write-expansion-file write-expansion-file12006,531918
(defun collect-ideal-user-defuns1 collect-ideal-user-defuns112052,533739
(defun collect-ideal-user-defuns collect-ideal-user-defuns12079,534618
(defun set-difference-eq-sorted set-difference-eq-sorted12086,534857
(defun certify-book-disabledp certify-book-disabledp12099,535390
(defun certify-book-fn certify-book-fn12102,535477
(defmacro certify-book certify-book12627,564274
(defmacro certify-book! certify-book!12816,574487
(deflabel pathnamepathname12847,575766
(deflabel book-examplebook-example12883,577452
(deflabel full-book-namefull-book-name13053,586338
(deflabel book-namebook-name13098,588185
(deflabel book-contentsbook-contents13189,592436
(deflabel certificatecertificate13267,595743
(deflabel portcullisportcullis13350,600137
(deflabel versionversion13464,606184
(deflabel keepkeep13571,612091
(deflabel uncertified-booksuncertified-books13604,613661
(deflabel book-makefilesbook-makefiles13660,616529
(defun defstub-ignores defstub-ignores13805,623507
(defun defstub-body defstub-body13824,624151
(defun partition-rest-and-keyword-args1 partition-rest-and-keyword-args113852,625218
(defun partition-rest-and-keyword-args2 partition-rest-and-keyword-args213861,625519
(defun partition-rest-and-keyword-args partition-rest-and-keyword-args13878,626215
(defmacro defstub defstub13897,627005
(defun redundant-defchoosep redundant-defchoosep13992,630871
(defun chk-arglist-for-defchoose chk-arglist-for-defchoose14006,631480
(defun defchoose-constraint-basic defchoose-constraint-basic14024,632314
(defun defchoose-constraint-extra defchoose-constraint-extra14062,633400
(defun defchoose-constraint defchoose-constraint14145,637597
(defun defchoose-fn defchoose-fn14155,638061
(defun non-acceptable-defun-sk-p non-acceptable-defun-sk-p14312,645930
(defmacro defun-sk defun-sk14392,649929
(deflabel forallforall14732,664839
(deflabel existsexists14746,665230
(deflabel defun-sk-exampledefun-sk-example14760,665625
(deflabel quantifiersquantifiers14857,668957
(deflabel quantifiers-using-recursionquantifiers-using-recursion14888,670298
(deflabel quantifiers-using-defun-skquantifiers-using-defun-sk14919,671131
(deflabel quantifiers-using-defun-sk-extendedquantifiers-using-defun-sk-extended14969,672758
(defun doublet-style-symbol-to-symbol-alistp doublet-style-symbol-to-symbol-alistp15065,675869
(defun chk-legal-defstobj-name chk-legal-defstobj-name15078,676395
(defun chk-unrestricted-guards-for-user-fns chk-unrestricted-guards-for-user-fns15091,676875
(defconst *expt2-28* *expt2-28*15104,677422
(defun chk-stobj-field-descriptor chk-stobj-field-descriptor15106,677457
(defun chk-acceptable-defstobj-renamingchk-acceptable-defstobj-renaming15257,684573
(defun defconst-name defconst-name15388,690851
(defun chk-acceptable-defstobj1chk-acceptable-defstobj115393,690973
(defun the-live-var the-live-var15486,695842
(defconst *defstobj-keywords**defstobj-keywords*15505,696693
(defun defstobj-redundancy-bundle defstobj-redundancy-bundle15508,696753
(defun redundant-defstobjp redundant-defstobjp15535,697995
(defun chk-acceptable-defstobj chk-acceptable-defstobj15562,699415
(defun defstobj-fields-template defstobj-fields-template15708,705755
(defun defstobj-doc defstobj-doc15747,707500
(defun defstobj-template defstobj-template15757,707840
(defun defstobj-component-recognizer-calls defstobj-component-recognizer-calls15799,709728
(defun defstobj-component-recognizer-axiomatic-defs defstobj-component-recognizer-axiomatic-defs15826,710872
(defun defstobj-field-fns-axiomatic-defs defstobj-field-fns-axiomatic-defs15906,714508
(defun defstobj-axiomatic-init-fields defstobj-axiomatic-init-fields16001,719194
(defun defstobj-creator-fn defstobj-creator-fn16020,719897
(defun defstobj-axiomatic-defs defstobj-axiomatic-defs16030,720179
(defun simple-array-type simple-array-type16061,721475
(defun-one-output stobj-copy-array-aref stobj-copy-array-aref16069,721684
(defun-one-output stobj-copy-array-svref stobj-copy-array-svref16084,722186
(defun-one-output stobj-copy-array-fix-aref stobj-copy-array-fix-aref16099,722643
(defmacro the-live-stobjp the-live-stobjp16114,723197
(defun array-etype-is-fixnum-type array-etype-is-fixnum-type16125,723616
(defun defstobj-field-fns-raw-defs defstobj-field-fns-raw-defs16161,725009
(defun defstobj-raw-init-fields defstobj-raw-init-fields16290,730846
(defun defstobj-raw-init defstobj-raw-init16315,731831
(defun defstobj-raw-defs defstobj-raw-defs16323,732076
(defun put-stobjs-in-and-outs1 put-stobjs-in-and-outs116360,733690
(defun put-stobjs-in-and-outs put-stobjs-in-and-outs16397,734893
(defun defconst-name-alist defconst-name-alist16450,737212
(defun accessor-array accessor-array16456,737372
(defun strip-accessor-names strip-accessor-names16466,737791
(defun defstobj-defconsts defstobj-defconsts16476,738038
(defun defstobj-fn defstobj-fn16482,738223
(deflabel stobjstobj16703,749566
(deflabel stobj-example-1stobj-example-116793,753971
(deflabel declare-stobjsdeclare-stobjs17026,763241
(deflabel stobj-example-1-defunsstobj-example-1-defuns17077,765481
(deflabel stobj-example-1-implementationstobj-example-1-implementation17196,770128
(deflabel stobj-example-1-proofsstobj-example-1-proofs17271,772944
(deflabel stobj-example-2stobj-example-217421,778507
(deflabel stobj-example-3stobj-example-317515,781574
(defdoc resize-listresize-list17753,790602
(defun-one-output mv-let-for-with-local-stobj mv-let-for-with-local-stobj17767,791122
(defmacro with-local-stobj with-local-stobj17796,792402
(defdoc with-local-stobjwith-local-stobj18038,798266
(defun push-untouchable-fn push-untouchable-fn18114,801137
(defun remove-untouchable-fn remove-untouchable-fn18164,803038
(defun def-body-runes def-body-runes18214,805000
(defmacro show-bodies show-bodies18222,805308
(defun set-body-fn1 set-body-fn118276,807468
(defun set-body-fn set-body-fn18286,807834
(defdoc tracetrace18327,809338
(defparameter *trace-level* *trace-level*18364,810841
(defparameter *trace-evisc-tuple**trace-evisc-tuple*18366,810873
(defun-one-output trace-evisc-tuple trace-evisc-tuple18372,811042
(defun-one-output reset-trace-evisc-tuple reset-trace-evisc-tuple18383,811477
(defun-one-output trace-ppr trace-ppr18390,811722
(defun open-trace-file-fn open-trace-file-fn18408,812371
(defmacro open-trace-file open-trace-file18434,813470
(defun close-trace-file-fn close-trace-file-fn18458,814222
(defmacro close-trace-file close-trace-file18471,814724
(defun-one-output push-error-trace-stack push-error-trace-stack18492,815274
(defun-one-output pop-error-trace-stack pop-error-trace-stack18506,815740
(defun-one-output with-error-trace-fns-forms-rec with-error-trace-fns-forms-rec18513,815910
(defun-one-output with-error-trace-fns-forms-rec with-error-trace-fns-forms-rec18531,816422
(defun-one-output with-error-trace-fns-forms with-error-trace-fns-forms18551,816974
(defun-one-output with-error-trace-fns-forms with-error-trace-fns-forms18569,817665
(defun with-error-trace-fns-before with-error-trace-fns-before18575,817792
(defun with-error-trace-fns-after with-error-trace-fns-after18578,817880
(defun-one-output with-error-trace-fns-forms with-error-trace-fns-forms18582,817993
(defun-one-output with-error-trace-fns-forms with-error-trace-fns-forms18600,818583
(defconst *non-exec-fns**non-exec-fns*18609,818892
(defun executable-ancestors executable-ancestors18617,819019
(defun-one-output custom-trace-ppr custom-trace-ppr18649,820038
(defun with-error-trace-fn with-error-trace-fn18690,821791
(defmacro with-error-trace with-error-trace18775,826001
(defmacro wet wet18790,826511
(defun trace$-fn trace$-fn18902,830880
(defmacro trace$ trace$18915,831309
(defun untrace$-fn untrace$-fn19073,836952
(defmacro untrace$ untrace$19086,837344
(defmacro break-on-error break-on-error19107,837873
(defun defexec-extract-key defexec-extract-key19134,838711
(defun parse-defexec-dcls-1 parse-defexec-dcls-119156,839755
(defun fix-exec-xargs fix-exec-xargs19254,844628
(defun parse-defexec-dcls parse-defexec-dcls19276,845553
(defmacro defexec defexec19340,848647
(defrec sar sar19585,859540
(defun applicable-rewrite-rules1 applicable-rewrite-rules119600,860384
(defun pc-relieve-hyp pc-relieve-hyp19654,863272
(defun pc-relieve-hyps1 pc-relieve-hyps119727,866359
(defun pc-relieve-hyps pc-relieve-hyps19769,868408
(defun remove-trivial-lits remove-trivial-lits19782,869007
(defun unrelieved-hyps unrelieved-hyps19803,869980
(defun untranslate-subst-abb untranslate-subst-abb19827,870996
(defun show-rewrite show-rewrite19834,871264
(defun show-rewrites show-rewrites19917,875319
(defun expand-assumptions-1 expand-assumptions-119979,878623
(defun expand-assumptions expand-assumptions19994,879268
(defun hyps-type-alist hyps-type-alist20004,879499
(defun show-rewrites-fn show-rewrites-fn20017,880104
(defun show-meta-lemmas1 show-meta-lemmas120073,882935
(defun show-meta-lemmas show-meta-lemmas20133,886128
(defun pl-fn pl-fn20143,886529
(defmacro pl pl20170,887722
(defun add-include-book-dir-fn add-include-book-dir-fn20207,889485
(defun delete-include-book-dir-fn delete-include-book-dir-fn20245,891355
(defmacro set-tainted-okp set-tainted-okp20276,892916
(defmacro reset-prehistory reset-prehistory20339,896095
(defmacro reset-prehistory reset-prehistory20344,896186
(defun reset-prehistory-fn reset-prehistory-fn20388,897931

ld.lisp,13972
(defun default-print-prompt default-print-prompt33,1356
(defun print-prompt print-prompt141,6239
(defun initialize-timers initialize-timers172,7470
(defun maybe-add-command-landmark maybe-add-command-landmark179,7673
(defun replace-last-cdr replace-last-cdr246,11238
(defun chk-acceptable-ld-fn1-pair chk-acceptable-ld-fn1-pair251,11398
(defun close-channels close-channels407,18334
(defun chk-acceptable-ld-fn1 chk-acceptable-ld-fn1442,19926
(defun chk-acceptable-ld-fn chk-acceptable-ld-fn547,25730
(defun f-put-ld-specials f-put-ld-specials586,27561
(defun f-get-ld-specials f-get-ld-specials644,29972
(defun ld-read-keyword-command1 ld-read-keyword-command1684,31590
(defun exit-ld exit-ld703,32314
(defun ld-read-keyword-command ld-read-keyword-command712,32629
(defun ld-read-command ld-read-command796,36455
(deflabel acl2-customizationacl2-customization825,37935
(deflabel keyword-commandskeyword-commands894,41692
(defun ld-print-command ld-print-command928,43158
(defun ld-filter-command ld-filter-command950,43739
(defun-one-output ppr? ppr?974,44989
(defun ld-print-results ld-print-results987,45366
(defun ld-print-prompt ld-print-prompt1091,49570
(defun print-newline-for-time$ print-newline-for-time$1107,50157
(defun good-bye-fn good-bye-fn1117,50449
(defmacro good-bye good-bye1133,50900
(defun ld-read-eval-print ld-read-eval-print1163,51878
(defun ld-loop ld-loop1280,57166
(defvar *first-entry-to-ld-fn-body-flg*)*first-entry-to-ld-fn-body-flg*1310,58537
(defun update-cbd update-cbd1312,58579
(defun ld-fn-body ld-fn-body1321,58985
(defvar *acl2-panic-exit-flg*)*acl2-panic-exit-flg*1386,61923
(defun ld-fn1 ld-fn11388,61955
(defun ld-fn-alist ld-fn-alist1430,64043
(defun ld-fn ld-fn1454,65220
(defmacro ld ld1611,73484
(defmacro quick-test quick-test1904,89333
(defun wormhole-prompt wormhole-prompt1928,90217
(defun reset-ld-specials-fn reset-ld-specials-fn1937,90564
(defmacro reset-ld-specials reset-ld-specials1950,91104
(defun maybe-reset-defaults-table1maybe-reset-defaults-table11979,92427
(defun maybe-reset-defaults-table2maybe-reset-defaults-table22018,94104
(defun maybe-reset-defaults-table maybe-reset-defaults-table2027,94450
(defun delete-something delete-something2032,94752
(defun store-in-kill-ring store-in-kill-ring2042,95079
(defun rotate-kill-ring1 rotate-kill-ring12062,96095
(defun rotate-kill-ring rotate-kill-ring2067,96262
(defun ubt-ubu-fn1 ubt-ubu-fn12079,96808
(defun ubt-ubu-fn ubt-ubu-fn2134,98947
(defun ubt!-ubu!-fn ubt!-ubu!-fn2186,101345
(defmacro ubt-prehistory ubt-prehistory2203,101802
(defun ubt-prehistory-fn ubt-prehistory-fn2216,102251
(defun oops-fn oops-fn2244,103451
(defmacro oops oops2276,105142
(defun reset-kill-ring reset-kill-ring2372,109524
(defmacro i-am-here i-am-here2411,111164
(defun rebuild-fn-read-filter rebuild-fn-read-filter2445,112240
(defun rebuild-fn rebuild-fn2477,113710
(defmacro rebuild rebuild2501,114480
(defconst *basic-sweep-error-str**basic-sweep-error-str*2702,124852
(defun sweep-symbol-binding-for-bad-symbol sweep-symbol-binding-for-bad-symbol2709,125226
(defun sweep-global-lst sweep-global-lst2731,126243
(defun sweep-stack-entry-for-bad-symbol sweep-stack-entry-for-bad-symbol2740,126563
(defun sweep-t-stack sweep-t-stack2763,127620
(defun sweep-acl2-oracle sweep-acl2-oracle2771,127934
(defun sweep-global-state-for-lisp-objects sweep-global-state-for-lisp-objects2786,128468
(deflabel compilationcompilation2832,130162
(deflabel escape-to-common-lispescape-to-common-lisp2845,130372
(deflabel copyrightcopyright2860,130804
(deflabel acknowledgmentsacknowledgments2895,132161
(deflabel breaksbreaks3022,138063
(deflabel saving-and-restoringsaving-and-restoring3067,140203
(deflabel ordinalsordinals3080,140765
(deflabel release-notesrelease-notes3221,147693
(deflabel note1note13233,148013
(deflabel note2note23254,148642
(deflabel note3note33288,150269
(deflabel note4note43390,156107
(deflabel note5note53551,163147
(deflabel note6note63798,175435
(deflabel note7note73923,180808
(deflabel note8note84122,189543
(deflabel note8-updatenote8-update4468,205337
(deflabel note9note94529,207584
(deflabel note-2-0note-2-04610,210642
(deflabel note-2-1note-2-14643,211866
(deflabel note-2-2note-2-24661,212248
(deflabel note-2-3note-2-34723,215141
(deflabel note-2-4note-2-44783,217444
(deflabel note-2-5note-2-54829,219000
(deflabel |NOTE-2-5(|NOTE-2-55159,235411
(deflabel note-2-6note-2-65175,235708
(deflabel note-2-6-new-functionalitynote-2-6-new-functionality5194,236365
(deflabel note-2-6-proofsnote-2-6-proofs5377,245412
(deflabel note-2-6-rulesnote-2-6-rules5489,251127
(deflabel note-2-6-guardsnote-2-6-guards5560,254489
(deflabel note-2-6-proof-checkernote-2-6-proof-checker5628,257527
(deflabel note-2-6-systemnote-2-6-system5654,258436
(deflabel note-2-6-othernote-2-6-other5701,260609
(deflabel |NOTE-2-6(|NOTE-2-65821,266166
(deflabel note-2-7note-2-75837,266493
(deflabel note-2-7-bug-fixesnote-2-7-bug-fixes5924,270032
(deflabel note-2-7-new-functionalitynote-2-7-new-functionality6211,284496
(deflabel note-2-7-proofsnote-2-7-proofs6367,292405
(deflabel note-2-7-rulesnote-2-7-rules6469,297881
(deflabel note-2-7-guardsnote-2-7-guards6490,298801
(deflabel note-2-7-proof-checkernote-2-7-proof-checker6520,299621
(deflabel note-2-7-systemnote-2-7-system6531,299904
(deflabel note-2-7-othernote-2-7-other6601,302985
(deflabel |NOTE-2-7(|NOTE-2-76774,311294
(deflabel note-2-8note-2-86798,311999
(deflabel note-2-8-bug-fixesnote-2-8-bug-fixes6961,318996
(deflabel note-2-8-new-functionalitynote-2-8-new-functionality7414,339887
(deflabel note-2-8-proofsnote-2-8-proofs7560,348038
(deflabel note-2-8-rulesnote-2-8-rules7637,352287
(deflabel note-2-8-guardsnote-2-8-guards7678,354048
(deflabel note-2-8-proof-checkernote-2-8-proof-checker7689,354270
(deflabel note-2-8-systemnote-2-8-system7722,355936
(deflabel note-2-8-ordinalsnote-2-8-ordinals7751,357220
(deflabel note-2-8-othernote-2-8-other7759,357368
(deflabel |NOTE-2-8(|NOTE-2-87835,360520
(deflabel note-2-9note-2-97852,360993
(deflabel |NOTE-2-9(|NOTE-2-98440,386612
(deflabel note-2-9-1note-2-9-18455,386939
(deflabel note-2-9-2note-2-9-28669,396276
(deflabel note-2-9-3note-2-9-38896,406136
(deflabel note-2-9-3-ppr-changenote-2-9-3-ppr-change9128,416713
(deflabel note-2-9-4note-2-9-49406,425244
(deflabel note-2-9-5note-2-9-59785,444485
(deflabel note-3-0note-3-010140,461255
(deflabel |NOTE-3-0(|NOTE-3-010167,462273
(deflabel note-3-0-1note-3-0-110182,462576
(deflabel |NOTE-3-0-1(|NOTE-3-0-110509,479292
(deflabel note-3-0-2note-3-0-210524,479605
(deflabel note-3-1note-3-111039,501858
(deflabel |NOTE-3-1(|NOTE-3-111054,502263
(deflabel the-methodthe-method11070,502571
(deflabel lplp11166,507578
(defun cltl-def-from-name cltl-def-from-name11233,511153
(defun-one-output compiled-function-p! compiled-function-p!11267,512536
(defun compile-function compile-function11279,512992
(defun getpid$ getpid$11344,515577
(defun-one-output tmp-filename tmp-filename11368,516411
(defun keep-tmp-files keep-tmp-files11386,517081
(defun comp-fn comp-fn11389,517152
(defmacro comp comp11482,520565
(defmacro comp comp11487,520636
(defmacro comp-gcl comp-gcl11557,524031
(defun scan-past-deeper-event-landmarks scan-past-deeper-event-landmarks11576,524759
(defun puffable-command-blockp puffable-command-blockp11596,525515
(defun puffable-command-numberp puffable-command-numberp11629,526894
(defun puff-command-block puff-command-block11644,527434
(defun commands-back-to commands-back-to11777,533849
(defun puffed-command-sequence puffed-command-sequence11792,534400
(defun puff-fn1 puff-fn111815,535282
(defun puff-report puff-report11889,539130
(defun puff-fn puff-fn11902,539722
(defun puff*-fn11 puff*-fn1111906,539853
(defun puff*-fn1 puff*-fn111927,540603
(defun puff*-fn puff*-fn11955,541931
(defmacro puff puff12023,544991
(defmacro puff* puff*12140,551753
(defmacro mini-proveall mini-proveall12216,554692
(defmacro exit exit12452,561847
(defmacro quit quit12462,561980
(defmacro set-guard-checking set-guard-checking12472,562113
(defconst *home-page**home-page*12762,574726
(defconst *home-page-references**home-page-references*13065,585094
(deflabel |Pages |Pages13076,585532
(deflabel |Undocumented |Undocumented13099,586683
(deflabel |Common |Common13105,586855
(deflabel |An |An13143,588584
(deflabel |The |The13180,589916
(deflabel |A |A13210,591074
(deflabel |About |About13249,592644
(deflabel |A |A13282,594146
(deflabel |What |What13310,595200
(deflabel |About |About13333,595910
(deflabel |Models |Models13358,596642
(deflabel |The |The13384,597295
(deflabel |Corroborating |Corroborating13408,598063
(deflabel |Models |Models13456,600054
(deflabel |A |A13492,601019
(deflabel |Functions |Functions13517,601853
(deflabel |Common |Common13549,602940
(deflabel |Analyzing |Analyzing13587,604475
(deflabel |What |What13628,605891
(deflabel |A |A13652,606659
(deflabel |What |What13661,606873
(deflabel |What |What13682,607627
(deflabel |ACL2 |ACL213696,608038
(deflabel |ACL2 |ACL213711,608587
(deflabel |ACL2 |ACL213732,609260
(deflabel |Modeling |Modeling13755,609984
(deflabel |Running |Running13779,610753
(deflabel |Symbolic |Symbolic13810,611684
(deflabel |Proving |Proving13833,612265
(deflabel |What |What13860,613027
(deflabel |How |How13889,613901
(deflabel |Other |Other13919,614959
(deflabel |The |The13947,615631
(deflabel |An |An13972,616395
(deflabel |How |How14009,617710
(deflabel |How |How14039,618845
(deflabel |The |The14069,620072
(deflabel |A |A14112,621325
(deflabel |Revisiting |Revisiting14133,622008
(deflabel |Evaluating |Evaluating14173,623393
(deflabel |Conversion||Conversion|14213,624334
(deflabel |The |The14248,625706
(deflabel |The |The14290,627059
(deflabel |Free |Free14319,628299
(deflabel |The |The14364,630016
(deflabel |Name |Name14408,632080
(deflabel |Perhaps||Perhaps|14417,632345
(deflabel |Suggested |Suggested14426,632582
(deflabel |Subsumption |Subsumption14450,633255
(deflabel |Flawed |Flawed14471,633834
(deflabel |The |The14495,634494
(deflabel |The |The14516,635236
(deflabel |The |The14544,636053
(deflabel |The |The14565,636585
(deflabel |The |The14576,636935
(deflabel |Nontautological |Nontautological14590,637399
(deflabel |Overview |Overview14602,637847
(deflabel |On |On14631,638929
(deflabel |Overview |Overview14643,639391
(deflabel |The |The14656,639992
(deflabel |The |The14675,640612
(deflabel |The |The14695,641262
(deflabel |Overview |Overview14716,641866
(deflabel |The |The14727,642400
(deflabel |The |The14745,642987
(deflabel |The |The14771,644049
(deflabel |The |The14792,644740
(deflabel |The |The14811,645381
(deflabel |The |The14833,646211
(deflabel |The |The14855,646986
(deflabel |The |The14877,647732
(deflabel |The |The14899,648451
(deflabel |The |The14922,649265
(deflabel |The |The14946,650139
(deflabel |The |The14966,650841
(deflabel |The |The14985,651474
(deflabel |Overview |Overview15004,652012
(deflabel |Overview |Overview15030,652792
(deflabel |Overview |Overview15039,653185
(deflabel |The |The15048,653548
(deflabel |The |The15066,654151
(deflabel |The |The15083,654690
(deflabel |The |The15099,655146
(deflabel |The |The15117,655685
(deflabel |Popping |Popping15145,656525
(deflabel |The |The15154,656904
(deflabel |The |The15163,657187
(deflabel |The |The15179,657932
(deflabel |Guiding |Guiding15195,658623
(deflabel |Rewrite |Rewrite15214,659193
(deflabel |You |You15247,660091
(deflabel |Using |Using15274,660984
(deflabel |Overview |Overview15292,661561
(deflabel |The |The15341,663196
(deflabel |The |The15363,664079
(deflabel |A |A15383,664785
(deflabel |The |The15416,665921
(deflabel |The |The15428,666297
(deflabel |ACL2 |ACL215451,666897
(deflabel |Hey |Hey15477,668020
(deflabel |Guards||Guards|15502,668970
(deflabel |About |About15540,670712
(deflabel |The |The15595,673490
(deflabel |About |About15643,675671
(deflabel |About |About15674,677183
(deflabel |Numbers |Numbers15722,679544
(deflabel |ACL2 |ACL215779,681855
(deflabel |ACL2 |ACL215799,682695
(deflabel |ACL2 |ACL215818,683544
(deflabel |ACL2 |ACL215867,686226
(deflabel |Guessing |Guessing15900,687737
(defconst *meta-level-function-problem-1**meta-level-function-problem-1*15945,689643
(defconst *meta-level-function-problem-1a**meta-level-function-problem-1a*15949,689842
(defconst *meta-level-function-problem-2**meta-level-function-problem-2*15953,690052
(defconst *meta-level-function-problem-3**meta-level-function-problem-3*15960,690406
(defstub mfc-ts mfc-ts15981,691645
(defun-one-output mfc-ts mfc-ts15984,691699
(defun congruence-rule-listp congruence-rule-listp16061,694760
(defun term-alistp-failure-msg term-alistp-failure-msg16074,695224
(defun-one-output mfc-rw-raw mfc-rw-raw16092,695943
(defstub mfc-rw mfc-rw16170,699764
(defstub mfc-rw+ mfc-rw+16183,700277
(defun-one-output mfc-rw mfc-rw16186,700353
(defun-one-output mfc-rw+ mfc-rw+16190,700486
(defstub mfc-ap mfc-ap16194,700629
(defun-one-output mfc-ap mfc-ap16197,700683
(defun all-vars-untrans all-vars-untrans16326,707541
(defmacro av av16337,707906
(defun trans-eval-lst trans-eval-lst16341,707966
(defun print-saved-output print-saved-output16347,708170
(defmacro pso pso16378,709543
(defmacro pso! pso!16391,709951
(defmacro set-saved-output set-saved-output16404,710368
(defmacro set-print-clause-ids set-print-clause-ids16477,714476
(defparameter *initial-cbd* *initial-cbd*16506,715533
(defun save-exec save-exec16508,715567

proof-checker-b.lisp,12878
(defmacro install-new-pc-meta-or-macro install-new-pc-meta-or-macro29,1205
(defun define-pc-meta-or-macro-fn define-pc-meta-or-macro-fn33,1408
(defmacro define-pc-meta define-pc-meta47,1877
(defmacro define-pc-macro define-pc-macro62,2447
(defmacro define-pc-atomic-macro define-pc-atomic-macro101,4045
(defmacro toggle-pc-macro toggle-pc-macro104,4177
(defmacro define-pc-primitive define-pc-primitive132,5187
(define-pc-primitive comment comment150,6147
(defun non-bounded-nums non-bounded-nums169,6562
(defun delete-by-position delete-by-position182,7029
(define-pc-primitive drop drop192,7419
(define-pc-meta lisp lisp232,8809
(define-pc-macro fail fail297,11388
(define-pc-macro illegal illegal319,11978
(defun chk-assumption-free-ttree-1 chk-assumption-free-ttree-1341,12656
(defun put-cdr-assoc-query-id put-cdr-assoc-query-id355,13150
(defun set-query-val set-query-val361,13404
(defmacro query-on-exit query-on-exit374,13815
(defun replay-query replay-query377,13913
(define-pc-meta exit exit390,14635
(define-pc-meta undo undo550,23206
(define-pc-meta restore restore603,25164
(defun print-commands print-commands634,26267
(defun make-pretty-start-instr make-pretty-start-instr649,26865
(defun raw-indexed-instrs raw-indexed-instrs659,27223
(define-pc-macro sequence-no-restore sequence-no-restore676,28208
(define-pc-macro skip skip679,28312
(defmacro define-pc-help define-pc-help692,28558
(defun evisc-indexed-instrs-1 evisc-indexed-instrs-1727,29901
(defun evisc-indexed-instrs-rec evisc-indexed-instrs-rec739,30444
(defun mark-unfinished-instrs mark-unfinished-instrs759,31418
(defun evisc-indexed-instrs evisc-indexed-instrs775,32215
(define-pc-help commands commands781,32483
(define-pc-macro comm comm823,34118
(defun promote-guts promote-guts879,36434
(define-pc-primitive promote promote891,36810
(defun remove-by-indices remove-by-indices930,38507
(define-pc-macro print print942,39073
(defun bounded-integer-listp bounded-integer-listp969,40019
(defun fetch-term-and-cl fetch-term-and-cl982,40434
(defun fetch-term fetch-term1024,42575
(defun governors governors1034,42902
(defun term-id-iff term-id-iff1042,43194
(defmacro ? ?1090,45471
(defstub ?-fn ?-fn1093,45503
(defun abbreviations-alist abbreviations-alist1100,45713
(defun chk-?s chk-?s1109,45976
(defun chk-?s-lst chk-?s-lst1130,46854
(defun remove-?s remove-?s1138,47043
(defun translate-abb translate-abb1143,47230
(defmacro trans0 trans01156,47561
(defun p-body p-body1159,47674
(define-pc-help p p1167,48026
(define-pc-help pp pp1190,48722
(defun take-by-indices take-by-indices1209,49244
(defun print-hyps print-hyps1218,49613
(defun some-> some->1231,50240
(defun print-hyps-top print-hyps-top1240,50487
(defun print-governors-top print-governors-top1249,50852
(defun pair-indices pair-indices1258,51211
(define-pc-macro hyps hyps1274,51879
(define-pc-primitive demote demote1390,57175
(defun all-keywords-p all-keywords-p1449,59624
(defun pair-keywords pair-keywords1455,59784
(defun null-pool null-pool1470,60421
(defun initial-pspv initial-pspv1477,60588
(defun pc-prove pc-prove1484,60863
(defun sublis-equal sublis-equal1504,61828
(defun abbreviations-alist-? abbreviations-alist-?1514,62112
(defun find-?-fn find-?-fn1524,62515
(defun unproved-pc-prove-terms unproved-pc-prove-terms1534,62823
(defun prover-call prover-call1537,62911
(defun make-new-goals make-new-goals1610,67232
(defun same-goal same-goal1622,67744
(defun remove-byes-from-tag-tree remove-byes-from-tag-tree1628,67940
(define-pc-primitive prove prove1644,68578
(defun add-string-val-pair-to-string-val-alist add-string-val-pair-to-string-val-alist1707,71373
(defconst *bash-skip-forcing-round-hints**bash-skip-forcing-round-hints*1717,71838
(define-pc-atomic-macro bash bash1735,72348
(define-pc-primitive dive dive1786,74363
(define-pc-atomic-macro split split1847,76790
(define-pc-primitive add-abbreviation add-abbreviation1889,78514
(defun not-in-domain-eq not-in-domain-eq1955,81537
(define-pc-primitive remove-abbreviations remove-abbreviations1965,81861
(defun print-abbreviations print-abbreviations2007,83590
(define-pc-help show-abbreviations show-abbreviations2051,85274
(defun drop-from-end drop-from-end2086,86627
(define-pc-primitive up up2093,86867
(define-pc-atomic-macro top top2133,88626
(defmacro expand-address-recurseexpand-address-recurse2153,89342
(defmacro dive-once-more-error dive-once-more-error2168,89893
(defun abbreviation-raw-term-p abbreviation-raw-term-p2175,90166
(defmacro addr-recur addr-recur2179,90244
(defun or-addr or-addr2194,90765
(defun and-addr and-addr2266,94473
(defmacro add-dive-into-macro add-dive-into-macro2335,97807
(defmacro remove-dive-into-macro remove-dive-into-macro2350,98255
(defun dive-into-macros-table dive-into-macros-table2366,98796
(defun expand-address expand-address2410,100587
(defmacro dv-error dv-error2778,119147
(define-pc-atomic-macro dv dv2784,119354
(defun deposit-term deposit-term2852,121857
(defun deposit-term-lst deposit-term-lst2862,122210
(defun geneqv-at-subterm geneqv-at-subterm2880,122925
(defun geneqv-at-subterm-top geneqv-at-subterm-top2899,123696
(defun subst-expr1-okp subst-expr1-okp2910,124016
(defun subst-expr1-ok-listp subst-expr1-ok-listp2919,124384
(defun maybe-truncate-current-address maybe-truncate-current-address2946,125480
(defun deposit-term-in-goal deposit-term-in-goal2973,126674
(defun split-implies split-implies2992,127437
(defun equiv-refinementp equiv-refinementp3005,127900
(defun find-equivalence-hyp-term find-equivalence-hyp-term3009,128041
(defun flatten-ands-in-lit-lst flatten-ands-in-lit-lst3030,128929
(define-pc-primitive equiv equiv3036,129081
(define-pc-primitive casesplitcasesplit3148,134480
(define-pc-macro top? top?3245,138943
(define-pc-macro contrapose-last contrapose-last3251,139054
(define-pc-macro drop-last drop-last3259,139327
(define-pc-macro drop-conc drop-conc3267,139582
(define-pc-atomic-macro claim claim3270,139668
(define-pc-atomic-macro induct induct3337,142650
(defun print-on-separate-lines print-on-separate-lines3376,144109
(define-pc-help goals goals3386,144522
(defun modified-error-triple-for-sequence modified-error-triple-for-sequence3405,145075
(define-pc-meta sequencesequence3445,147102
(define-pc-macro negate negate3570,153723
(define-pc-macro succeed succeed3592,154380
(define-pc-macro do-all do-all3614,155002
(define-pc-macro do-strict do-strict3641,155944
(define-pc-macro do-all-no-prompt do-all-no-prompt3659,156481
(define-pc-macro th th3677,157051
(define-pc-macro protect protect3709,158286
(defun extract-goal extract-goal3728,158888
(define-pc-primitive change-goal change-goal3738,159268
(define-pc-macro cg cg3790,161472
(defun change-by-position change-by-position3806,161881
(define-pc-primitive contrapose contrapose3816,162245
(define-pc-macro contradict contradict3856,164038
(define-pc-atomic-macro pro pro3865,164213
(define-pc-atomic-macro nx nx3880,164588
(define-pc-atomic-macro bk bk3905,165441
(define-pc-help p-top p-top3936,166532
(define-pc-macro repeat repeat3970,167929
(define-pc-macro repeat-rec repeat-rec3988,168401
(defmacro define-pc-bind define-pc-bind3996,168561
(define-pc-bind quietquiet4011,169208
(define-pc-bind noise noise4029,169616
(defun find-equivalence-hyp-term-no-target find-equivalence-hyp-term-no-target4048,170260
(define-pc-atomic-macro if-not-proved if-not-proved4074,171524
(define-pc-atomic-macro = =4093,172213
(define-pc-macro set-success set-success4295,182246
(define-pc-macro orelse orelse4298,182335
(defun applicable-rewrite-rules applicable-rewrite-rules4318,182930
(define-pc-help show-rewrites show-rewrites4337,183895
(defun translate-subst-abb1 translate-subst-abb14374,185645
(defun single-valued-symbolp-alistp single-valued-symbolp-alistp4396,186754
(defun check-cars-are-variables check-cars-are-variables4403,186976
(defun translate-subst-abb translate-subst-abb4422,187744
(defun intersection-domains intersection-domains4453,189018
(defun make-rewrite-instr make-rewrite-instr4463,189339
(define-pc-primitive rewrite rewrite4470,189603
(defun pc-help-fn pc-help-fn4713,202735
(defmacro state-only state-only4751,204552
(define-pc-help help help4757,204686
(defun pc-help!-fn pc-help!-fn4814,206940
(define-pc-help help! help!4852,208789
(define-pc-macro help-long help-long4866,209291
(define-pc-help more more4877,209559
(define-pc-help more! more!4889,209816
(defun pc-rewrite*pc-rewrite*4900,210128
(defun make-goals-from-assumptions make-goals-from-assumptions4942,212295
(defun make-new-goals-from-assumptions make-new-goals-from-assumptions4955,212871
(defconst *default-s-repeat-limit* *default-s-repeat-limit*4965,213192
(define-pc-primitive s s4967,213232
(defun build-pc-enabled-structure-from-ens build-pc-enabled-structure-from-ens5200,224764
(define-pc-primitive in-theory in-theory5227,226023
(define-pc-atomic-macro s-prop s-prop5319,230171
(define-pc-atomic-macro x x5342,230930
(defun remove-trivial-lits-raw remove-trivial-lits-raw5401,233261
(define-pc-primitive expand expand5422,234374
(define-pc-atomic-macro x-dumb x-dumb5519,238067
(define-pc-macro bookmark bookmark5534,238479
(defun change-last change-last5555,239205
(defun assign-event-name-and-rule-classes assign-event-name-and-rule-classes5563,239382
(define-pc-macro save save5579,240230
(defmacro retrieve retrieve5633,242554
(define-pc-macro retrieve retrieve5651,242958
(defun unsave-fn unsave-fn5677,243983
(defmacro unsave unsave5681,244091
(define-pc-help unsave unsave5699,244463
(defun retrieve-fn retrieve-fn5732,245825
(defun print-all-goals print-all-goals5776,247753
(define-pc-help print-all-goals print-all-goals5782,247910
(defmacro print-conc print-conc5794,248209
(defun print-all-concs print-all-concs5806,248691
(define-pc-help print-all-concs print-all-concs5813,248897
(defun gen-var-marker gen-var-marker5826,249234
(defun translate-generalize-alist-1 translate-generalize-alist-15831,249323
(defun non-gen-var-markers non-gen-var-markers5886,251408
(defun find-duplicate-generalize-entries find-duplicate-generalize-entries5895,251696
(defun translate-generalize-alist-2 translate-generalize-alist-25904,252009
(defun translate-generalize-alist translate-generalize-alist5915,252476
(defun all-vars-goals all-vars-goals5933,253399
(defun pc-state-vars pc-state-vars5940,253654
(define-pc-primitive generalize generalize5944,253839
(define-pc-atomic-macro use use6011,256691
(defun fromto fromto6039,257642
(define-pc-atomic-macro retain retain6045,257781
(define-pc-atomic-macro reduce reduce6079,258911
(define-pc-macro run-instr-on-goal run-instr-on-goal6123,260557
(defun run-instr-on-goals-guts run-instr-on-goals-guts6134,260813
(define-pc-macro run-instr-on-new-goals run-instr-on-new-goals6141,261062
(define-pc-macro then then6154,261526
(defun print-help-separator print-help-separator6178,262348
(defun print-pc-help-rec print-pc-help-rec6183,262480
(defun print-all-pc-help-fn print-all-pc-help-fn6195,262785
(defmacro print-all-pc-help print-all-pc-help6211,263469
(define-pc-macro nil nil6214,263581
(define-pc-atomic-macro free free6242,264616
(define-pc-macro replay replay6265,265284
(defun instr-name instr-name6309,267209
(defun pc-free-instr-p pc-free-instr-p6315,267345
(defun find-possible-put find-possible-put6320,267514
(define-pc-macro put put6332,268000
(define-pc-macro reduce-by-induction reduce-by-induction6374,269812
(define-pc-macro sr sr6416,271407
(define-pc-macro r r6431,271681
(define-pc-atomic-macro sl sl6443,271889
(define-pc-atomic-macro elim elim6475,273160
(define-pc-macro ex ex6494,273804
(define-pc-help type-alist type-alist6509,274123
(define-pc-help print-main print-main6591,277734
(define-pc-macro pso pso6603,277969
(define-pc-macro pso! pso!6624,278780
(define-pc-macro acl2-wrap acl2-wrap6646,279667
(defmacro acl2-wrap acl2-wrap6662,280030
(define-pc-macro check-proved-goal check-proved-goal6669,280180
(define-pc-macro check-proved check-proved6681,280526
(define-pc-atomic-macro forwardchain forwardchain6688,280714
(define-pc-atomic-macro bdd bdd6772,283913
(define-pc-macro runes runes6796,284739
(define-pc-macro lemmas-used lemmas-used6817,285549
(defun goal-terms goal-terms6825,285720
(defun wrap1-aux1 wrap1-aux16836,286021
(defun wrap1-aux2 wrap1-aux26857,286919
(define-pc-primitive wrap1 wrap16872,287520
(define-pc-atomic-macro wrap wrap6950,290800
(define-pc-atomic-macro wrap-induct wrap-induct6995,292702

tutorial.lisp,993
(deflabel ACL2-TutorialACL2-Tutorial51,1888
(deflabel IntroductionIntroduction75,2884
(deflabel Tutorial-ExamplesTutorial-Examples707,32835
(deflabel solution-to-simple-examplesolution-to-simple-example752,34327
(deflabel Tutorial1-Towers-of-HanoiTutorial1-Towers-of-Hanoi808,36278
(deflabel Tutorial2-Eights-ProblemTutorial2-Eights-Problem1058,45093
(deflabel Tutorial3-Phonebook-ExampleTutorial3-Phonebook-Example1187,49269
(deflabel Tutorial4-Defun-Sk-ExampleTutorial4-Defun-Sk-Example2016,81624
(deflabel Tutorial5-Miscellaneous-ExamplesTutorial5-Miscellaneous-Examples2115,85438
(deflabel file-reading-examplefile-reading-example2125,85713
(deflabel guard-exampleguard-example2179,87907
(deflabel mutual-recursion-proof-examplemutual-recursion-proof-example2487,96956
(deflabel functional-instantiation-examplefunctional-instantiation-example2615,101946
(deflabel StartupStartup2729,105383
(deflabel TidbitsTidbits2814,108262
(deflabel TipsTips2898,111829

interface-raw.lisp,8037
(defmacro foo foo204,10525
(defun bar bar206,10577
(defun my-endp-0 my-endp-0270,12615
(defmacro bad-macro bad-macro273,12682
(defun my-eq my-eq324,14622
(defmacro bad-macro bad-macro329,14730
(defun bad-fn bad-fn336,14848
(defthm bad-thmbad-thm339,14881
(defthm very-badvery-bad350,15032
(defun mac-fn mac-fn384,16281
(defmacro mac mac385,16337
(defun bar bar386,16367
(defun bar bar388,16423
(defun foo foo400,16723
(defun <*1*fn> <*1*fn>473,19979
(defconst *oneify-primitives**oneify-primitives*680,27670
(defun-*1* acl2-numberp acl2-numberp726,29435
(defun-*1* binary-* binary-*729,29479
(defun-*1* binary-+ binary-+737,29663
(defun-*1* unary-- unary--748,29937
(defun-*1* unary-/ unary-/754,30046
(defun-*1* < <760,30175
(defun-*1* apply apply785,31172
(defun-*1* bad-atom<= bad-atom<=789,31294
(defun-*1* car car799,31620
(defun-*1* cdr cdr807,31723
(defun-*1* char-code char-code815,31826
(defun-*1* characterp characterp820,31920
(defun-*1* code-char code-char823,31965
(defun-*1* complex complex830,32135
(defun-*1* complex-rationalp complex-rationalp834,32299
(defun-*1* complexp complexp840,32440
(defun-*1* coerce coerce843,32481
(defun-*1* cons cons857,32811
(defun-*1* consp consp860,32848
(defun-*1* denominator denominator863,32883
(defun-*1* equal equal868,32982
(defun-*1* floor1 floor1875,33164
(defun-*1* if if880,33249
(defun-*1* imagpart imagpart885,33450
(defun-*1* integerp integerp890,33538
(defun-*1* intern-in-package-of-symbol intern-in-package-of-symbol893,33579
(defun-*1* pkg-witness pkg-witness901,33841
(defun-*1* numerator numerator911,34260
(defun-*1* rationalp rationalp916,34353
(defun-*1* realp realp922,34472
(defun-*1* realpart realpart925,34507
(defun-*1* stringp stringp930,34595
(defun-*1* symbol-name symbol-name933,34634
(defun-*1* symbol-package-name symbol-package-name938,34732
(defun-*1* symbolp symbolp943,34854
(defun standard-numberp standard-numberp959,35508
(defun-*1* standard-numberp standard-numberp962,35557
(defun standard-part standard-part965,35610
(defun-*1* standard-part standard-part968,35647
(defun i-large-integer i-large-integer973,35745
(defun-*1* i-large-integer i-large-integer976,35839
(defconst *macros-for-nonexpansion-in-raw-lisp**macros-for-nonexpansion-in-raw-lisp*981,35940
(defun-one-output macroexpand1! macroexpand1!1036,37889
(defvar *acl2-gentemp-counter* *acl2-gentemp-counter*1042,38059
(defun-one-output acl2-gentemp acl2-gentemp1043,38093
(defun-one-output oneify oneify1055,38533
(defun-one-output oneify-lst oneify-lst1159,42161
(defun-one-output select-stobj select-stobj1167,42344
(defun-one-output super-defstobj-wart-stobjs-in super-defstobj-wart-stobjs-in1172,42528
(defun-one-output oneify-fail-form oneify-fail-form1180,42865
(defun-one-output get-declared-stobjs get-declared-stobjs1196,43426
(defun-one-output create-live-user-stobjp-test create-live-user-stobjp-test1210,43949
(defun-one-output warn-for-guard-body warn-for-guard-body1220,44267
(defun-one-output oneify-cltl-code oneify-cltl-code1232,44852
(defvar *saved-raw-prompt* *saved-raw-prompt*1682,66112
(defvar *saved-raw-prompt-p* *saved-raw-prompt-p*1683,66144
(defun-one-output install-new-raw-prompt install-new-raw-prompt1688,66197
(defun-one-output install-old-raw-prompt install-old-raw-prompt1695,66467
(defun-one-output install-new-raw-prompt install-new-raw-prompt1705,66734
(defun-one-output install-old-raw-prompt install-old-raw-prompt1716,67222
(defun-one-output install-new-raw-prompt install-new-raw-prompt1726,67496
(defun-one-output install-old-raw-prompt install-old-raw-prompt1733,67727
(defun-one-output install-new-raw-prompt install-new-raw-prompt1740,67861
(defun-one-output install-old-raw-prompt install-old-raw-prompt1752,68413
(defun-one-output install-new-raw-prompt install-new-raw-prompt1764,68783
(defun-one-output install-old-raw-prompt install-old-raw-prompt1781,69625
(defun-one-output install-new-raw-prompt install-new-raw-prompt1799,70254
(defun-one-output install-old-raw-prompt install-old-raw-prompt1802,70306
(defmacro unbound-cmu-macro-function unbound-cmu-macro-function1970,79573
(defconst *unbound-cmu-macro-function**unbound-cmu-macro-function*1976,79739
(defun-one-output fmakunbound! fmakunbound!1979,79827
(defmacro maybe-untrace maybe-untrace1992,80185
(defun-one-output maybe-push-undo-stack maybe-push-undo-stack1999,80426
(defun-one-output maybe-pop-undo-stack maybe-pop-undo-stack2098,85038
(defun-one-output flush-undo-stack flush-undo-stack2111,85379
(defparameter *current-acl2-world-key-ordering**current-acl2-world-key-ordering*2431,101550
(defun-one-output key-lesseqp key-lesseqp2455,102279
(defun-one-output merge-into-alist merge-into-alist2464,102555
(defun-one-output destructive-push-assoc destructive-push-assoc2476,103126
(defun-one-output destructive-pop-assoc destructive-pop-assoc2493,103996
(defun-one-output remove-current-acl2-world-key remove-current-acl2-world-key2499,104191
(defun-one-output add-trip add-trip2507,104489
(defun-one-output undo-trip undo-trip3006,129137
(defun-one-output flush-trip flush-trip3043,130601
(defvar *bad-wrld*)*bad-wrld*3070,131573
(defun check-acl2-world-invariant check-acl2-world-invariant3072,131594
(defparameter *known-worlds* *known-worlds*3090,132392
(defun-one-output extend-world1 extend-world13092,132427
(defun-one-output retract-world1 retract-world13205,137400
(defun-one-output recover-world1 recover-world13301,141823
(defun-one-output recover-world recover-world3312,142293
(defmacro special-form-or-op-p special-form-or-op-p3412,147649
(defun-one-output virginp virginp3435,148522
(defun-one-output chk-virgin2 chk-virgin23453,149300
(defun-one-output chk-package-reincarnation-import-restrictions2 chk-package-reincarnation-import-restrictions23520,152522
(defvar user::*acl2-keep-tmp-files* user::*acl2-keep-tmp-files*3573,154255
(defun-one-output enter-boot-strap-mode enter-boot-strap-mode3575,154297
(defun-one-output move-current-acl2-world-key-to-front move-current-acl2-world-key-to-front3661,158264
(defun-one-output exit-boot-strap-mode exit-boot-strap-mode3701,160761
(defun-one-output ld-alist ld-alist3722,161611
(defun enter-boot-strap-pass-2 enter-boot-strap-pass-23745,162430
(defconst *acl2-pass-2-files**acl2-pass-2-files*3765,163134
(defun check-built-in-constants check-built-in-constants3768,163180
(defun-one-output check-none-ideal check-none-ideal3847,167552
(defun check-state-globals-initialized check-state-globals-initialized3886,169110
(defun-one-output check-acl2-initialization check-acl2-initialization3903,169723
(defun initialize-acl2 initialize-acl23909,169932
(defun lp lp4210,183218
(defmacro lp! lp!4433,193669
(defun convert-book-name-to-compiled-name convert-book-name-to-compiled-name4439,193836
(defun acl2-compile-file acl2-compile-file4450,194286
(defun-one-output delete-compiled-file delete-compiled-file4516,197101
(defun unfound-compiled-file unfound-compiled-file4535,198111
(defun load-compiled-file-if-more-recent load-compiled-file-if-more-recent4587,200311
(defun compile-uncompiled-defuns compile-uncompiled-defuns4642,202857
(defun compile-uncompiled-*1*-defuns compile-uncompiled-*1*-defuns4784,208801
(defun compile-certified-file compile-certified-file4986,218219
(defun-one-output enabled-structurep enabled-structurep5027,220041
(defun-one-output rcnstp rcnstp5050,221028
(defvar *trace-alist**trace-alist*5066,221442
(defun-one-output assoc-eq-trace-alist assoc-eq-trace-alist5069,221509
(defun-one-output stobj-print-symbol stobj-print-symbol5077,221734
(defun-one-output trace-hide-world-and-state trace-hide-world-and-state5090,222313
(defun-one-output saved-build-date-string saved-build-date-string5140,224314
(defun-one-output get-stobjs-out-for-declare-form get-stobjs-out-for-declare-form5152,224630

defpkgs.lisp,40
(defpkg "ACL2-USER""ACL2-USER"40,1889
