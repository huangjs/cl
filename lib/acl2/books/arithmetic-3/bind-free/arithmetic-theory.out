This is SBCL 1.0.1.34, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 3.1 built January 26, 2007  15:12:42.
 Copyright (C) 2006  University of Texas at Austin
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the GNU General Public License.

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-3-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

 NOTE!!  Proof trees are disabled in ACL2.  To enable them in emacs,
 look under the ACL2 source directory in interface/emacs/README.doc; 
 and, to turn on proof trees, execute :START-PROOF-TREE in the ACL2 
 command loop.   Look in the ACL2 documentation under PROOF-TREE.

ACL2 Version 3.1.  Level 1.  Cbd 
"/Users/huangjianshi/src/acl2-sources/books/arithmetic-3/bind-free/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2 !>
Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* 
#<PACKAGE "ACL2">
* 
ACL2 Version 3.1.  Level 1.  Cbd 
"/Users/huangjianshi/src/acl2-sources/books/arithmetic-3/bind-free/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2 !> (PROVE PROOF-TREE
        WARNING OBSERVATION EVENT EXPANSION)
ACL2 !>
Summary
Form:  ( INCLUDE-BOOK "basic" ...)
Rules: NIL
Warnings:  None
Time:  0.11 seconds (prove: 0.00, print: 0.00, other: 0.11)
"/Users/huangjianshi/src/acl2-sources/books/arithmetic-3/bind-free/basic.lisp"

Summary
Form:  ( INCLUDE-BOOK "common" ...)
Rules: NIL
Warnings:  None
Time:  0.15 seconds (prove: 0.00, print: 0.00, other: 0.15)
"/Users/huangjianshi/src/acl2-sources/books/arithmetic-3/bind-free/common.lisp"

Summary
Form:  ( INCLUDE-BOOK "building-blocks" ...)
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
:REDUNDANT

Summary
Form:  ( INCLUDE-BOOK "collect" ...)
Rules: NIL
Warnings:  None
Time:  0.02 seconds (prove: 0.00, print: 0.00, other: 0.02)
"/Users/huangjianshi/src/acl2-sources/books/arithmetic-3/bind-free/collect.lisp"

Summary
Form:  ( IN-THEORY (ENABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2033

Summary
Form:  ( IN-THEORY (ENABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2034

Summary
Form:  ( DEFUN ARITH-BUBBLE-DOWN ...)
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN

Summary
Form:  ( DEFTHM TEMP510 ...)
Rules: ((:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
TEMP510

Summary
Form:  ( TABLE ACL2-DEFAULTS-TABLE ...)
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ACL2-DEFAULTS-TABLE

Summary
Form:  ( DEFUN ARITH-FIND-MATCHING-FACTOR-GATHER-EXPONENTS ...)
Rules: ((:DEFINITION ACL2-COUNT)
        (:DEFINITION ARITH-MATCHING-FACTOR-GATHER-EXPONENTS-P)
        (:DEFINITION ARITH-MATCHING-FACTOR-GATHER-EXPONENTS-PATTERNS-P)
        (:DEFINITION EQ)
        (:DEFINITION FN-SYMB)
        (:DEFINITION NOT)
        (:DEFINITION O-FINP)
        (:DEFINITION O<)
        (:DEFINITION PSEUDO-TERM-LISTP)
        (:DEFINITION PSEUDO-TERMP)
        (:DEFINITION SYNP)
        (:DEFINITION TRUE-LISTP)
        (:ELIM CAR-CDR-ELIM)
        (:EXECUTABLE-COUNTERPART ACL2-COUNT)
        (:EXECUTABLE-COUNTERPART ARITH-FACTOR-PATTERN-GATHER-EXPONENTS)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:EXECUTABLE-COUNTERPART CAR)
        (:EXECUTABLE-COUNTERPART CDR)
        (:EXECUTABLE-COUNTERPART CONSP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART PSEUDO-TERMP)
        (:EXECUTABLE-COUNTERPART SYMBOLP)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(+ 0 x)|)
        (:REWRITE |(+ c (+ d x))|)
        (:REWRITE |(+ y (+ x z))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(< (+ c x) (+ d y))|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE CAR-CONS)
        (:REWRITE CDR-CONS)
        (:TYPE-PRESCRIPTION ACL2-COUNT)
        (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
Warnings:  None
Time:  0.51 seconds (prove: 0.50, print: 0.00, other: 0.01)
ARITH-FIND-MATCHING-FACTOR-GATHER-EXPONENTS

Summary
Form:  ( DEFTHM ARITH-NORMALIZE-FACTORS-GATHER-EXPONENTS ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-NORMALIZE-FACTORS-GATHER-EXPONENTS

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2042

Summary
Form:  ( DEFUN ARITH-FIND-MATCHING-FACTOR-SCATTER-EXPONENTS ...)
Rules: ((:DEFINITION ACL2-COUNT)
        (:DEFINITION ARITH-MATCHING-FACTOR-SCATTER-EXPONENTS-P)
        (:DEFINITION ARITH-MATCHING-FACTOR-SCATTER-EXPONENTS-PATTERNS-P)
        (:DEFINITION EQ)
        (:DEFINITION FN-SYMB)
        (:DEFINITION NOT)
        (:DEFINITION O-FINP)
        (:DEFINITION O<)
        (:DEFINITION PSEUDO-TERM-LISTP)
        (:DEFINITION PSEUDO-TERMP)
        (:DEFINITION SYNP)
        (:DEFINITION TRUE-LISTP)
        (:ELIM CAR-CDR-ELIM)
        (:EXECUTABLE-COUNTERPART ACL2-COUNT)
        (:EXECUTABLE-COUNTERPART ARITH-FACTOR-PATTERN-SCATTER-EXPONENTS)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:EXECUTABLE-COUNTERPART CAR)
        (:EXECUTABLE-COUNTERPART CDR)
        (:EXECUTABLE-COUNTERPART CONSP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART PSEUDO-TERMP)
        (:EXECUTABLE-COUNTERPART SYMBOLP)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(+ 0 x)|)
        (:REWRITE |(+ c (+ d x))|)
        (:REWRITE |(+ y (+ x z))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(< (+ c x) (+ d y))|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE CAR-CONS)
        (:REWRITE CDR-CONS)
        (:REWRITE DEFAULT-CAR)
        (:REWRITE DEFAULT-CDR)
        (:TYPE-PRESCRIPTION ACL2-COUNT)
        (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
Warnings:  None
Time:  1.10 seconds (prove: 1.09, print: 0.00, other: 0.01)
ARITH-FIND-MATCHING-FACTOR-SCATTER-EXPONENTS

Summary
Form:  ( DEFTHM ARITH-NORMALIZE-FACTORS-SCATTER-EXPONENTS ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-NORMALIZE-FACTORS-SCATTER-EXPONENTS

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2046

Summary
Form:  ( DEFUN ARITH-FIND-MATCHING-ADDEND ...)
Rules: ((:DEFINITION ACL2-COUNT)
        (:DEFINITION EQ)
        (:DEFINITION FN-SYMB)
        (:DEFINITION MATCHING-ADDEND-P)
        (:DEFINITION MATCHING-ADDEND-PATTERNS-P)
        (:DEFINITION NOT)
        (:DEFINITION O-FINP)
        (:DEFINITION O<)
        (:DEFINITION PSEUDO-TERM-LISTP)
        (:DEFINITION PSEUDO-TERMP)
        (:DEFINITION QUOTEP)
        (:DEFINITION SYNP)
        (:DEFINITION TRUE-LISTP)
        (:ELIM CAR-CDR-ELIM)
        (:EXECUTABLE-COUNTERPART ACL2-COUNT)
        (:EXECUTABLE-COUNTERPART ADDEND-PATTERN)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:EXECUTABLE-COUNTERPART CAR)
        (:EXECUTABLE-COUNTERPART CDR)
        (:EXECUTABLE-COUNTERPART CONSP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART PSEUDO-TERMP)
        (:EXECUTABLE-COUNTERPART SYMBOLP)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:FORWARD-CHAINING PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP)
        (:REWRITE |(+ 0 x)|)
        (:REWRITE |(+ c (+ d x))|)
        (:REWRITE |(+ y (+ x z))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(< (+ c x) (+ d y))|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE CAR-CONS)
        (:REWRITE CDR-CONS)
        (:TYPE-PRESCRIPTION ACL2-COUNT)
        (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
Warnings:  None
Time:  0.07 seconds (prove: 0.06, print: 0.00, other: 0.01)
ARITH-FIND-MATCHING-ADDEND

Summary
Form:  ( DEFTHM ARITH-NORMALIZE-ADDENDS ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-NORMALIZE-ADDENDS

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2050

Summary
Form:  ( DEFTHM |arith (- (- x))| ...)
Rules: ((:FAKE-RUNE-FOR-LINEAR NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (- (- x))|

Summary
Form:  ( DEFTHM |arith (- (+ x y))| ...)
Rules: ((:REWRITE |(- (+ x y))|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (- (+ x y))|

Summary
Form:  ( DEFTHM |arith (* y x)| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* y x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* y x)|

Summary
Form:  ( DEFTHM |arith (* y (* x z))| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* y (* x z))|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* y (* x z))|

Summary
Form:  ( DEFTHM |arith (* (* x y) z)| ...)
Rules: ((:REWRITE |(* (* x y) z)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* (* x y) z)|

Summary
Form:  ( DEFTHM |arith (* 1 x)| ...)
Rules: ((:DEFINITION FIX)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE UNICITY-OF-1))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* 1 x)|

Summary
Form:  ( DEFTHM |arith (* x 1)| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* 1 x)|)
        (:REWRITE |arith (* y x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* x 1)|

Summary
Form:  ( DEFTHM |arith (* 0 x)| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* 0 x)|

Summary
Form:  ( DEFTHM |arith (* x 0)| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* x 0)|

Summary
Form:  ( DEFTHM |arith (* -1 x)| ...)
Rules: ((:REWRITE |(* -1 x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* -1 x)|

Summary
Form:  ( DEFTHM |arith (/ (/ x))| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(/ (/ x))|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (/ (/ x))|

Summary
Form:  ( DEFTHM |arith (/ (* x y))| ...)
Rules: ((:REWRITE |(/ (* x y))|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (/ (* x y))|

Summary
Form:  ( DEFTHM |arith (* x (+ y z))| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* x (+ y z))|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* x (+ y z))|

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2062

Summary
Form:  ( DEFTHM |arith (* (+ x y) z)| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* x (+ y z))|)
        (:REWRITE |arith (* y x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* (+ x y) z)|

Summary
Form:  ( DEFTHM |arith (* x (- y))| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* x (- y))|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* x (- y))|

Summary
Form:  ( DEFTHM |arith (* (- x) y)| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* y x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* (- x) y)|

Summary
Form:  ( DEFTHM |arith (- (* c x))| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* (- x) y)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (- (* c x))|

Summary
Form:  ( DEFTHM |arith (/ (- x))| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(/ (- x))|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (/ (- x))|

Summary
Form:  ( DEFTHM |arith (expt (+ x y) 2)| ...)
Rules: ((:DEFINITION FIX)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART <)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(+ (+ x y) z)|)
        (:REWRITE |(+ (if a b c) x)|)
        (:REWRITE |(+ 0 x)|)
        (:REWRITE |(+ x (if a b c))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(equal (* x y) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt x 0)|)
        (:REWRITE |(expt x c)|)
        (:REWRITE DEFAULT-*-1)
        (:REWRITE DEFAULT-*-2)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* (+ x y) z)|)
        (:REWRITE |arith (* x (+ y z))|)
        (:REWRITE |arith (* x 0)|)
        (:REWRITE |arith (* y x)|))
Warnings:  None
Time:  0.01 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt (+ x y) 2)|

Summary
Form:  ( DEFTHM |arith (expt (+ x y) 3)| ...)
Rules: ((:DEFINITION FIX)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART <)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(+ (+ x y) z)|)
        (:REWRITE |(+ (if a b c) x)|)
        (:REWRITE |(+ 0 x)|)
        (:REWRITE |(+ x (if a b c))|)
        (:REWRITE |(+ y (+ x z))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt x 0)|)
        (:REWRITE |(expt x c)|)
        (:REWRITE DEFAULT-*-1)
        (:REWRITE DEFAULT-*-2)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* (+ x y) z)|)
        (:REWRITE |arith (* x (+ y z))|)
        (:REWRITE |arith (* x 0)|)
        (:REWRITE |arith (* y (* x z))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (expt (+ x y) 2)|))
Warnings:  None
Time:  0.02 seconds (prove: 0.02, print: 0.00, other: 0.00)
|arith (expt (+ x y) 3)|

Summary
Form:  ( DEFTHM |arith (* c (* d x))| ...)
Rules: ((:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:REWRITE |arith (* (* x y) z)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* c (* d x))|

Summary
Form:  ( DEFTHM |arith (expt x 0)| ...)
Rules: ((:EXECUTABLE-COUNTERPART EQUAL)
        (:REWRITE |(expt x 0)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt x 0)|

Summary
Form:  ( DEFTHM |arith (expt 0 n)| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt 0 n)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt 0 n)|

Summary
Form:  ( DEFTHM |arith (expt x 1)| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART <)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt x c)|)
        (:REWRITE |arith (* x 1)|)
        (:REWRITE |arith (expt x 0)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt x 1)|

Summary
Form:  ( DEFTHM |arith (expt 1 n)| ...)
Rules: ((:EXECUTABLE-COUNTERPART EQUAL)
        (:REWRITE |(expt 1 n)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt 1 n)|

Summary
Form:  ( DEFTHM |arith (expt x -1)| ...)
Rules: ((:REWRITE |(expt x -1)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt x -1)|

Summary
Form:  ( DEFTHM |arith (expt (/ x) n)| ...)
Rules: ((:REWRITE |(expt (/ x) n)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt (/ x) n)|

Summary
Form:  ( DEFTHM |arith (expt x (- n))| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt x (- n))|)
        (:REWRITE DEFAULT-EXPT-2)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (/ (/ x))|)
        (:REWRITE |arith (expt x 0)|)
        (:TYPE-PRESCRIPTION EXPT))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (expt x (- n))|

Summary
Form:  ( DEFTHM |arith (expt 1/c n)| ...)
Rules: ((:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE DEFAULT-EXPT-2)
        (:REWRITE |arith (/ (/ x))|)
        (:REWRITE |arith (expt (/ x) n)|)
        (:TYPE-PRESCRIPTION EXPT))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt 1/c n)|

Summary
Form:  ( DEFTHM |arith (expt 4 n)| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt 2^i n)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt 4 n)|

Summary
Form:  ( DEFTHM |arith (expt 8 n)| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt 2^i n)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt 8 n)|

Summary
Form:  ( DEFTHM |arith (expt 16 n)| ...)
Rules: ((:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt 2^i n)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt 16 n)|

Summary
Form:  ( DEFTHM |arith (expt (* x y) n)| ...)
Rules: ((:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt (* x y) n)|)
        (:REWRITE DEFAULT-EXPT-2))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt (* x y) n)|

Summary
Form:  ( DEFTHM |arith (expt (expt x m) n)| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt (expt x m) n)|))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (expt (expt x m) n)|

Summary
Form:  ( DEFTHM |arith (expt x (+ m n))| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(expt x (+ m n))|)
        (:REWRITE TEMP510))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (expt x (+ m n))|

Summary
Form:  ( DEFTHM |arith (expt x (+ m n)) non-zero x| ...)
Rules: ((:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE TEMP510)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (- n))|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (expt x (+ m n)) non-zero x|

Summary
Form:  ( DEFTHM |arith (fix x)| ...)
Rules: ((:DEFINITION FIX)
        (:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (fix x)|

Summary
Form:  ( DEFTHM |arith (* (numerator x) (/ (denominator x)))| ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE RATIONAL-IMPLIES2)
        (:REWRITE |arith (* y x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* (numerator x) (/ (denominator x)))|

Summary
Form:  ( DEFTHM |arith (* c (* d x))| ...)
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
:REDUNDANT

Summary
Form:  ( DEFUN ARITH-COLLECT-* ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-COLLECT-*

Summary
Form:  ( DEFTHM ARITH-COLLECT-*-PROBLEM-FINDER ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:EXECUTABLE-COUNTERPART IF))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-COLLECT-*-PROBLEM-FINDER

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2090

Summary
Form:  ( DEFTHM |arith (* (expt x n) (expt y n))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (expt (* x y) n)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* (expt x n) (expt y n))|

Summary
Form:  ( DEFTHM |arith (* x x)| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION FIX)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART <)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt x c)|)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* x 0)|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (expt x 0)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* x x)|

Summary
Form:  ( DEFTHM |arith (* x (/ x))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION FIX)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(equal (if a b c) x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* x (/ x))|

Summary
Form:  ( DEFTHM |arith (* x (expt x n))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION FIX)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |arith (* 0 x)|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x 1)|)
        (:TYPE-PRESCRIPTION EXPT))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* x (expt x n))|

Summary
Form:  ( DEFTHM |arith (* x (expt (- x) n))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION FIX)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE |arith (* 0 x)|)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x 1)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (* x (expt (- x) n))|

Summary
Form:  ( DEFTHM |arith (* x (/ (expt x n)))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION FIX)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |arith (* 0 x)|)
        (:REWRITE |arith (/ (* x y))|)
        (:REWRITE |arith (/ (/ x))|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 1)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* x (/ (expt x n)))|

Summary
Form:  ( DEFTHM |arith (* x (/ (expt (- x) n)))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION FIX)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(/ (if a b c))|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE |arith (* 0 x)|)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (/ (* x y))|)
        (:REWRITE |arith (/ (- x))|)
        (:REWRITE |arith (/ (/ x))|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 1)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (* x (/ (expt (- x) n)))|

Summary
Form:  ( DEFTHM |arith (* (/ x) (expt x n))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION FIX)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |arith (* 0 x)|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 1)|)
        (:TYPE-PRESCRIPTION EXPT))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* (/ x) (expt x n))|

Summary
Form:  ( DEFTHM |arith (* (/ x) (expt (- x) n))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION FIX)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE |arith (* 0 x)|)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 1)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (* (/ x) (expt (- x) n))|

Summary
Form:  ( DEFTHM |arith (* (expt x m) (expt x n))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART FIX)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE TEMP510)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (* (expt x m) (expt x n))|

Summary
Form:  ( DEFTHM |arith (* (expt (- x) m) (expt x n))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION =)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION EXPT)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART <)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART FIX)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:INDUCTION EXPT)
        (:REWRITE |(* a (/ a) b)|)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(- (if a b c))|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE |(expt x c)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE DEFAULT-UNARY-MINUS)
        (:REWRITE TEMP510)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* (- x) y)|)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* x 1)|)
        (:REWRITE |arith (* y (* x z))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (/ (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:REWRITE |arith (expt x 1)|)
        (:REWRITE |arith (fix x)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.08 seconds (prove: 0.08, print: 0.00, other: 0.00)
|arith (* (expt (- x) m) (expt x n))|

Summary
Form:  ( DEFTHM |arith (* (expt x m) (expt (- x) n))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART FIX)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(- (if a b c))|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE DEFAULT-UNARY-MINUS)
        (:REWRITE TEMP510)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.03 seconds (prove: 0.03, print: 0.00, other: 0.00)
|arith (* (expt x m) (expt (- x) n))|

Summary
Form:  ( DEFTHM |arith (* (/ (expt x m)) (expt x n))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE TEMP510)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (* (/ (expt x m)) (expt x n))|

Summary
Form:  ( DEFTHM |arith (* (/ (expt (- x) m)) (expt x n))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION =)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION EXPT)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART <)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART FIX)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:INDUCTION EXPT)
        (:REWRITE |(* a (/ a) b)|)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(- (if a b c))|)
        (:REWRITE |(/ (if a b c))|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (/ x) (/ y))|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE |(expt x c)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE DEFAULT-UNARY-MINUS)
        (:REWRITE TEMP510)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* (- x) y)|)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* x 1)|)
        (:REWRITE |arith (* y (* x z))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (/ (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:REWRITE |arith (expt x 1)|)
        (:REWRITE |arith (fix x)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.08 seconds (prove: 0.08, print: 0.00, other: 0.00)
|arith (* (/ (expt (- x) m)) (expt x n))|

Summary
Form:  ( DEFTHM |arith (* (/ (expt x m)) (expt (- x) n))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART FIX)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(- (if a b c))|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE DEFAULT-UNARY-MINUS)
        (:REWRITE TEMP510)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.03 seconds (prove: 0.03, print: 0.00, other: 0.00)
|arith (* (/ (expt x m)) (expt (- x) n))|

Summary
Form:  ( DEFTHM |arith (* (expt x m) (/ (expt x n)))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE TEMP510)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (* (expt x m) (/ (expt x n)))|

Summary
Form:  ( DEFTHM |arith (* (expt (- x) m) (/ (expt x n)))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION =)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION EXPT)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART <)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART BINARY-+)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART FIX)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:INDUCTION EXPT)
        (:REWRITE |(* a (/ a) b)|)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(- (if a b c))|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE |(expt x c)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE DEFAULT-UNARY-MINUS)
        (:REWRITE TEMP510)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* (- x) y)|)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* x 1)|)
        (:REWRITE |arith (* y (* x z))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (/ (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (+ m n)) non-zero x|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:REWRITE |arith (expt x 1)|)
        (:REWRITE |arith (fix x)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.08 seconds (prove: 0.08, print: 0.00, other: 0.00)
|arith (* (expt (- x) m) (/ (expt x n)))|

Summary
Form:  ( DEFTHM |arith (* (expt x m) (/ (expt (- x) n)))| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION ARITH-COLLECT-*)
        (:DEFINITION EVENP)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:DEFINITION SYNP)
        (:EXECUTABLE-COUNTERPART BINARY-*)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART EXPT)
        (:EXECUTABLE-COUNTERPART FIX)
        (:EXECUTABLE-COUNTERPART INTEGERP)
        (:EXECUTABLE-COUNTERPART NOT)
        (:EXECUTABLE-COUNTERPART UNARY--)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(* a (/ a))|)
        (:REWRITE |(* x (if a b c))|)
        (:REWRITE |(- (if a b c))|)
        (:REWRITE |(/ (if a b c))|)
        (:REWRITE |(equal (- x) (- y))|)
        (:REWRITE |(equal (- x) 0)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |(expt (- x) n)|)
        (:REWRITE DEFAULT-EXPT-1)
        (:REWRITE DEFAULT-UNARY-MINUS)
        (:REWRITE TEMP510)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* x (- y))|)
        (:REWRITE |arith (* y x)|)
        (:REWRITE |arith (- (- x))|)
        (:REWRITE |arith (/ (- x))|)
        (:REWRITE |arith (expt 0 n)|)
        (:REWRITE |arith (expt x (+ m n))|)
        (:REWRITE |arith (expt x (- n))|)
        (:REWRITE |arith (expt x 0)|)
        (:TYPE-PRESCRIPTION EXPT)
        (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
Warnings:  None
Time:  0.04 seconds (prove: 0.04, print: 0.00, other: 0.00)
|arith (* (expt x m) (/ (expt (- x) n)))|

Summary
Form:  ( DEFTHM |arith (* (expt c n) (expt d n))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (expt (* x y) n)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (* (expt c n) (expt d n))|

Summary
Form:  ( DEFTHM |arith (expt x c)| ...)
Rules: ((:COMPOUND-RECOGNIZER ZIP-COMPOUND-RECOGNIZER)
        (:DEFINITION EXPT)
        (:DEFINITION FIX)
        (:DEFINITION NOT)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:EXECUTABLE-COUNTERPART UNARY-/)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE |arith (* 0 x)|)
        (:TYPE-PRESCRIPTION EXPT))
Warnings:  None
Time:  0.01 seconds (prove: 0.01, print: 0.00, other: 0.00)
|arith (expt x c)|

Summary
Form:  ( DEFTHM |(arith-collect-* y x)| ...)
Rules: ((:DEFINITION ARITH-COLLECT-*)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* y x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|(arith-collect-* y x)|

Summary
Form:  ( DEFTHM |arith (+ c (+ d x))| ...)
Rules: ((:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:REWRITE |(+ (+ x y) z)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (+ c (+ d x))|

Summary
Form:  ( DEFUN ARITH-COLLECT-+ ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-COLLECT-+

Summary
Form:  ( DEFTHM ARITH-COLLECT-+-PROBLEM-FINDER ...)
Rules: ((:DEFINITION ARITH-COLLECT-+)
        (:EXECUTABLE-COUNTERPART IF))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-COLLECT-+-PROBLEM-FINDER

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2115

Summary
Form:  ( DEFTHM |arith (+ x x)| ...)
Rules: ((:DEFINITION ARITH-COLLECT-+)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (+ x x)|

Summary
Form:  ( DEFTHM |arith (+ x (- x))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-+)
        (:EXECUTABLE-COUNTERPART EQUAL)
        (:REWRITE INVERSE-OF-+))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (+ x (- x))|

Summary
Form:  ( DEFTHM |arith (+ x (* c x))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-+)
        (:DEFINITION FIX)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |(+ (if a b c) x)|)
        (:REWRITE |(+ 0 x)|)
        (:REWRITE |(+ y x)|)
        (:REWRITE |(equal (if a b c) x)|)
        (:REWRITE UNICITY-OF-1)
        (:REWRITE |arith (* (+ x y) z)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (+ x (* c x))|

Summary
Form:  ( DEFTHM |arith (+ (- x) (* c x))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-+)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* (+ x y) z)|)
        (:REWRITE |arith (* -1 x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (+ (- x) (* c x))|

Summary
Form:  ( DEFTHM |arith (+ (* c x) (* d x))| ...)
Rules: ((:DEFINITION ARITH-COLLECT-+)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* (+ x y) z)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|arith (+ (* c x) (* d x))|

Summary
Form:  ( DEFTHM |(arith-collect-+ y x)| ...)
Rules: ((:DEFINITION ARITH-COLLECT-+)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
|(arith-collect-+ y x)|

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-*-PROBLEM-FINDER ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:EXECUTABLE-COUNTERPART IF))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-*-PROBLEM-FINDER

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2121

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-*-BUBBLE-DOWN ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* y (* x z))|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-*-BUBBLE-DOWN

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-*-MATCH-1 ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:DEFINITION ARITH-COLLECT-*)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-*-MATCH-1

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-*-MATCH-2 ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:DEFINITION ARITH-COLLECT-*)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:REWRITE |arith (* y x)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-*-MATCH-2

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-*-MATCH-3 ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:DEFINITION ARITH-COLLECT-*)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:REWRITE |arith (* (* x y) z)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-*-MATCH-3

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-+-PROBLEM-FINDER ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:EXECUTABLE-COUNTERPART IF))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-+-PROBLEM-FINDER

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2125

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-+-BUBBLE-DOWN ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-+-BUBBLE-DOWN

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-+-MATCH-1 ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:DEFINITION ARITH-COLLECT-+)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-+-MATCH-1

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-+-MATCH-2 ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:DEFINITION ARITH-COLLECT-+)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:FAKE-RUNE-FOR-LINEAR NIL)
        (:FAKE-RUNE-FOR-TYPE-SET NIL))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-+-MATCH-2

Summary
Form:  ( DEFTHM ARITH-BUBBLE-DOWN-+-MATCH-3 ...)
Rules: ((:DEFINITION ARITH-BUBBLE-DOWN)
        (:DEFINITION ARITH-COLLECT-+)
        (:EXECUTABLE-COUNTERPART IF)
        (:EXECUTABLE-COUNTERPART SYNP)
        (:REWRITE |(+ (+ x y) z)|))
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ARITH-BUBBLE-DOWN-+-MATCH-3

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2128

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2127

Summary
Form:  ( IN-THEORY (DISABLE ...))
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
2126

Summary
Form:  ( TABLE ACL2-DEFAULTS-TABLE ...)
Rules: NIL
Warnings:  None
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
ACL2-DEFAULTS-TABLE

Summary
Form:  ( INCLUDE-BOOK "arithmetic-theory" ...)
Rules: NIL
Warnings:  None
Time:  0.28 seconds (prove: 0.00, print: 0.00, other: 0.28)

"/Users/huangjianshi/src/acl2-sources/books/arithmetic-3/bind-free/arithmetic-theory.fasl"


Summary
Form:  (CERTIFY-BOOK "arithmetic-theory" ...)
Rules: NIL
Warnings:  None
Time:  2.88 seconds (prove: 2.17, print: 0.00, other: 0.71)
 "/Users/huangjianshi/src/acl2-sources/books/arithmetic-3/bind-free/arithmetic-theory.lisp"
ACL2 !>
Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* 