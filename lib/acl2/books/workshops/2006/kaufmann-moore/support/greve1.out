This is SBCL 1.0.1.34, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 3.1 built January 26, 2007  15:12:42.
 Copyright (C) 2006  University of Texas at Austin
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the GNU General Public License.

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-3-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

 NOTE!!  Proof trees are disabled in ACL2.  To enable them in emacs,
 look under the ACL2 source directory in interface/emacs/README.doc; 
 and, to turn on proof trees, execute :START-PROOF-TREE in the ACL2 
 command loop.   Look in the ACL2 documentation under PROOF-TREE.

ACL2 Version 3.1.  Level 1.  Cbd 
"/Users/huangjianshi/src/acl2-sources/books/workshops/2006/kaufmann-moore/support/".

Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2 !>
Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* 
#<PACKAGE "ACL2">
* 
ACL2 Version 3.1.  Level 1.  Cbd 
"/Users/huangjianshi/src/acl2-sources/books/workshops/2006/kaufmann-moore/support/".

Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2 !> (PROVE PROOF-TREE OBSERVATION EVENT SUMMARY)
ACL2 !>EQUIV
EQUIV-IS-AN-EQUIVALENCE
T
T
FOO
PRED
GOO
HOO

ACL2 Warning [Non-rec] in ( DEFTHM PRED-HOO ...):  A :REWRITE rule
generated from PRED-HOO will be triggered only by terms containing
the non-recursive function symbols PRED and HOO.  Unless these functions
are disabled, this rule is unlikely ever to be used.


ACL2 Warning [Subsume] in ( DEFTHM PRED-HOO ...):  The previously added
rule PRED subsumes a newly proposed :REWRITE rule generated from PRED-
HOO, in the sense that the old rule rewrites a more general target.
Because the new rule will be tried first, it may nonetheless find application.

PRED-HOO

ACL2 Warning [Non-rec] in ( DEFTHM GOO-TO-HOO ...):  A :REWRITE rule
generated from GOO-TO-HOO will be triggered only by terms containing
the non-recursive function symbol GOO.  Unless this function is disabled,
this rule is unlikely ever to be used.


ACL2 Warning [Subsume] in ( DEFTHM GOO-TO-HOO ...):  The previously
added rule GOO subsumes a newly proposed :REWRITE rule generated from
GOO-TO-HOO, in the sense that the old rule rewrites a more general
target.  Because the new rule will be tried first, it may nonetheless
find application.

GOO-TO-HOO
EQUIV-IMPLIES-IFF-PRED-1

ACL2 Warning [Non-rec] in ( DEFTHM PRED-IMPLIES-FOO ...):  A :REWRITE
rule generated from PRED-IMPLIES-FOO will be triggered only by terms
containing the non-recursive function symbol FOO.  Unless this function
is disabled, this rule is unlikely ever to be used.


ACL2 Warning [Subsume] in ( DEFTHM PRED-IMPLIES-FOO ...):  The previously
added rule FOO subsumes a newly proposed :REWRITE rule generated from
PRED-IMPLIES-FOO, in the sense that the old rule rewrites a more general
target.  Because the new rule will be tried first, it may nonetheless
find application.

PRED-IMPLIES-FOO
ACL2-DEFAULTS-TABLE
T
FOO-OF-GOO-EQUIV-ENABLED
1798
FOO-OF-GOO
FOO-OF-GOO-AGAIN
PRED-IMPLIES-FOO-AGAIN
1798
FOO-OF-GOO-YET-AGAIN

ACL2 Warning [Double-rewrite] in ( DEFTHM PRED-IMPLIES-FOO-AGAIN-WITH-
WARNING ...):  In a :REWRITE rule generated from PRED-IMPLIES-FOO-AGAIN-
WITH-WARNING, equivalence relation EQUIV is maintained at one problematic
occurrence of variable X in the first hypothesis, but not at any binding
occurrence of X.  Consider replacing that occurrence of X in the first
hypothesis with (DOUBLE-REWRITE X).  See :doc double-rewrite for more
information on this issue.


ACL2 Warning [Free] in ( DEFTHM PRED-IMPLIES-FOO-AGAIN-WITH-WARNING
...):  A :REWRITE rule generated from PRED-IMPLIES-FOO-AGAIN-WITH-WARNING
contains the free variable Y.  This variable will be chosen by searching
for an instance of (EQUIV Y X) among the hypotheses of the conjecture
being rewritten.  This is generally a severe restriction on the applicability
of a :REWRITE rule.  See :DOC free-variables.

PRED-IMPLIES-FOO-AGAIN-WITH-WARNING

ACL2 Warning [Guards] in (CERTIFY-BOOK "greve1" ...):  The book 
"/Users/huangjianshi/src/acl2-sources/books/workshops/2006/kaufmann-moore/support/greve1.lisp"
defines the function EQUIV, which has not had its guards verified.
See :DOC guards.


"/Users/huangjianshi/src/acl2-sources/books/workshops/2006/kaufmann-moore/support/greve1.fasl"

 "/Users/huangjianshi/src/acl2-sources/books/workshops/2006/kaufmann-moore/support/greve1.lisp"
ACL2 !>
Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* 