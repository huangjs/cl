;;; 2007/03/22
;;; by Jianshi Huang <jianshi.huang@gmail.com>
;;; MIT license


* Project Description:

A lazy list library that implements part of CL's  list function (cons, nth, mapcar, remove, subst, append, etc, etc) with congruent argument list but using lazy evaluation.

Efficiency (time and space) is concerned as well as convenience. Optimizations like fusion



* Functions which are not included, are those:

** may not terminate.
** will have to enumerate all the list to complete the
   operation. Therefore, it doesn't make sense to use lazy-list. If
   you really want to enumerate the list, use enumerate-all explicitly
   and then use the original list functions.
** iterate on a list without create a new one, and rely on some
   side-effect operations. Laziness doesn't cope well with
   side-effect. (e.g. mapc)
** destructive function. Let's make life simple.
** associate list and property list are not implemented. (to be added
   if wanted)
   

   
* Functions added for convenience:

** filter (predicate list) => list
** enumerate-all (list) => list
