C************************************************************
      SUBROUTINE O8FIN
      INCLUDE 'O8COMM.INC'
      INCLUDE 'O8CONS.INC'
      INCLUDE 'O8FINT.INC'
      INTEGER I,J,K,IH1,IH2,IH3,IH5,IH6,IH7,IH8,IH9
      DOUBLE PRECISION UMIN,TERM
      INTEGER NSING,CRTOT,CGRTOT,NUPREG,NBFGS1,NRESTA
      CHARACTER*64 MESSAG(18),LINE
      SAVE
C**** TERMINATION REASON + 11 = MESSAGE NUMBER
      DATA MESSAG/
     F'CONSTRAINT EVALUATION RETURNS ERROR WITH CURRENT POINT',
     F'OBJECTIVE EVALUATION RETURNS ERROR WITH CURRENT POINT',
     F'QPSOLVER: WORKING SET SINGULAR IN DUAL EXTENDED QP ',
     F'QPSOLVER: EXTENDED QP-PROBLEM SEEMINGLY INFEASIBLE ',
     F'QPSOLVER: NO DESCENT DIRECTION FROM QP FOR TAU=TAU_MAX',
     F'QPSOLVER: ON EXIT CORRECTION SMALL, INFEASIBLE POINT',
     F'STEPSIZESELECTION: COMPUTED D NOT A DIRECTION OF DESCENT',
     F'MORE THAN MAXIT ITERATION STEPS',
     F'STEPSIZESELECTION: NO ACCEPTABLE STEPSIZE IN [SIGSM,SIGLA]',
     F'STEPSIZESELECTION: DIRECTIONAL DERIV. VERY SMALL, INFEASIBLE',
     F'KT-CONDITIONS SATISFIED, NO FURTHER CORRECTION COMPUTED',
     F'KT-CONDITIONS SATISFIED, COMPUTED CORRECTION SMALL',
     F'STEPSIZESELECTION: X (ALMOST) FEASIBLE, DIR. DERIV. VERY SMALL',
     F'KT-CONDITIONS (RELAXED) SATISFIED, SINGULAR POINT',
     F'VERY SLOW PRIMAL PROGRESS, SINGULAR OR ILLCONDITONED PROBLEM',
     F'VERY SLOW PROGRESS IN X, SINGULAR PROBLEM',
     F'CORRECTION VERY SMALL, ALMOST FEASIBLE BUT SINGULAR POINT',
     F'NUMSM  SMALL DIFFERENCES IN PENALTY FUNCTION,TERMINATE'/
      IF ( SCF .NE. ZERO ) THEN
        DO I=1,NRES
          U(I)=U(I)/SCF
        ENDDO
      ENDIF
C***  IN SOLCHK THE USER MIGHT ADD SOME ADDITIONAL CHECKS AND/OR OUTPUT
      CALL SOLCHK
C***
      IF ( SILENT .AND. .NOT. INTAKT ) RETURN
C
      IF ( INTAKT .AND. .NOT. SILENT ) WRITE(*,*) NAME
      IF (  .NOT. SILENT ) THEN
        IF ( INTAKT  )
     F     WRITE(*,400) N,NH,NG,EPSX,SIGSM,(XST(I),I=1,N)
        WRITE(PROU,400) N,NH,NG,EPSX,SIGSM,(XST(I),I=1,N)
  400   FORMAT(/'     N=',I10, '    NH=',I10,'    NG=',I10/
     1       /'  EPSX=',D10.4,' SIGSM=',D10.4/
     2       /'STARTVALUE'/(5(D15.8,1X)))
      ENDIF
      IF ( INTAKT .AND. .NOT. SILENT )
     1WRITE(*,500)EPSMAC,TOLMAC,DEL0,DELMIN,TAU0,TAU,SMALLD,SMALLW,
     2               RHO,RHO1
      IF ( .NOT. SILENT )
     1 WRITE(PROU,500)EPSMAC,TOLMAC,DEL0,DELMIN,TAU0,TAU,SMALLD,
     2           SMALLW,RHO,RHO1
  500 FORMAT(/'  EPS=',D10.3,'  TOL=',D10.3,' DEL0=',D10.3,' DELM=',
     1   D10.3,' TAU0=',D10.3/'  TAU=',D10.3,'   SD=',D10.3
     2       ,'   SW=',D10.3,'  RHO=',D10.3,' RHO1=',D10.3)
      IF ( .NOT. SILENT ) THEN
        WRITE(PROU,
     F        FMT='('' SCFM='',D10.3,''  C1D='',D10.3,
     F        '' EPDI='',D10.3,/''  NRE='',I10,'' ANAL='',L10
     F        )') SCFMAX,C1D,EPSDIF,NRESET,ANALYT
        IF ( INTAKT )
     F   WRITE(*,
     F        FMT='('' SCFM='',D10.3,''  C1D='',D10.3,
     F        '' EPDI='',D10.3,/''  NRE='',I10,'' ANAL='',L10
     F        )') SCFMAX,C1D,EPSDIF,NRESET,ANALYT
      ENDIF
      IF ( .NOT. SILENT .AND. .NOT. ANALYT ) THEN
        WRITE(PROU,
     F        FMT='('' VBND='',D10.3,'' EFCN='',D10.3,
     F        '' DIFF='',I1)') TAUBND,EPSFCN,DIFFTYPE
        IF ( INTAKT )
     F         WRITE(*,
     F        FMT='(''TAUBND='',D10.3,'' EPSFCN='',D10.3,
     F        '' DIFFTYPE='',I1)') TAUBND,EPSFCN,DIFFTYPE
      ENDIF
      I=0
      J=0
      UMIN=ZERO
      DO K=1,NRES
        I=I+CRES(K)
        J=J+CGRES(K)
        IF ( K .GT. NH ) UMIN=MIN(UMIN,U(K))
      ENDDO
      CRTOT=I
      CGRTOT=J
      NSING=0
      NRESTA=0
      NUPREG=0
      NBFGS1=0
      DO K=1,ITSTEP
        IF ( ACCINF(K,10) .EQ. ONE ) NSING=NSING+1
        IF ( ACCINF(K,27) .EQ. ONE ) NBFGS1=NBFGS1+1
C*** FOR THE PANTOJA MAYNE UPDATE
        IF ( ACCINF(K,29) .EQ. ZERO .AND. ACCINF(K,27) .EQ. ONE )
     F              NUPREG=NUPREG+1
        IF ( ACCINF(K,27) .EQ. -ONE ) NRESTA=NRESTA+1
      ENDDO
      K=INT(OPTITE)+11
      IF ( K .GE. 1 .AND. K .LE. 18 ) THEN
        LINE=MESSAG(K)
      ELSE
        LINE='VARIABLE OPTITE UNDEFINED ON EXIT'
      ENDIF
      IF ( INTAKT .AND. .NOT. SILENT  )
     F  WRITE(*,510) LINE,ICF,ICGF,CRTOT,CGRTOT,SCF,GFN,B2N,UPSI,UMIN,
     F               RUNTIM
      IF ( .NOT. SILENT )
     F   WRITE(PROU,510) LINE,ICF,
     F                   ICGF,CRTOT,CGRTOT,SCF,GFN,B2N,UPSI,UMIN,
     F                   RUNTIM
  510 FORMAT(/1X,'TERMINATION REASON:',/1X,A62,
     F       /1X,'EVALUATIONS OF F                   ',I10
     F       /1X,'EVALUATIONS OF GRAD F              ',I10/1X,
     F           'EVALUATIONS OF CONSTRAINTS         ',I10/1X,
     F           'EVALUATIONS OF GRADS OF CONSTRAINTS',I10/1X,
     F           'FINAL SCALING OF OBJECTIVE         ',D14.7/1X,
     F           'NORM OF GRAD(F)                    ',D14.7/1X,
     F           'LAGRANGIAN VIOLATION               ',D14.7,/1X,
     F           'FEASIBILITY VIOLATION              ',D14.7,/1X,
     F           'DUAL FEASIBILITY VIOLATION         ',D14.7,/1X,
     F           'OPTIMIZER RUNTIME SEC''S            ',E14.7)
      IF ( INTAKT .AND. .NOT. SILENT ) WRITE(*,550) FX
      IF ( .NOT. SILENT ) WRITE(PROU,550)     FX
  550 FORMAT(//1X,'OPTIMAL VALUE OF F =  ',D21.15)
      IF ( INTAKT .AND. .NOT. SILENT ) WRITE(*,560) (X(I),I=1,N)
      IF ( .NOT. SILENT ) WRITE(PROU,560) (X(I),I=1,N)
  560 FORMAT(/1X,'OPTIMAL SOLUTION  X =  '/(1X,3(D21.15,1X)))
      IF ( NRES .NE. 0 .AND. .NOT. SILENT ) THEN
        WRITE(PROU,520) (I,RES(I),GRESN(I),U(I),I=1,NRES)
        IF ( INTAKT )
     F    WRITE(*,520) (I,RES(I),GRESN(I),U(I),I=1,NRES)
      ENDIF
  520 FORMAT(/2X,'MULTIPLIERS ARE RELATIV TO SCF=1'
     1    /2X,'NR.    CONSTRAINT      NORMGRAD (OR 1)   MULTIPLIER'/
     2       (1X,I4,1X,3(D15.8,2X)))
      IF ( NRES .NE. 0 .AND. .NOT. SILENT  ) THEN
        WRITE(PROU,600)  (CRES(I),CGRES(I),I=1,NRES)
        IF ( INTAKT )
     F    WRITE(*,600)  (CRES(I),CGRES(I),I=1,NRES)
  600 FORMAT(/1X,'EVALUATIONS OF RESTRICTIONS AND THEIR GRADIENTS'/
     1      (5(:,' (',I6,',',I6,')')))
      ENDIF
      IF ( ITSTEP .GT. 1 .AND. OPTITE .EQ. 0 ) ITSTEP=ITSTEP-1
      IF ( .NOT. SILENT )
     F    WRITE(PROU,
     F    FMT='(''LAST ESTIMATE OF CONDITION OF ACTIVE GRADIENTS'',
     F   E11.4)')       ACCINF(ITSTEP,13)
      TERM=ACCINF(ITSTEP,14)
      I=ITSTEP
      DO WHILE ( I .GT. 1 .AND. TERM .EQ. ZERO )
        I=I-1
        TERM=ACCINF(I,14)
      ENDDO
      IF ( .NOT. SILENT ) THEN
        WRITE(PROU,
     F    FMT='(''LAST ESTIMATE OF CONDITION OF APPROX. HESSIAN '',
     F            E11.4)') TERM
        WRITE(PROU,FMT='(''ITERATIVE STEPS TOTAL          '',I5)')
     F     ITSTEP
        WRITE(PROU,FMT='(''# OF RESTARTS                  '',I5)')
     F     NRESTA
        WRITE(PROU,FMT='(''# OF FULL REGULAR UPDATES      '',I5)')
     F     NUPREG
        WRITE(PROU,FMT='(''# OF UPDATES                   '',I5)')
     F     NBFGS1
        WRITE(PROU,FMT='(''# OF FULL REGULARIZED SQP-STEPS'',I5)')
     F     NSING
C
        IF ( INTAKT ) THEN
      WRITE(*,FMT='(''LAST ESTIMATE OF COND.NR. OF ACTIVE GRADIENTS '',
     F   E11.4)')       ACCINF(ITSTEP,13)
      WRITE(*,FMT='(''LAST ESTIMATE OF COND.NR. OF APPROX.  HESSIAN '',
     F            E11.4)') ACCINF(ITSTEP,14)
      WRITE(*,FMT='(''ITERATIVE STEPS TOTAL           '',I5)') ITSTEP
      WRITE(*,FMT='(''# OF RESTARTS                   '',I5)') NRESTA
      WRITE(*,FMT='(''# OF FULL REGULAR UPDATES       '',I5)') NUPREG
      WRITE(*,FMT='(''# OF UPDATES                    '',I5)') NBFGS1
      WRITE(*,FMT='(''# OF REGULARIZED FULL SQP-STEPS '',I5)') NSING
C
        ENDIF
      ENDIF
      IF ( OPTITE .LT. ZERO ) TE1=.TRUE.
      IF ( SILENT ) TE1=.FALSE.
      IF ( TE1 ) THEN
        DO I=1 ,ITSTEP
          IH1=ACCINF(I,1)
          IH2=ACCINF(I,9)
          IH3=ACCINF(I,10)
          IH5=ACCINF(I,18)
          IH6=ACCINF(I,19)
          IH7=ACCINF(I,22)
          IH8=ACCINF(I,26)
          IH9=ACCINF(I,27)
          WRITE(PROU,1000) IH1,(ACCINF(I,J),J=2,8),IH2,IH3,
     F    ACCINF(I,11),(ACCINF(I,J),J=13,14),(ACCINF(I,J),J=16,17),
     F           IH5,IH6,ACCINF(I,20),
     F           ACCINF(I,21),IH7,(ACCINF(I,J),J=23,25),IH8,IH9,
     F           ACCINF(I,28),ACCINF(I,29)
          IF ( ACCINF(I,10) .EQ. 1. ) THEN
            WRITE(PROU,2000) (ACCINF(I,J),J=30,32)
          ENDIF
        ENDDO
      ENDIF
C****
C   ACCINF A C C U M U L A T E D   I N F O R M A T I O N
C   ON ITERATION SEQUENCE
C   1: STEP-NR
C   2: F(X-K) CURRENT VALUE OF OBJECTIVE (ZERO IN FEASIBILITY
C      IMPROVEMENT  PHASE (-1)  )
C   3: SCF    INTERNAL SCALING OF OBJECTIVE (ZERO IN PHASE -1)
C   4: PSI    THE WEIGHTED PENALTY-TERM
C   5: UPSI   THE UNWEIGHTED PENALTY-TERM (L1-NORM OF CONSTRAINT VECTOR)
C   6: DEL_K_1 BOUND FOR CURRENTLY ACTIVE CONSTRAINTS
C   7: B2N0   L2-NORM OF PROJECTED GRADIENT, BASED ON CONSTRAINTS
C             IN LEVEL DELMIN
C             AND BELOW, MEASURED IN THE NORM INDUCED BY THE
C             INVERSE HESSIAN
C             ESTIMATE
C   8: B2N    L2-NORM OF PROJECTED GRADIENT BASED ON DEL_K_1
C   9: NR     NUMBER OF BINDING CONSTRAINTS
C  10: SING   IF 1, THE BINDING CONSTRAINTS DON'T SATISFY THE
C             REGULARITY CONDITION
C  11: UMIN   INFINITY NORM OF NEGATIVE PART OF MULTIPLIER
C  12: -------------
C  13: COND_R CONDITION NUMBER OF DIAGONAL PART OF QR-DECOMP.
C      OF NORMALIZED   GRADIENTS OF BINDING CONSTRAINTS
C  14: COND_H CONDITION NUMBER OF DIAGONAL OF CHOLESKY-FACTOR
C      OF UPDATED FULL HESSIAN
C  15: SCF0   THE RELATIVE DAMPING OF TANGENTIAL COMPONENT
C             IF UPSI>TAU0/2
C  16: XNORM  L2-NORM OF X
C  17: DNORM  L2-NORM OF D (CORRECTION FROM QP -SUBPROBLEM, UNSCALED)
C  18: PHASE  -1 : INFEASIBILITY IMPROVEMENT PHASE,
C             0: INITIAL OPTIMIZATION
C             1: BINDING CONSTRAINTS UNCHANGED ,
C             2: D SMALL, MARATOS CORRECTION
C             IN USE
C  19: C_K    NUMBER OF DECREASES OF PENALTY WEIGHTS
C  20: WMAX   INFINITY NORM OF WEIGHTS
C  21: SIG_K  STEPSIZE FROM UNIDIMENSIONAL MINIMIZATION (BACKTRACKING)
C  22: CFINCR NUMBER OF OBJECTIVE EVALUATIONS FOR STEPSIZE-ALGORITHM
C  23: DIRDER DIRECTIONAL DERIVATIVE OF PENALTY-FUNCTION ALONG D
C             (SCALED)
C  24: DSCAL  SCALING FACTOR FOR D
C  25: COSPHI COS OF ARC BETWEEN D AND D_PREVIOUS. IF LARGER THETA ,
C             SIG LARGER THAN  ONE (UP TO SIGLA) IS TRIED
C  26: VIOLIS(0) NUMBER OF CONSTRAINTS NOT BINDING AT X BUT HIT
C             DURING LINE SEARCH
C  27:        TYPE OF UPDATE FOR H:
C             1 NORMAL P&M-BFGS-UPDATE,
C             0 UPDATE SUPPRESSED,
C             -1 RESTART WITH SCALED UNIT MATRIX ,
C             2 STANDARD BFGS,
C             3 BFGS MODIFIED (POWELL)
C
C  28: NY_K/TK   MODIFICATION FACTOR FOR DAMPING THE PROJECTOR
C                IN BFGS/PANTOJA-MAYNE-TERM RESPECTIVELY
C  29: 1-MY_K/XSIK MODIFICATION FACTOR FOR DAMPING
C                THE QUASI-NEWTON-RELATION IN BFGS
C                FOR UNMODIFIED BFGS NY_K SHOULD BE LARGER THAN
C                UPDMY0 (NEAR ONE)
C                AND 1-MY_K EQUAL ONE./PANTOJA-MAYNE TERM RESPECTIVELY
C  30: QPTERM 0, IF SING=-1, TERMINATION INDICATOR OF
C                QP-SOLVER OTHERWISE
C             1: SUCCESSFUL,
C             -1: TAU BECOMES LARGER THAN TAUQP WITHOUT SLACK-
C                 VARIABLES BECOMING SUFFICIENTLY SMALL .
C             -3: WORKING SET OF QP-SOLVER BECOMES LINEARLY DEPENDENT
C             -2: INFEASIBLE QP-PROBLEM (THEORETICALLY IMPOSSIBLE)
C  31: TAUQP: WEIGHT OF SLACK-VARIABLES IN QP-SOLVER
C  32: INFEAS L1-NORM OF SLACK-VARIABLES IN QP-SOLVER
C
 1000 FORMAT(I4,'  FX=',E14.7,' SCF=',E14.7,' PSI=',
     F        E14.7,   ' UPS=',E14.7,/4X,
     F        ' DEL=',E14.7,' B20=',E14.7,' B2N=',E14.7,'  NR=',
     F        I5,9X,/4X    ,'  SI=',I4,10X,
     F        '  U-=',E14.7,
     F        ' C-R=',E14.7,' C-D=',E14.7,/4X,
     F        '  XN=',E14.7,'  DN=',E14.7,' PHA=',I4,10X,
     F        '  CL=',I14,/4X,' SKM=',E14.7,
     F        ' SIG=',E14.7,' CF+=',I5,9X,' DIR=',E14.7,/4X,
     F        ' DSC=',E14.7,' COS=',E14.7,' VIO=',I5,  /4X,
     F        ' UPD=',I5,9X,'  TK=',E14.7,' XSI=',E14.7)
 2000 FORMAT(4X,' QPT=',E14.1,' TQP=',E14.7,' SLA=',E14.7)
      IF ( .NOT. SILENT ) CLOSE(PROU)
      IF ( .NOT. SILENT ) CLOSE(MEU)
      RETURN
      END
