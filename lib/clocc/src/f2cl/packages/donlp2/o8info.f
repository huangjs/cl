C***********************************************************************
      SUBROUTINE O8INFO(ICASE)
      INCLUDE 'O8COMM.INC'
      INCLUDE 'O8CONS.INC'
      INTEGER ICASE,I,J,L,K
      DOUBLE PRECISION Y,PHIH
      CHARACTER*40 HEAD
      SAVE
      IF(.NOT.TE2)      RETURN
      GOTO (1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,
     F      11000,12000,13000,14000,15000,16000,17000,18000,
     F      19000,20000,21000,22000),ICASE
 1000 CONTINUE
      WRITE(PROU,1100) ITSTEP,SCF,PSIST,PSI,UPSI,FXST,FX,
     F             (X(I),I=1,N)
      WRITE(PROU,*) ' VALID PERMUTATION OF X'
      WRITE(PROU,1200) (PERM(I),I=1,N)
 1200 FORMAT((/20(I3,1X)))
        IF ( PHASE .GE. 0 .AND. TE3 ) THEN
          HEAD='QUASI-NEWTON-MATRIX FULL UPDATE'
          CALL O8MDRU(A,NX,NX,N,N,HEAD,PROU,.FALSE.)
        ENDIF
 1100 FORMAT(///80(1H=),/10X,I4,'-TH ITERATION STEP',/
     F       '   SCF=',D12.5,' PSIST=',D12.5,
     F       '   PSI=',D12.5,'  UPSI=',D12.5,
     F      /'  FXST=',D12.5,'    FX=',
     F       D12.5,/'  X=',/6(1X,D12.5))
      IF ( INTAKT ) THEN
        WRITE(*,1100) ITSTEP,SCF,PSIST,PSI,UPSI,FXST,FX,
     F             (X(I),I=1,N)
        WRITE(*,*) ' VALID PERMUTATION OF X'
        WRITE(*,1200) (PERM(I),I=1,N)
      ENDIF
      RETURN
 2000 CONTINUE
      WRITE(PROU,2100) DEL,B2N0,B2N,GFN
      IF(ALIST(0).NE. 0)
     F WRITE(PROU,2200) (ALIST(I),RES(ALIST(I)),GRESN(ALIST(I)),
     F                I=1,ALIST(0))
      IF(ALIST(0) .NE. 0 .AND. .NOT. SINGUL )
     F WRITE(PROU,2400)(DIAG(I),I=1,ALIST(0))
      IF(ALIST(0).NE. 0 .AND. TE3 )  THEN
        DO I=1,ALIST(0)
          L=ALIST(I)
          WRITE(PROU,2300) L, (GRES(J,L),J=1,N)
        ENDDO
      ENDIF
      IF ( INTAKT ) THEN
        WRITE(*,2100) DEL,B2N0,B2N,GFN
        IF(ALIST(0).NE. 0)
     F    WRITE(*,2200) (ALIST(I),RES(ALIST(I)),GRESN(ALIST(I)),
     F                I=1,ALIST(0))
        IF(ALIST(0) .NE. 0 .AND. .NOT. SINGUL )
     F      WRITE(*,2400)(DIAG(I),I=1,ALIST(0))
        IF(ALIST(0).NE. 0 .AND. TE3 )  THEN
          DO I=1,ALIST(0)
            L=ALIST(I)
            WRITE(*,2300) L, (GRES(J,L),J=1,N)
          ENDDO
        ENDIF
      ENDIF
      RETURN
 2100 FORMAT(//'  DEL=',D13.6,'  B2N0=',D13.6,'   B2N=',D13.6,
     F       '   GFN=',D13.6)
 2200 FORMAT(//1X,'VALUES OF RESTRICTIONS',
     F       (/1X,2(:,'(',I4,2X,D12.5,2X,D12.5,')',2X)))
 2300 FORMAT(//1X,'GRADIENT OF RESTRICTION NR.',I4,/
     F       (1X,5(D12.5,2X)))
 2400 FORMAT(//1X,'  DIAG(R)=',/6(1X,D12.5))
 3000 CONTINUE
      IF( .NOT. (NR .EQ. 0 .OR. PHASE .EQ. -1) )
     F  WRITE(PROU,3100)   (ALIST(K),U(ALIST(K)),K=1,NR)
      IF( .NOT. (NR .EQ. 0 .OR. PHASE .EQ. -1)  .AND. INTAKT )
     F  WRITE(*,3100)   (ALIST(K),U(ALIST(K)),K=1,NR)
 3100 FORMAT(/'  MULTIPLIERS: FIRST ESTIMATE'/,'  U =',
     F        /4(1X,I4,1X,D12.5))
      RETURN
 4000 CONTINUE
      IF( .NOT. (NR .EQ. 0 .OR. PHASE .EQ. -1) )
     F  WRITE(PROU,4100)   (ALIST(K),U(ALIST(K)),K=1,NR)
      IF( .NOT. (NR .EQ. 0 .OR. PHASE .EQ. -1)  .AND. INTAKT )
     F  WRITE(*,4100)   (ALIST(K),U(ALIST(K)),K=1,NR)
 4100 FORMAT(/'  MULTIPLIERS: SECOND ESTIMATE'/,
     F  '  U =',/4(1X,I4,1X,D12.5))
      RETURN
 5000 CONTINUE
      IF ( INTAKT )
     F  WRITE(*,*) '  CONDITION NUMBER OF R     ',ACCINF(ITSTEP,13)
      WRITE(PROU,*) '  CONDITION NUMBER OF R     ',ACCINF(ITSTEP,13)
      IF ( PHASE .EQ. -1 ) THEN
        RETURN
      ELSE
        WRITE(PROU,*)
     F    '  CONDITION NUMBER OF A     ',ACCINF(ITSTEP,14)
        IF ( INTAKT ) THEN
          WRITE(*,*)
     F    '  CONDITION NUMBER OF A     ',ACCINF(ITSTEP,14)
        ENDIF
        RETURN
      ENDIF
 6000 CONTINUE
      RETURN
 7000 CONTINUE
      WRITE(PROU,7100) PHASE,SCF0,(D(I),I=1,N)
      IF(PHASE .EQ. 2)    WRITE(PROU,7200)  (DD(I),I=1,N)
      IF ( INTAKT ) THEN
        WRITE(*,7100) PHASE,SCF0,(D(I),I=1,N)
        IF(PHASE .EQ. 2)    WRITE(*,7200)  (DD(I),I=1,N)
      ENDIF
      RETURN
 7100 FORMAT(//1X,' PHASE=',I3,'  SCF0=',D12.5/1X,' D ='/6(1X,D12.5))
 7200 FORMAT(//1X,' DD='/6(1X,D12.5))
 8000 CONTINUE
      Y=TAU0*P5
      PHIH=FX*SCF+PSI
      IF ( INTAKT )WRITE(*,8100)PHIH,DIRDER,PSI,Y,FX,DSCAL,SCF,UPSI
      WRITE(PROU,8100) PHIH,DIRDER,PSI,Y,FX,DSCAL,SCF,UPSI
      RETURN
 8100 FORMAT(//1X,'START UNIMIN',//'    PHI=',D12.5,'   DPHI=',D12.5,
     F '    PSI=',D12.5,' TAU0/2=',D12.5,
     F       /'     FX=',D12.5,'  DSCAL=',
     F       D12.5,'    SCF=',D12.5,'   UPSI=',D12.5)
 9000 CONTINUE
      WRITE(PROU,9100)   SIG,FX1,PSI1,UPSI1
      IF ( INTAKT ) WRITE(*,9100)   SIG,FX1,PSI1,UPSI1
 9100 FORMAT('    SIG=',D12.5,'     FX=',D12.5,
     F       '    PSI=',D12.5,'   UPSI=',D12.5 )
      RETURN
10000 CONTINUE
      WRITE(PROU,10100) SIG,CFINCR,(VIOLIS(I),I=1,VIOLIS(0))
      IF ( VIOLIS(0) .EQ. 0 ) WRITE(PROU,*) 'NONE'
      IF ( INTAKT ) THEN
        WRITE(*,10100) SIG,CFINCR,(VIOLIS(I),I=1,VIOLIS(0))
        IF ( VIOLIS(0) .EQ. 0 ) WRITE(*,*) 'NONE'
      ENDIF
      RETURN
10100 FORMAT(//1X,'END UNIMIN',//1X,'SIG=',D12.5,
     F       '  NUM. F-EVALUATIONS',I2,
     F       /1X,'LIST OF INACTIVE HIT CONSTRAINTS',/(13(I4,2X)))
11000 CONTINUE
      IF ( INTAKT )
     F WRITE(*,*) 'ADDITIONAL INCREASE OF ETA DUE TO LARGE CLOW'
      WRITE(PROU,*) 'ADDITIONAL INCREASE OF ETA DUE TO LARGE CLOW'
      RETURN
12000 CONTINUE
      WRITE(PROU,12100)   SCF,CLOW,ETA
      IF(NRES .NE. 0)    WRITE(PROU,12200)   (W(I),I=1,NRES)
      IF ( INTAKT ) THEN
        WRITE(*,12100)   SCF,CLOW,ETA
        IF(NRES .NE. 0)  WRITE(*,12200) (W(I),I=1,NRES)
      ENDIF
      RETURN
12100 FORMAT(//2X,'CURRENT SCALING,  SCF = ',D12.5,' CLOW = ',I12,
     F   ' ETA = ',D12.5)
12200 FORMAT(//2X,'SCALRES='/6(1X,D12.5))
13000 CONTINUE
      IF ( ACCINF(ITSTEP,27) .EQ. ZERO ) THEN
        IF ( INTAKT ) WRITE(*,*) 'UPDATE SUPPRESSED'
        WRITE(PROU,*) 'UPDATE SUPPRESSED'
      ELSEIF ( ACCINF(ITSTEP,27) .EQ. -ONE ) THEN
        WRITE(PROU,*) 'RESTART WITH SCALED UNIT MATRIX'
        IF ( INTAKT )
     F    WRITE(*,*) 'RESTART WITH SCALED UNIT MATRIX'
      ELSE
        WRITE(PROU,*) 'BFGS-UPDATE'
        WRITE(PROU,FMT='('' TYPE ='',D15.7)') ACCINF(ITSTEP,27)
        WRITE(PROU,FMT='(''  NY  ='',D15.7)') ACCINF(ITSTEP,28)
        WRITE(PROU,FMT='('' THET ='',D15.7)') ACCINF(ITSTEP,29)
        IF ( INTAKT ) THEN
          WRITE(*,*) 'BFGS-UPDATE'
          WRITE(*,FMT='('' TYPE ='',D15.7)') ACCINF(ITSTEP,27)
          WRITE(*,FMT='(''  NY  ='',D15.7)') ACCINF(ITSTEP,28)
          WRITE(*,FMT='('' THET ='',D15.7)') ACCINF(ITSTEP,29)
        ENDIF
      ENDIF
      RETURN
14000 CONTINUE
      IF ( ACCINF(ITSTEP,27) .EQ. ZERO ) THEN
        IF ( INTAKT ) WRITE(*,*) 'UPDATE SUPPRESSED'
        WRITE(PROU,*) 'UPDATE SUPPRESSED'
      ELSEIF ( ACCINF(ITSTEP,27) .EQ. ONE ) THEN
        WRITE(PROU,*) 'BFGS-UPDATE AS IN PANTOJA AND MAYNE'
        WRITE(PROU,FMT='(''  TK  ='',D15.7)') ACCINF(ITSTEP,28)
        WRITE(PROU,FMT='('' XSIK ='',D15.7)') ACCINF(ITSTEP,29)
        IF ( INTAKT ) THEN
          WRITE(*,*) 'BFGS-UPDATE'
          WRITE(*,FMT='(''  TK  ='',D15.7)') ACCINF(ITSTEP,28)
          WRITE(*,FMT='('' XSIK ='',D15.7)') ACCINF(ITSTEP,29)
        ENDIF
      ELSE
        IF ( INTAKT ) WRITE(*,*) 'RESTART WITH SCALED UNIT MATRIX'
        WRITE(PROU,*) 'RESTART WITH SCALED UNIT MATRIX'
      ENDIF
      RETURN
15000 CONTINUE
      IF ( INTAKT ) WRITE(*,15100)
      WRITE(PROU,15100)
15100 FORMAT(///' SINGULAR CASE : FULL REGULARIZED SQP')
      IF ( INTAKT ) WRITE(*,*) '  DEL =',DEL
      WRITE(PROU,*) '  DEL =',DEL
      IF ( INTAKT )
     F  WRITE(*,15200) (ALIST(I),RES(ALIST(I)),GRESN(ALIST(I)),
     F                I=1,ALIST(0))
      WRITE(PROU,15200)  (ALIST(I),RES(ALIST(I)),GRESN(ALIST(I)),
     F                I=1,ALIST(0))
15200 FORMAT(//2X,'VALUES OF RESTRICTIONS',
     F       (/2X,2(:,'(',I4,2X,D12.5,2X,D12.5,')',2X)))
      IF ( INTAKT ) WRITE(*,12200) (W(I),I=1,NRES)
      WRITE(PROU,12200) (W(I),I=1,NRES)
      IF (  TE3 ) THEN
        HEAD='GRADIENTS OF CONSTRAINTS'
        CALL O8MDRU(GRES,NX,NRESM,N,NRES,HEAD,PROU,.FALSE.)
      ENDIF
      RETURN
16000 CONTINUE
      WRITE(PROU,*) 'EXIT FROM FULL SQP'
      WRITE(PROU,16100) (ACCINF(ITSTEP,I),I=30,32)
16100 FORMAT('            TERMINATION REASON ',E8.1,/
     F       '          FINAL VALUE OF TAUQP ',E11.4,/
     F       '      SUM NORM OF SLACK VECTOR ',E11.4)
      WRITE(PROU,7100) PHASE,SCF0,(D(I),I=1,N)
      IF ( NRES .NE. 0 ) WRITE(PROU,3100) (K,U(K),K=1,NRES)
      IF ( INTAKT ) THEN
        WRITE(*,*) 'EXIT FROM FULL SQP'
        WRITE(*,16100) (ACCINF(ITSTEP,I),I=30,32)
        WRITE(*,7100) PHASE,SCF0,(D(I),I=1,N)
        IF ( NRES .NE. 0 ) WRITE(*,3100) (K,U(K),K=1,NRES)
      ENDIF
      RETURN
17000 CONTINUE
      WRITE(PROU,*) 'SMALL DIRECTIONAL DERIVATIVE ',DIRDER,': FINISH'
      IF ( INTAKT )
     F  WRITE(*,*) 'SMALL DIRECTIONAL DERIVATIVE ',DIRDER,': FINISH'
      RETURN
18000 CONTINUE
      IF ( INTAKT )
     F WRITE(*,*) 'SMALL CORRECTION FROM FULL REGULARIZED SQP,FINISH'
      WRITE(PROU,*) 'SMALL CORRECTION FROM FULL REGULARIZED SQP,FINISH'
      RETURN
19000 CONTINUE
      WRITE(PROU,*) 'QP-SOLVER TERMINATED UNSUCCESSFULLY'
      IF ( INTAKT ) WRITE(*,*) 'QP-SOLVER TERMINATED UNSUCCESSFULLY'
      RETURN
20000 CONTINUE
      IF ( INTAKT ) WRITE(*,*) 'RESTART WITH SCALED UNIT MATRIX'
      WRITE(PROU,*) 'RESTART WITH SCALED UNIT MATRIX'
      RETURN
21000 CONTINUE
      RETURN
22000 CONTINUE
      RETURN
      END
