      BLOCK DATA
      IMPLICIT NONE
      INTEGER WJ
      DOUBLE PRECISION WA,WD,WU,WC,WB
      COMMON/WEAPONDAT/WA(5,20),WD(100),WU(20),WB(7),WC(5),WJ(7)
      DATA WA/
     F  1.D0,.84D0,.96D0,1.D0,.92D0, .95D0,.83D0,.95D0,1.D0,.94D0,
     F  1.D0,.85D0,.96D0,1.D0,.92D0, 1.D0,.84D0,.96D0,1.D0,.95D0,
     F  1.D0,.85D0,.96D0,1.D0,.95D0, .85D0,.81D0,.90D0,1.D0,.98D0,
     F  .9D0,.81D0,.92D0,1.D0,.98D0, .85D0,.82D0,.91D0,1.D0,1.D0,
     F  .8D0,.8D0,.92D0,1.D0,1.D0,   1.D0,.86D0,.95D0,.96D0,.90D0,
     F  1.D0,1.D0,.99D0,.91D0,.95D0, 1.D0,.98D0,.98D0,.92D0,.96D0,
     F  1.D0,1.D0,.99D0,.91D0,.91D0, 1.D0,.88D0,.98D0,.92D0,.98D0,
     F  1.D0,.87D0,.97D0,.98D0,.99D0,1.D0,.88D0,.98D0,.93D0,.99D0,
     F  1.D0,.85D0,.95D0,1.D0,1.D0,  .95D0,.84D0,.92D0,1.D0,1.D0,
     F  1.D0,.85D0,.93D0,1.D0,1.D0,  1.D0,.85D0,.92D0,1.D0,1.D0/
      DATA WC/2.D2,1.D2,3.D2,1.5D2,2.5D2/
      DATA WB/30.D0,1.D2,4.D1,5.D1,7.D1,35.D0,1.D1/
      DATA WJ/1,6,10,14,15,16,20/
      DATA WU/6.D1,2*5.D1,75.D0,4.D1,6.D1,3.5D1,3.D1,2.5D1,1.5D2,3.D1,
     F         4.5D1,1.25D2,2*2.D2,1.3D2,3*1.D2,1.5D2/
      END
      SUBROUTINE SETUP
      INCLUDE 'O8COMM.INC'
C
      INTEGER I
      GCONST(0)=.FALSE.
      DO I=1,112
        GCONST(I)=.TRUE.
      ENDDO
      RETURN
      END
      SUBROUTINE SETUP0
      INCLUDE 'O8COMM.INC'
      INTEGER I,J,NUSER
      INTEGER WJ
      DOUBLE PRECISION WA,WD,WU,WC,WB
      COMMON/WEAPONDAT/WA(5,20),WD(100),WU(20),WB(7),WC(5),WJ(7)
      PARAMETER (NUSER=100)
      DOUBLE PRECISION XST0(NUSER)
      DATA (XST0(I),I=1,NUSER)/
     F  5*6.D0,20*1.D0,5*20.D0,15*1.D0,5*8.D0,15*1.D0,5*10.D0,5*12.D0,
     F  5*7.D0,15*1.D0,5*3.D0  /
C   NAME IS IDENT OF THE EXAMPLE/USER AND CAN BE SET AT USERS WILL
C   THE FIRST CHARACTER MUST BE ALPHABETIC.  40 CHARACTERS MAXIMUM
       NAME='WEAPONH23'
C   X IS INITIAL GUESS AND ALSO HOLDS THE CURRENT SOLUTION
C   PROBLEM DIMENSION N=DIM(X), NH=DIM(H), NG=DIM(G)
      N=NUSER
      NH=0
      NG=112
      ANALYT=.TRUE.
      EPSDIF=0
      PROU=10
      MEU=20
C   DEL0 AND TAU0: SEE BELOW
      DEL0=1.D1
      TAU0=1.D4
      TAU=0.1D0
      DO I=1,N
      X(I)=XST0(I)
      ENDDO
C    GUNIT-ARRAY, SEE DONLPDOC.TXT
      DO J=0,12
      GUNIT(1,J)=-1
      GUNIT(2,J)=0
      GUNIT(3,J)=0
      ENDDO
      DO J=13,112
      GUNIT(1,J)=1
      GUNIT(2,J)=J-12
      GUNIT(3,J)=1
      ENDDO
      DO I=1,5
      DO J=1,20
      WD((I-1)*20+J)=DLOG(WA(I,J))
      ENDDO
      ENDDO
      NRESET=N
      RETURN
      END

C     OBJECTIVE FUNCTION
      SUBROUTINE EF(X,FX)
      INCLUDE 'O8FUCO.INC'
      DOUBLE PRECISION X(*),FX,SUM,PROD
      INTEGER WJ,I,J,K,IND
      DOUBLE PRECISION WA,WD,WU,WC,WB
      COMMON/WEAPONDAT/WA(5,20),WD(100),WU(20),WB(7),WC(5),WJ(7)
      ICF=ICF+1
      SUM=0.D0
      DO J=1,20
      PROD=0.D0
      K=J-20
      DO I=1,5
        IND=I*20+K
      PROD=PROD+X(IND)*WD(IND)
      ENDDO
      PROD=DEXP(PROD)-1.D0
      SUM=SUM+WU(J)*PROD
      ENDDO
      FX=SUM
      RETURN
      END
C     GRADIENT OF OBJECTIVE FUNCTION
      SUBROUTINE EGRADF(X,GRADF)
      INCLUDE 'O8FUCO.INC'
      DOUBLE PRECISION X(*),GRADF(*),SUM
C     USER DECLARATIONS, IF ANY ,FOLLOW
      INTEGER WJ,I,J,K,IND
      DOUBLE PRECISION WA,WD,WU,WC,WB
      COMMON/WEAPONDAT/WA(5,20),WD(100),WU(20),WB(7),WC(5),WJ(7)
      ICGF=ICGF+1
      DO J=1,20
      SUM=0.D0
      K=J-20
      DO I=1,5
        IND=I*20+K
      SUM=SUM+X(IND)*WD(IND)
      ENDDO
      DO I=1,5
        IND=I*20+K
      GRADF(IND)=WU(J)*WD(IND)*DEXP(SUM)
      ENDDO
      ENDDO
      RETURN
      END

C  COMPUTE THE I-TH EQUALITY CONSTAINT, VALUE IS HXI
      SUBROUTINE EH(I,X,HXI)
      INCLUDE 'O8FUCO.INC'
      INTEGER I
      DOUBLE PRECISION HXI,X(*)
      RETURN
      END
C  COMPUTE THE GRADIENT OF THE I-TH EQUALITY CONSTRAINT
      SUBROUTINE EGRADH(I,X,GRADHI)
      INCLUDE 'O8FUCO.INC'
      INTEGER I
      DOUBLE PRECISION X(*),GRADHI(*)
      RETURN
      END
C COMPUTE THE I-TH INEQUALITY CONSTAINT, BOUNDS INCLUDED
      SUBROUTINE EG(I,X,GXI)
      INCLUDE 'O8FUCO.INC'
      DOUBLE PRECISION GXI,X(*),SUM
      INTEGER I,I1,I2,J
      INTEGER WJ
      DOUBLE PRECISION WA,WD,WU,WC,WB
      COMMON/WEAPONDAT/WA(5,20),WD(100),WU(20),WB(7),WC(5),WJ(7)
      IF ( GUNIT(1,I+NH) .EQ. -1 ) CRES(I+NH)=CRES(I+NH)+1
      IF ( I .GT. 12 ) THEN
      GXI=X(I-12)
      ELSEIF ( I .GT. 7 ) THEN
      SUM=0.D0
      I1=I-7
      I2=(I1-1)*20
      DO J=1,20
        SUM=SUM+X(I2+J)
      ENDDO
      GXI=-SUM+WC(I1)
      ELSE
      SUM=0.D0
      DO J=1,5
      SUM=SUM+X((J-1)*20+WJ(I))
      ENDDO
      GXI=SUM-WB(I)
      ENDIF
      RETURN
      END
C COMPUTE THE GRADIENT OF THE I-TH INEQUALITY CONSTRAINT
      SUBROUTINE EGRADG(I,X,GRADGI)
      INCLUDE 'O8FUCO.INC'
      INTEGER I,J,I1,I2
      DOUBLE PRECISION X(*) ,GRADGI(*)
      INTEGER WJ
      DOUBLE PRECISION WA,WD,WU,WC,WB
      COMMON/WEAPONDAT/WA(5,20),WD(100),WU(20),WB(7),WC(5),WJ(7)
      IF ( GUNIT(1,I+NH) .NE. 1 ) CGRES(I+NH)=CGRES(I+NH)+1
      IF ( GUNIT(1,I+NH) .EQ. 1 ) RETURN
      DO  J=1,NX
      GRADGI(J)=0.D0
      ENDDO
      IF ( I .LE. 7 ) THEN
       DO J=1,5
       GRADGI((J-1)*20+WJ(I))=1.D0
       ENDDO
      ELSE
      I1=I-7
      I2=(I1-1)*20
      DO J=1,20
        GRADGI(I2+J)=-1.D0
      ENDDO
      ENDIF
      RETURN
      END

