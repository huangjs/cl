<?xml version="1.0" encoding="ANSI_X3.4-1968" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=ANSI_X3.4-1968" /><title>Alphabetical Listing of Settings</title><link rel="stylesheet" href="fomus.css" type="text/css" /><meta name="generator" content="DocBook XSL Stylesheets V1.70.1" /><link rel="start" href="index.html" title="FOMUS Documentation" /><link rel="up" href="ch05.html" title="Chapter&#160;5.&#160;Settings" /><link rel="prev" href="ch05s03.html" title="Complete FOMUS Settings" /><link rel="next" href="ch06.html" title="Chapter&#160;6.&#160;Marks" /></head><body><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">Alphabetical Listing of Settings</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="ch05s03.html">Prev</a>&#160;</td><th width="60%" align="center">Chapter&#160;5.&#160;Settings</th><td width="20%" align="right">&#160;<a accesskey="n" href="ch06.html">Next</a></td></tr></table><hr /></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="id335364"></a>Alphabetical Listing of Settings</h2></div></div></div><div class="variablelist"><dl><dt><span class="term"><code class="varname"><a id="setting.acc.caut.acc.dist"></a>:ACC-CAUT-ACC-DIST</code></span></dt><dd><p>
  	    This number represents the maximum distance a cautionary accidental may be from the note that causes it.
  	  </p></dd><dt><span class="term"><code class="varname"><a id="setting.acc.throughout.meas"></a>:ACC-THROUGHOUT-MEAS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, accidentals carry to the end of the measure.
  	  If set to <code class="literal">NIL</code>, accidentals affect only the note they precede.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.accidentals"></a>:AUTO-ACCIDENTALS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> automatically determines note spellings.
  	  If set to <code class="literal">NIL</code>, a generic set of note spellings is used (all notes receive flats except for F sharp).
	  The user may supply note spellings to override <span class="application">FOMUS</span>'s spellings.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.accs.module"></a>:AUTO-ACCS-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used for determining note spellings.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code>, <code class="literal">:ACC1</code>, 
  	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:ACC1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.beam.module"></a>:AUTO-BEAM-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used for beaming.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code> and <code class="literal">:BEAMS1</code>.
  	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:BEAMS1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.beams"></a>:AUTO-BEAMS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> determines beaming based on time signature information and
  	  decisions it makes regarding irregular measure divisions.
  	  If set to <code class="literal">NIL</code>, beaming decisions are made by the backend notation program.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.cautionary.accs"></a>:AUTO-CAUTIONARY-ACCS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> inserts several different kinds of cautionary accidentals.
    	  The user can supply her own cautionary accidentals with the <code class="function"><a href="ch06s02.html#mark.cautacc">:CAUTACC</a></code> mark.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.distr.rests.module"></a>:AUTO-DISTR-RESTS-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used for determining how rests are distributed among staves.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code> and <code class="literal">:RESTS1</code>.
  	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:RESTS1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.dyn.nodup"></a>:AUTO-DYN-NODUP</code></span></dt><dd><p>
  	    If set to <code class="literal">T</code>, indicates that <span class="application">FOMUS</span> should eliminate all redundant dynamic markings.
  	  </p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.grace.slurs"></a>:AUTO-GRACE-SLURS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> automatically puts slurs over all grace notes.
  	  If set to <code class="literal">NIL</code>, the user must supply all grace note slurs with
  	  <code class="function"><a href="ch06s02.html#mark.graceslur-">:STARTGRACESLUR-</a></code>,
	  <code class="function"><a href="ch06s02.html#mark.graceslur-">:GRACESLUR-</a></code> and <code class="function"><a href="ch06s02.html#mark.graceslur-">:ENDGRACESLUR-</a></code> marks.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.multivoice.comb.module"></a>:AUTO-MULTIVOICE-COMB-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used for determining how simultaneous notes from different voices are combined into chords on the same staff.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code> and <code class="literal">:COMB1</code>.
  	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:COMB1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.multivoice.notes"></a>:AUTO-MULTIVOICE-NOTES</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> combines simultaneous notes from different voices into chords.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.multivoice.rests"></a>:AUTO-MULTIVOICE-RESTS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> combines equivalent simultaneous rests from different voices into single rests.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.ottavas"></a>:AUTO-OTTAVAS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> automatically determines where to place ottava brackets.
  	  If set to <code class="literal">NIL</code>, the user must supply all ottava brackets with
	  <code class="function"><a href="ch06s02.html#mark.8up">:8UP</a></code>, <code class="function"><a href="ch06s02.html#mark.8down">:8DOWN</a></code>
  	  and related spanner marks.	  
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.ottavas.module"></a>:AUTO-OTTAVAS-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used for determining where ottava brackets occur.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code> and <code class="literal">:OTTAVAS1</code>.
  	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:OTTAVAS1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.override.timesigs"></a>:AUTO-OVERRIDE-TIMESIGS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> extends or contracts measures within certain bounds,
  	  adding new time signatures as necessary to fit measures into the user-supplied time signatures given
  	  in the <code class="varname"><a href="ch05s04.html#setting.global">GLOBAL</a></code> or <code class="varname"><a href="ch05s04.html#setting.parts">PARTS</a></code> settings.
  	  If set to <code class="literal">NIL</code>, <span class="application">FOMUS</span> simply cuts the last measure (also inserting a new time signature)
  	  before a new time signature change, resulting in measures of arbitrary sizes depending on where the cut occurs.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.percussion.durs"></a>:AUTO-PERCUSSION-DURS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> determines the durations of all percussion
	  instruments that have their <em class="structfield"><code><a href="ch04s10.html#perc.autodur">AUTODUR</a></code></em> slot
	  set to <code class="literal">T</code>.
	  Percussion instruments that don't need to be notated precisely with respect to duration are then notated
	  with durations that are simpler to read (without tying together groups of notes).
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.pizz/arco"></a>:AUTO-PIZZ/ARCO</code></span></dt><dd><p>
  	    If set to <code class="literal">T</code>, indicates that <span class="application">FOMUS</span> should convert each consecutive group of 
	    <code class="function"><a href="ch06s02.html#mark.pizz">:PIZZ</a></code> marks it finds to a single pair of
	    <code class="function"><a href="ch06s02.html#mark.pizz">:PIZZ</a></code> and <code class="function"><a href="ch06s02.html#mark.arco">:ARCO</a></code> marks.
	    This makes it easier to notate pizz. and arco changes by simply attaching <code class="function"><a href="ch06s02.html#mark.pizz">:PIZZ</a></code>
	    marks where they belong.
  	  </p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.quantize"></a>:AUTO-QUANTIZE</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> quantizes offsets and durations so that
  	  everything fits into the closest fitting tuplets and beat divisions possible.
  	  If set to <code class="literal">NIL</code>, all offset and duration values must be precise ratios or integers--
	  floating point numbers are treated with the <code class="function">RATIONALIZE</code> function in this case (this isn't recommended).
  	  If no quantizing is done and offsets and durations of events don't fit into anything that is "notatable" then 
	  <span class="application">FOMUS</span> will complain with an error.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.quantize.module"></a>:AUTO-QUANTIZE-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used for quantizing.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code>, <code class="literal">:QUANTIZE1-RMSE</code> and <code class="literal">:QUANTIZE1-AVE</code>.
	  <code class="literal">:QUANTIZE1-MSE</code> finds the closest fit to notation by minimizing the root mean squared error 
	   between the user's values and possible notational values.
	  <code class="literal">:QUANTIZE1-AVE</code> finds the closets fit by minimizing average error.
	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:QUANTIZE1-RMSE</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.staff/clef.changes"></a>:AUTO-STAFF/CLEF-CHANGES</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> automatically determines staff and clef changes for voices.
  	  If set to <code class="literal">NIL</code>, the user must supply all staff and clef changes with <code class="literal">:STAFF</code>, <code class="literal">:CLEF</code>
  	  and related marks.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.staff/clefs.module"></a>:AUTO-STAFF/CLEFS-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used to determine automatic staff and clef changes.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code> and <code class="literal">:STAVES/CLEFS1</code>.
  	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:STAVES/CLEFS1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.voices.module"></a>:AUTO-VOICES-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used for determining how notes are distributed into separate voices.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code> and <code class="literal">:VOICES1</code>.
  	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:VOICES1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.auto.voicing"></a>:AUTO-VOICING</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> automatically decides how to distribute notes among multiple voices,
  	  given the choices specified in the <code class="classname">NOTE</code>, <code class="classname">REST</code> and <code class="classname">MARK</code> objects.
  	  If set to <code class="literal">NIL</code>, the user must specify explicitly which voice an event belongs to.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.beat.division"></a>:BEAT-DIVISION</code></span></dt><dd><p>
  	  The value of this setting is used by the quantizing algorithm to determine how to round offsets and durations.  
  	  If only an integer is given, it represents the number of divisions per beat in a non-compound meter--
  	  the compound meter value is then calculated by multiplying the first number by 3/2.
  	  If specified as a list of two integers, the first integer represents the number of divisions per beat in a non-compound meter while
  	  the second represents the number of divisions in a compound meter.
  	  The first number must be a power of 2 while the second number 3/2 or 3/4 times a power of 2.
  	</p><p>
	  A <code class="varname"><a href="ch05s04.html#setting.beat.division">BEAT-DIVISION</a></code> of 2, for example, tells <span class="application">FOMUS</span>
	  to quantize to eighth-note values (if the current beat is a quarter-note).  
	  In a compound 12/4 meter, this setting also tells <span class="application">FOMUS</span> to quantize to an eighth-note value (2 multiplied by 3/2 
	  is 3, and there are 3 eighth-notes per beat).
	  In the same compound 12/4 meter, a setting of <code class="literal">'(4 6)</code> would cause durations to be quantized to sixteenth notes (there
	  are 6 sixteenth notes per beat).
	</p><p>
	  <code class="varname"><a href="ch05s04.html#setting.beat.division">BEAT-DIVISION</a></code> specifies only approximately how durations are quantized inside tuplets.
	  It is completely predictable only when the <code class="varname"><a href="ch05s04.html#setting.max.tuplet">MAX-TUPLET</a></code>
	  setting is set to <code class="literal">NIL</code> or the notation contains nothing that would generate any kind of tuplet.
	  When tuplets are allowed and <span class="application">FOMUS</span> tries to create them, it divides them into units that are as
	  close as possible in duration to the non-tuplet divisional units.
	  For example, if <code class="varname"><a href="ch05s04.html#setting.beat.division">BEAT-DIVISION</a></code> is set to <code class="literal">16</code> and it's allowable for
	  <span class="application">FOMUS</span> to try to divide one beat into a septuplet, then it's possible for notes to be quantized to either 16 or 14
	  divisions per beat (since a septuplet divides evenly into 14 units and 1/14 is the closest septuplet divisional duration to 1/16).
	</p></dd><dt><span class="term"><code class="varname"><a id="setting.caut.acc.next.meas"></a>:CAUT-ACC-NEXT-MEAS</code></span></dt><dd><p>
	  When set to <code class="literal">NIL</code>, indicates that cautionary accidentals may occur only in the same measure as the note that causes them.
	  When set to <code class="literal">1</code>, specifies that cautionary accidentals may occur only if they are in the measure immediately after the note that causes them.
    	  When set to <code class="literal">T</code> or <code class="literal">2</code>, specifies that cautionary accidentals may occur in any measure after the note that causes them.  
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.caut.acc.octaves"></a>:CAUT-ACC-OCTAVES</code></span></dt><dd><p>
  	  When set to <code class="literal">T</code>, the cautionary accidental algorithm places cautionary accidentals at all octave transpositions
  	  from the note that causes them.
  	  When set to the integer <code class="literal">1</code> or greater, specifies the maximum number of octaves a cautionary accidental
  	  can be from the note that causes it.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.caut.acc.ottavas"></a>:CAUT-ACC-OTTAVAS</code></span></dt><dd><p>
  	  When set to <code class="literal">T</code>, the cautionary accidental algorithm considers the presence of ottava brackets, placing
  	  cautionary accidentals where apparent octave transpositions might cause confusion.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.check.ranges"></a>:CHECK-RANGES</code></span></dt><dd><p>
  	  When set to <code class="literal">T</code>, activates a check that prints warnings if it finds notes out of range for their instruments.
  	  The <em class="structfield"><code>MINP</code></em> and <em class="structfield"><code>MAXP</code></em> slots in the appropriate <code class="classname">INSTR</code>
  	  object must be set for this to have any effect.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.cm.scale"></a>:CM-SCALE</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, indicates that the value of <code class="varname"><a href="ch05s04.html#setting.cm.scale">CM-SCALE</a></code> will be used
  	  to parse note symbols (as the value of the <code class="literal">:IN</code> keyword argument) if <span class="application">CM</span> is present and being used.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.cmn.view.exe"></a>:CMN-VIEW-EXE</code></span></dt><dd><p>
	      This is a string specifying the path and filename to the executable for the <span class="application">Common Music Notation</span> viewer application.
	      The full pathname may or may not need to be specified depending on the Lisp implementation.
	      The default application depends on what is installed on the user's machine, and should be
	      an application appropriate for viewing PostScript or EPS files.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.cmn.view.opts"></a>:CMN-VIEW-OPTS</code></span></dt><dd><p>
	      This is a list of strings representing options to be passed to the <span class="application">CMN</span> viewer application executable.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.comp.long.eighth.beam.count"></a>:COMP-LONG-EIGHTH-BEAM-COUNT</code></span></dt><dd><p>
  	  This is set to an integer greater than <code class="literal">0</code>, specifying the number of eighth notes that need to be present
  	  to be beamed as groups of 6 in compound meters.
  	  This setting is only effective if <code class="varname"><a href="ch05s04.html#setting.long.eighth.beams">LONG-EIGHTH-BEAMS</a></code> is set to <code class="literal">T</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.composer"></a>:COMPOSER</code></span></dt><dd><p>
  	  This is an optional string value containing the composer's name.	  
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.debug.filename"></a>:DEBUG-FILENAME</code></span></dt><dd><p>
  	  If set to a string, represents the name of a file to which debug information is dumped each time the <code class="function">FOMUS</code>
  	  function is called.
  	  If you wish to report a bug, please send the contents of this file.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.default.beat"></a>:DEFAULT-BEAT</code></span></dt><dd><p>
	    Specifies a default value for the <em class="structfield"><code><a href="ch04s03.html#timesig.beat">BEAT</a></code></em> slot of
	    <em class="structfield"><code><a href="ch04s03.html#class.timesig">TIMESIG</a></code></em> objects that are not compound time signatures.
	    This setting is <code class="literal">1/4</code> by default, specifying that for non-compound meters a quarternote is
	    equivalent to 1 beat.
	    In compound time signatures the beat is always infered from the denominator (for example, in a 12/8 meter the
	    beat is 3/8).
  	  </p></dd><dt><span class="term"><code class="varname"><a id="setting.default.grace.dur"></a>:DEFAULT-GRACE-DUR</code></span></dt><dd><p>
  	  If <span class="application">FOMUS</span> needs to convert a note into a grace note, this value is used as the grace note's duration.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.default.grace.num"></a>:DEFAULT-GRACE-NUM</code></span></dt><dd><p>
  	  If <span class="application">FOMUS</span> needs to convert a note into a grace note, this value is used as the grace note's default position number.
	  This value together with the grace note's context determines the actual position (when necessary, <span class="application">FOMUS</span> will
	  increment or decrement this value to determine the actual position number).
	  See the <em class="structfield"><code><a href="ch04s06.html#note.dur">DUR</a></code></em> slot in class <code class="classname"><a href="ch04s06.html#class.note">NOTE</a></code>
	  for more information.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.default.instr"></a>:DEFAULT-INSTR</code></span></dt><dd><p>
	    This is a default <code class="classname"><a href="ch04s09.html#struct.instr">INSTR</a></code> object to be used in cases when
	    another instrument isn't specified.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.default.meas.divs"></a>:DEFAULT-MEAS-DIVS</code></span></dt><dd><p>
  	  This list is a table containing possible ways of dividing measures into smaller segments or divisions.
	  These segments affect how notes are split, tied and beamed.
  	  Entries in this list replace entries in <span class="application">FOMUS</span>'s own default table if they exist.
  	  Each member of this list is itself a list, containing an integer or ratio lookup value as the first element followed by one or more lists of integers/ratios
  	  that each add up to the first number.
    	  </p><div class="example"><a id="id337118"></a><p class="title"><b>Example&#160;5.1.&#160;DEFAULT-MEAS-DIVS Setting</b></p><div class="example-contents"><pre class="programlisting">

:default-meas-divs
  '((3 (2 1) (1 2))
    (4 (2 2))
    (5 (3 2) (2 3))
    (6 (4 2) (2 4))
    (7 (4 3) (3 4)))
              </pre></div></div><p><br class="example-break" />
  	</p><p>  
  	  The numbers in these lists correspond to the number of beats in a measure, multiplied or divided by 2 if necessary.
	  In most cases, only specify integers should be necessary, though ratios may also be used.
  	  For example, if a 7/8 measure with a quarter-note beat is processed, <span class="application">FOMUS</span>
	  first tries to lookup a set of divisions using the index number 7/2, then 7, 14, etc..
	  This way the lookup value <code class="literal">7</code> is sufficient for any meter with a numerator of 7, though it's possible to supply
	  more specific entries such as <code class="literal">7/2</code> (for measures that contain 3 + 1/2 beats).
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.default.timesig"></a>:DEFAULT-TIMESIG</code></span></dt><dd><p>
  	  If no time signature is specified in the <code class="varname"><a href="ch05s04.html#setting.global">GLOBAL</a></code> or
	  <code class="varname"><a href="ch05s04.html#setting.parts">PARTS</a></code> lists, this default one is used.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.default.tuplet.divs"></a>:DEFAULT-TUPLET-DIVS</code></span></dt><dd><p>
  	  This list is a table containing possible ways of dividing tuplets into smaller segments or divisions.
	  These segments affect how notes are split, tied and beamed.
  	  Entries in this replace entries in <span class="application">FOMUS</span>'s own default table if they exist.
  	  Each member of this list is itself a list, containing an integer lookup value as the first element followed by one or more lists of integers
  	  that each add up to the first number.
    	  </p><div class="example"><a id="id337223"></a><p class="title"><b>Example&#160;5.2.&#160;DEFAULT-TUPLET-DIVS Setting</b></p><div class="example-contents"><pre class="programlisting">

:default-meas-divs
  '((3 (2 1) (1 2))
    (4 (2 2))
    (5 (3 2) (2 3) (4 1) (1 4))
    (6 (4 2) (2 4))
    (7 (4 3) (3 4)))
              </pre></div></div><p><br class="example-break" />
  	</p><p>  
  	  The numbers in this list correspond to numerators of tuplet ratios (or multiples or divisions of two).
	  When <span class="application">FOMUS</span> needs to find possible divisions for a triplet, for example, it uses the entries
	  in the list corresponding to lookup value <code class="literal">3</code>.
	  If it needs to lookup divisions for a sextuplet, it will first try to lookup the number <code class="literal">6</code> and then use
	  <code class="literal">3</code> if an entry for <code class="literal">6</code> doesn't exist.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.default.tuplets"></a>:DEFAULT-TUPLETS</code></span></dt><dd><p>
	    This list is a lookup table indicating what ratios <span class="application">FOMUS</span> should use when deciding how to notate tuplets.
	    Each list element is itself a list of two integers specifying a tuplet ratio, or how many durational units should be used in place of another.
	    <code class="literal">'(7 4)</code> thus specifies that septuplet eighth notes are to be used in place of 4 eighth notes.  <span class="application">FOMUS</span> 
	    searches this table by finding a match for number of tuplet divisions (the first integer in each pair) and checking the second integer to see if it's
	    appropriate for the context it is in (a power of 2 of the actual number of durational units).  
	    Thus, several entries for septuplets might exist: <code class="literal">'(7 4)</code> for the majority of cases and <code class="literal">'(7 5)</code> for 
	    cases where, for example, 7 eighth notes might span an entire 5/8 measure or a section of a larger tuplet.
    	  </p><div class="example"><a id="id333848"></a><p class="title"><b>Example&#160;5.3.&#160;DEFAULT-TUPLETS Setting</b></p><div class="example-contents"><pre class="programlisting">

:default-meas-divs '((3 2) (6 5) (5 4) (7 4) (7 5) (13 8) (13 10))
              </pre></div></div><p><br class="example-break" />
	  </p><p> 
	    The default value is <code class="literal">NIL</code>.
	    If <span class="application">FOMUS</span> doesn't find an entry for a tuplet division here, it determines its own depending on the value
	    of <code class="varname"><a href="ch05s04.html#setting.tuplet.function">TUPLET-FUNCTION</a></code>.
  	  </p></dd><dt><span class="term"><code class="varname"><a id="setting.dotted.note.level"></a>:DOTTED-NOTE-LEVEL</code></span></dt><dd><p>
  	  Indicates how dotted notes are allowed to appear.
  	  Possible values are <code class="literal">T</code>, <code class="literal">:ALL</code>, <code class="literal">:TOP</code> and <code class="literal">:SIG</code>.
  	  <code class="literal">:ALL</code> specifies that they can appear anywhere, <code class="literal">:TOP</code> specifies that they can appear
  	  only if they occupy an entire measure, and <code class="literal">:SIG</code> specifies that they can appear if they occupy durations
  	  larger than a beat.
  	  <code class="literal">T</code> is equivalent to <code class="literal">:ALL</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.double.dotted.notes"></a>:DOUBLE-DOTTED-NOTES</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, indicates that double-dotted notes are allowed.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.effective.grace.dur.mul"></a>:EFFECTIVE-GRACE-DUR-MUL</code></span></dt><dd><p>
  	  If <span class="application">FOMUS</span> needs to determine the effective duration of a grace note (for scoring or comparison purposes),
	  it multiplies the value of this setting
	  with the duration given in the grace note's <em class="structfield"><code><a href="ch04s06.html#note.dur">DUR</a></code></em> slot.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.ensemble.type"></a>:ENSEMBLE-TYPE</code></span></dt><dd><p>
  	  This setting determines how parts are both ordered and grouped
	  together with brackets and barlines in the score.
  	  Setting this to a symbol specifies a lookup value for a ordering/grouping table entry specified
	  in the <code class="varname"><a href="ch05s04.html#setting.instr.groups">INSTR-GROUPS</a></code> setting or
	  <span class="application">FOMUS</span>'s own default table.
  	  It may also be set to an ordering/grouping data structure, in which case this specified ordering/grouping is used instead.
	  An ordering/grouping data structure is a list of symbols or nested lists of symbols that specify both the groups and the layout order of parts.
  	  A symbol specifies an instrument while a list contains a group type
	  (a symbol designating what type of bracket is to appear on the left-hand margin
	  of the score and how barlines are to appear) followed by more instrument symbols or lists (see the example below).
  	  A group type is one of the symbols <code class="literal">:GROUP</code>, <code class="literal">:GRANDSTAFF</code> or <code class="literal">:CHOIRGROUP</code>.
  	</p><p>
  	  A look at the following examples might make this clearer:
    	  </p><div class="example"><a id="id337628"></a><p class="title"><b>Example&#160;5.4.&#160;ENSEMBLE-TYPE Setting 1</b></p><div class="example-contents"><pre class="programlisting">

:ensemble-type :orchestra
              </pre></div></div><p><br class="example-break" />
    	  </p><div class="example"><a id="id337641"></a><p class="title"><b>Example&#160;5.5.&#160;ENSEMBLE-TYPE Setting 2</b></p><div class="example-contents"><pre class="programlisting">

:ensemble-type
  '((:my-orchestra
     (:group (:group :piccolo :flute) (:group :oboe :english-horn)
             (:group :bf-clarinet :a-clarinet :bass-clarinet)
             (:group :bassoon :contra-bassoon))
     (:group (:group :horn) (:group :c-trumpet :bf-trumpet)
             (:group :alto-trombone :tenor-trombone :bass-trombone)
             (:group :tuba))
      :timpani :percussion
     (:grandstaff :piano) 
     (:group (:group :violin) (:group :viola) (:group :violoncello)
             (:group :contrabass))))
              </pre></div></div><p><br class="example-break" />
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.events"></a>:EVENTS</code></span></dt><dd><p>
  	  This is a global list of events to be processed by <span class="application">FOMUS</span>.
  	  An event can be a <code class="classname"><a href="ch04s06.html#class.note">NOTE</a></code>,
	  <code class="classname"><a href="ch04s07.html#class.rest">REST</a></code> or <code class="classname"><a href="ch04s08.html#class.mark">MARK</a></code> object.
  	  A <code class="classname"><a href="ch04s06.html#class.note">NOTE</a></code> or
	  <code class="classname"><a href="ch04s07.html#class.rest">REST</a></code> object must have a symbol or number in its
	  <em class="structfield"><code><a href="ch04s06.html#note.partid">PARTID</a></code></em>
  	  slot specifying which part it belongs to.
	  A <code class="classname"><a href="ch04s08.html#class.mark">MARK</a></code> object may have a default <em class="structfield"><code><a href="ch04s06.html#note.partid">PARTID</a></code></em>
	  value of <code class="literal">NIL</code> to specify all parts or
	  a symbol/number or list of symbols/numbers to specify only those parts.
	  (Note that specifying part ID information isn't necessary when event objects are listed in the 
	  <em class="structfield"><code><a href="ch04s02.html#part.events">EVENTS</a></code></em> slot of a
	  <code class="classname"><a href="ch04s02.html#class.part">PART</a></code> object.
  	  Including these objects in the events list provides an alternative to listing them inside <code class="classname"><a href="ch04s02.html#class.part">PART</a></code> objects.)
  	  See <a href="ch04.html" title="Chapter&#160;4.&#160;Objects">Objects</a> for more detailed descriptions of these objects and their uses.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.filename"></a>:FILENAME</code></span></dt><dd><p>
  	  This string represents the path and filename to which <span class="application">FOMUS</span> adds an appropriate extension when it saves
  	  output in various formats.
  	  This setting in combination with the <code class="varname"><a href="ch05s04.html#setting.output">OUTPUT</a></code> setting determines the actual output filenames.
    	  </p><div class="example"><a id="id337827"></a><p class="title"><b>Example&#160;5.6.&#160;FILENAME Setting</b></p><div class="example-contents"><pre class="programlisting">

:filename "path_to_output_directory/myoutput"
              </pre></div></div><p><br class="example-break" />
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.global"></a>:GLOBAL</code></span></dt><dd><p>
  	  This is a list of objects that have "global" influence over other events in the <code class="varname"><a href="ch05s04.html#setting.parts">PARTS</a></code>
  	  and <code class="varname"><a href="ch05s04.html#setting.events">EVENTS</a></code> settings.
  	  Only objects of type <code class="classname"><a href="ch04s03.html#class.timesig">TIMESIG</a></code> and
	  <code class="classname"><a href="ch04s05.html#class.keysig">KEYSIG</a></code> are allowed here (<code class="classname"><a href="ch04s05.html#class.keysig">KEYSIG</a></code>
  	  isn't implemented yet).
	  When a global object's <em class="structfield"><code><a href="ch04s03.html#timesig.partids">PARTIDS</a></code></em> slot is set to the default value of <code class="literal">NIL</code>
  	  the object affects all parts that don't already have a <code class="classname"><a href="ch04s03.html#class.timesig">TIMESIG</a></code> or
	  <code class="classname"><a href="ch04s05.html#class.keysig">KEYSIG</a></code> attached to them at that point.
	  When its <em class="structfield"><code><a href="ch04s03.html#timesig.partids">PARTIDS</a></code></em> slot is set to symbol or list of symbols the
	  object affects those parts only.
  	  This enables the specification of multiple simultaneous time signatures and polymeters (not implemented yet).
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.grandstaff.hide.rests"></a>:GRANDSTAFF-HIDE-RESTS</code></span></dt><dd><p>
  	  When set to <code class="literal">T</code> or <code class="literal">:SOME</code>, indicates that <span class="application">FOMUS</span> hides some rests
  	  when combining multiple voices in a grand staff.
	  This makes the notation easier to read for multi-staff instruments by eliminating rests that aren't necessary.
  	  When set to <code class="literal">:ALL</code> indicates that all rests in all parts are hidden (this could be more useful in the future
	  when proportional notation is supported).
  	  When set to <code class="literal">NIL</code> indicates that no rests are hidden.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.input.beat.value"></a>:INPUT-BEAT-VALUE</code></span></dt><dd><p>
	    When set to some real number greater than <code class="literal">0</code>, indicates that this durational value is to be interpreted as one beat.
	    <span class="application">FOMUS</span> scales all input objects by dividing offsets and durations by this value before doing any other processing.
	    A value of <code class="literal">NIL</code> is the default and is equivalent to <code class="literal">1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.input.offset"></a>:INPUT-OFFSET</code></span></dt><dd><p>
	    When set to some real number, indicates that this durational value is to be interpreted as one beat.
	    <span class="application">FOMUS</span> shifts all input objects by adding this value to all offsets before doing any other processing.
	    A value of <code class="literal">NIL</code> is the default and is equivalent to <code class="literal">0</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.instr.groups"></a>:INSTR-GROUPS</code></span></dt><dd><p>
  	  The value of this setting is a table in the form of a list that provides a way of adding instrument orderings and groupings
	  to <span class="application">FOMUS</span>'s own default table.
	  These tables map symbol lookup values to ordering/grouping data structures which specify how parts are both ordered and grouped
	  together with brackets and barlines in the score.
  	  The user may choose one of these groupings by setting <code class="varname"><a href="ch05s04.html#setting.ensemble.type">ENSEMBLE-TYPE</a></code> to
	  a symbol lookup value.
  	  The user-supplied list is searched first so user-supplied orderings/groupings can override <span class="application">FOMUS</span>'s
	  default orderings/groupings.
	</p><p>	  
	  The setting is a list of lists, the first element in each inner list containing a symbol specifying a unique lookup name.
	  These are followed by grouping/ordering definitions:
	  symbols or nested lists of symbols that specify both the groups and the layout order of parts.
  	  In this data structure a symbol specifies an instrument while a list contains a group type
	  (a symbol designating what type of bracket is to appear on the left-hand margin
	  of the score and how barlines are to appear) followed by more instrument symbols or lists (see the example below).
  	  A group type is one of the symbols <code class="literal">:GROUP</code>, <code class="literal">:GRANDSTAFF</code> or <code class="literal">:CHOIRGROUP</code>.
  	</p><p>
  	  A look at the following example might make this clearer:
    	  </p><div class="example"><a id="id338147"></a><p class="title"><b>Example&#160;5.7.&#160;INSTR-GROUPS Setting</b></p><div class="example-contents"><pre class="programlisting">

:instr-groups
  '((:orchestra
     (:group (:group :piccolo :flute) (:group :oboe :english-horn)
             (:group :bf-clarinet :a-clarinet :bass-clarinet)
             (:group :bassoon :contra-bassoon))
     (:group (:group :horn) (:group :c-trumpet :bf-trumpet)
             (:group :alto-trombone :tenor-trombone :bass-trombone)
             (:group :tuba))
      :timpani :percussion
     (:grandstaff :piano) 
     (:group (:group :violin) (:group :viola) (:group :violoncello)
             (:group :contrabass)))
    (:ensemble
     :piccolo :flute :oboe :english-horn :bf-clarinet :a-clarinet :bassoon
     :contra-bassoon (:grandstaff :piano)))
              </pre></div></div><p><br class="example-break" />
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.instruments"></a>:INSTRUMENTS</code></span></dt><dd><p>
  	  The user can use this setting to specify additional <code class="classname"><a href="ch04s09.html#struct.instr">INSTR</a></code>
	  objects that are added to the default instrument list.
  	  <span class="application">FOMUS</span> searches this list before its own default list when resolving symbols to instrument definitions, so they may 
  	  be replacements or modifications of existing instruments.
	  The contents are either instrument objects created with <code class="function"><a href="ch04s09.html#function.make.instr">MAKE-INSTR</a></code>
	  or lists specifying modifications to <span class="application">FOMUS</span>'s default instruments (or a combination of both).
	  If a list is specified, it contains a symbol specifying a default instrument followed by keyword/argument pairs indicating slot values that replace 
	  existing default values (see the <em class="structfield"><code><a href="ch04s02.html#part.instr">INSTR</a></code></em> slot in the
	  <code class="classname"><a href="ch04s02.html#class.part">PART</a></code> object
	  and <a href="ch04s02.html#example.part.instr.slot.setting">PART-INSTR Slot Setting</a> for an example of this).
    	  </p><div class="example"><a id="id338251"></a><p class="title"><b>Example&#160;5.8.&#160;INSTRUMENT Setting</b></p><div class="example-contents"><pre class="programlisting">

:instrument
  (list (make-instr :recorder :clefs :treble)
        '(:piano :staves 3 :simultlim 6))
              </pre></div></div><p><br class="example-break" />
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.exe"></a>:LILYPOND-EXE</code></span></dt><dd><p>
	      This is a string specifying the path and filename to the <span class="application">LilyPond</span> executable.
	      The full pathname may or may not need to be specified depending on the Lisp implementation.	    
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.filehead"></a>:LILYPOND-FILEHEAD</code></span></dt><dd><p>
	      This is a string or list of strings representing text to be inserted directly into a <span class="application">LilyPond</span> output file.
	      Each string in the list is followed by a carriage return.
	      The text is inserted near the top of the file at a point before any score or part data appears.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.opts"></a>:LILYPOND-OPTS</code></span></dt><dd><p>
	      This is a list of strings representing options to be passed to the <span class="application">LilyPond</span> executable.
	      The default is currently <code class="literal">'("--ps")</code> for Linux or <code class="literal">'("--pdf")</code> for OS X/Windows,
	      specifying that <span class="application">LilyPond</span> should generate either a PostScript or PDF format file.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.out.ext"></a>:LILYPOND-OUT-EXT</code></span></dt><dd><p>
	      This is a string specifying the extension for the output filename that is created when <span class="application">LilyPond</span> is run.
	      The default is <code class="literal">"ps"</code> for Linux and <code class="literal">"pdf"</code> for OS X/Windows.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.scorehead"></a>:LILYPOND-SCOREHEAD</code></span></dt><dd><p>
	      This is a string or list of strings representing text to be inserted directly into a <span class="application">LilyPond</span> output file 
	      at the beginning of a score block.  Each string in the list is followed by a carriage return.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.text.markup"></a>:LILYPOND-TEXT-MARKUP</code></span></dt><dd><p>
	      This is a "wrapper" string specifying <span class="application">LilyPond</span> markup instructions to be used when
	      printing text above or below the staff.
	      The string must have an <code class="literal">~A</code> or similar substring to indicate where to place the actual text
	      (as if in a call to <code class="function">FORMAT</code>).
	      The default value is <code class="literal">"\markup{\italic{~A}}"</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.textacc.markup"></a>:LILYPOND-TEXTACC-MARKUP</code></span></dt><dd><p>
	      This is a "wrapper" string specifying <span class="application">LilyPond</span> markup instructions to be used when
	      engraving accidentals as text.
	      The string must have an <code class="literal">~A</code> or similar substring to indicate where to place the actual text
	      (as if in a call to <code class="function">FORMAT</code>).
	      The default value is <code class="literal">"\\markup{\\tiny{~A}}"</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.textdyn.markup"></a>:LILYPOND-TEXTDYN-MARKUP</code></span></dt><dd><p>
	      This is a "wrapper" string specifying <span class="application">LilyPond</span> markup instructions to be used when
	      printing text in a dynamic-type font.
	      The string must have an <code class="literal">~A</code> or similar substring to indicate where to place the actual text
	      (as if in a call to <code class="function">FORMAT</code>).
	      The default value is <code class="literal">"\markup{\dynamic{\italic{\bold{~A}}}}"</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.textnote.markup"></a>:LILYPOND-TEXTNOTE-MARKUP</code></span></dt><dd><p>
	      This is a "wrapper" string specifying <span class="application">LilyPond</span> markup instructions to be used when
	      printing text above single notes.
	      The string must have an <code class="literal">~A</code> or similar substring to indicate where to place the actual text
	      (as if in a call to <code class="function">FORMAT</code>).
	      The default value is <code class="literal">"\markup{\italic{~A}}"</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.texttempo.markup"></a>:LILYPOND-TEXTTEMPO-MARKUP</code></span></dt><dd><p>
	      This is a "wrapper" string specifying <span class="application">LilyPond</span> markup instructions to be used when
	      printing text in a heavy "tempo" font.
	      The string must have an <code class="literal">~A</code> or similar substring to indicate where to place the actual text
	      (as if in a call to <code class="function">FORMAT</code>).
	      The default value is <code class="literal">"\markup{\bold{\huge{~A}}}"</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.version"></a>:LILYPOND-VERSION</code></span></dt><dd><p>
	      If set to a string (for example, <code class="literal">"2.8"</code>), forces <span class="application">FOMUS</span> to output <span class="application">LilyPond</span> files for that
	      version.
  	  </p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.view.exe"></a>:LILYPOND-VIEW-EXE</code></span></dt><dd><p>
	      This is a string specifying the path and filename to the executable for the <span class="application">LilyPond</span> viewer application.
	      The full pathname may or may not need to be specified depending on the Lisp implementation.
	      The default application depends on what is installed on the user's machine, and should be
	      one appropriate for viewing PostScript files.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.lilypond.view.opts"></a>:LILYPOND-VIEW-OPTS</code></span></dt><dd><p>
	      This is a list of strings representing options to be passed to the <span class="application">LilyPond</span> viewer application executable.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.long.eighth.beam.count"></a>:LONG-EIGHTH-BEAM-COUNT</code></span></dt><dd><p>
  	  This is set to an integer greater than <code class="literal">0</code>, specifying the number of eighth notes that need to be present
  	  to be beamed as a group of 4.
  	  This setting is only effective if <code class="varname"><a href="ch05s04.html#setting.long.eighth.beams">LONG-EIGHTH-BEAMS</a></code> is set to <code class="literal">T</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.long.eighth.beams"></a>:LONG-EIGHTH-BEAMS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, specifies that the beaming algorithm should beam eighth notes into groups of up
  	  to 4 under certain conditions (if enough of them are present).
  	  If set to <code class="literal">:ALWAYS</code>, specifies that eighth notes are always beamed in groups of 4.
  	  If set to <code class="literal">NIL</code>, specifies that eighth notes are never beamed in groups of 4.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.max.ottava.rest.dist"></a>:MAX-OTTAVA-REST-DIST</code></span></dt><dd><p>
  	  This is a real number greater than <code class="literal">0</code>, specifying the maximum distance an ottava bracket will span over a group
  	  of contiguous rests.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.max.tuplet"></a>:MAX-TUPLET</code></span></dt><dd><p>
  	  If set to an integer, represents the largest tuplet allowed.
  	  If set to a list of integers, represents the largest tuplets allowed for each nested tuplet level (and also specifies how many levels of
  	  tuplet nesting are allowed by the length of the list).
  	  A value of <code class="literal">'(7 3)</code>, for example, specifies two levels of tuplet nesting with septuplets being the maximum
  	  allowed in the outer level and triplets being the maximum in the inner level.
	  A value of <code class="literal">NIL</code> specifies that no tuplets are to be used.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.max.tuplet.dur"></a>:MAX-TUPLET-DUR</code></span></dt><dd><p>
  	  This is the largest duration in beats that a tuplet can span.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.min.auto.timesig.dur"></a>:MIN-AUTO-TIMESIG-DUR</code></span></dt><dd><p>
  	  if <code class="varname"><a href="ch05s04.html#setting.auto.override.timesigs">AUTO-OVERRIDE-TIMESIGS</a></code> is set to <code class="literal">T</code>,
	  <span class="application">FOMUS</span> automatically generates new time signatures as necessary to fit measures into the
  	  time signatures specified in the <code class="varname"><a href="ch05s04.html#setting.global">GLOBAL</a></code> and 
	  <code class="varname"><a href="ch05s04.html#setting.parts">PARTS</a></code> list.
  	  The value of this setting represents the smallest duration (in beats) of any such time signature that is generated.
  	  See <a href="ch04s03.html#class.timesig">TIMESIG</a> and <a href="ch04s04.html#class.timesig.repl">TIMESIG-REPL</a> for more information.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.min.grandstaff.hide.rests.dur"></a>:MIN-GRANDSTAFF-HIDE-RESTS-DUR</code></span></dt><dd><p>
  	  This is a real number greater than <code class="literal">0</code>, specifying the minimum duration that a group of simultaneous rests must occupy
  	  in order for some of them to be hidden.
  	  This is applicable only when there are multiple voices on a staff, in cases where several simultaneous rests can be
	  shown as one rest.
	  <code class="varname"><a href="ch05s04.html#setting.auto.multivoice.rests">AUTO-MULTIVOICE-RESTS</a></code> must also be set to <code class="literal">T</code>
	  for this to have any effect.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.min.multivoice.chords.dur"></a>:MIN-MULTIVOICE-CHORDS-DUR</code></span></dt><dd><p>
  	  This is a real number greater than <code class="literal">0</code>, specifying the minimum duration a group of simultaneous notes in separate
  	  voices must span to be combined into chords. 
	  This is applicable only when there are multiple voices on a staff, and if 
	  <code class="varname"><a href="ch05s04.html#setting.auto.multivoice.notes">AUTO-MULTIVOICE-NOTES</a></code> is set to <code class="literal">T</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.min.split.all.parts.dur"></a>:MIN-SPLIT-ALL-PARTS-DUR</code></span></dt><dd><p>
  	  This is the smallest duration that <span class="application">FOMUS</span> will consider when deciding whether or
	  not to "split" or divide all parts together or separately.
	  (Splitting means splitting and tying notes as necessary to properly notate a given rhythm in a given measure.)
	  A unit of music must be larger than this value to be considered--units equal to or smaller than this duration are not considered.
	  <span class="application">FOMUS</span> splits measures in all parts together up to a certain point to insure that the notation is
	  consistently divided in all parts.
	  A 5/8 measure, for example, will be consistently divided as either 3 + 2 to 2 + 3 in all parts together 
	  (as long as the value of this setting is smaller than the duration of a 5/8 measure).
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.min.tuplet.dur"></a>:MIN-TUPLET-DUR</code></span></dt><dd><p>
  	  This is the smallest duration in beats that a tuplet can span.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.parts"></a>:PARTS</code></span></dt><dd><p>
  	  This is a list of <code class="classname"><a href="ch04s02.html#class.part">PART</a></code> objects, each representing a stave or grand staff in the score.
  	  At least one part must be specified.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.output"></a>:OUTPUT</code></span></dt><dd><p>
  	  This is either a list or a list of lists specifying one or more output files with optional keyword/argument pairs for tweaking their contents.
  	  <span class="application">FOMUS</span>'s built-in output symbols are <code class="literal">:DATA</code> or <code class="literal">:FOMUS</code>, <code class="literal">:RAW</code>, <code class="literal">:MUSICXML</code>, 
	  <code class="literal">:MUSICXML-SIBELIUS</code>, <code class="literal">:MUSICXML-FINALE</code>, <code class="literal">:CMN</code>, <code class="literal">:LILYPOND</code> and <code class="literal">:MIDI</code>.
  	  More information on these is given in <a href="ch07.html" title="Chapter&#160;7.&#160;Outputs">Outputs</a>.
  	  The following are examples of valid output specifications:
  	  </p><div class="example"><a id="id339228"></a><p class="title"><b>Example&#160;5.9.&#160;OUTPUT Setting 1</b></p><div class="example-contents"><pre class="programlisting">

:output '(:data (:lilypond :view t))
              </pre></div></div><p><br class="example-break" />
  	  </p><div class="example"><a id="id339242"></a><p class="title"><b>Example&#160;5.10.&#160;OUTPUT Setting 2</b></p><div class="example-contents"><pre class="programlisting">

:output '(:lilypond :filename "myfile.ly" :view nil)
              </pre></div></div><p><br class="example-break" />
  	  </p><div class="example"><a id="id339255"></a><p class="title"><b>Example&#160;5.11.&#160;OUTPUT Setting 3</b></p><div class="example-contents"><pre class="programlisting">

:output :cmn
              </pre></div></div><p><br class="example-break" />
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.percussion"></a>:PERCUSSION</code></span></dt><dd><p>
  	  This is a list of <code class="classname"><a href="ch04s10.html#struct.perc">PERCUSSION</a></code> objects serving as a lookup table for information pertaining to
  	  percussion notation.
  	  <code class="classname"><a href="ch04s10.html#struct.perc">PERCUSSION</a></code> objects are listed in
	  <code class="classname"><a href="ch04s09.html#struct.instr">INSTR</a></code> objects to define
	  collections of percussion instruments that are notated together on a single staff.
  	  <span class="application">FOMUS</span> searches this user setting list before its own default list when 
	  resolving symbols to percussion instrument definitions, so they may 
  	  be replacements or modifications of <span class="application">FOMUS</span>'s predefined percussion instruments.
	  The contents are either percussion objects created with <code class="function"><a href="ch04s10.html#function.make.perc">MAKE-PERC</a></code>
	  or lists specifying modifications to <span class="application">FOMUS</span>'s default percussion objects (or a combination of both).
	  If a list is specified, it contains a symbol specifying a default percussion instrument followed by keyword/argument pairs indicating slot values that replace 
	  existing default values (see the <em class="structfield"><code><a href="ch04s09.html#instr.percs">PERCS</a></code></em> slot in the
	  <code class="classname"><a href="ch04s09.html#struct.instr">INSTR</a></code> object for an example of this).          
    	  </p><div class="example"><a id="id339360"></a><p class="title"><b>Example&#160;5.12.&#160;PERCUSSION Setting</b></p><div class="example-contents"><pre class="programlisting">

:instrument
  (list (make-perc :anvil :note -3 :voice 2 :midinote-ex 79)
        '(:triangle :note 0 :voice 1))
              </pre></div></div><p><br class="example-break" />
  	  See the documentation for <code class="classname"><a href="ch04s10.html#struct.perc">PERCUSSION</a></code> objects for more information.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.quality"></a>:QUALITY</code></span></dt><dd><p>
	    This is a real number indicating how much <span class="application">FOMUS</span> should trade 
	    speed of computation for "quality" of output.
	    Setting it lower increases speed while setting it higher gives better results.
	    The default is <code class="literal">1</code>, which is reasonable for relatively uncomplicated scores with a small number of parts.
	    The most effective values are between approximately <code class="literal">-3</code> and <code class="literal">3</code>, though complex
	    scores might show a little improvement (better guesses within a larger context) with values of <code class="literal">5</code> or more.
	    After a certain point increasing this value only makes the program run slower with no noticeable improvement in output. 
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.quartertones"></a>:QUARTERTONES</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, <span class="application">FOMUS</span> rounds pitches to quartertone values
	  and uses quartertone notation in the score.
	  This only works if the algorithm specified by the <code class="varname"><a href="ch05s04.html#setting.auto.accs.module">AUTO-ACCS-MODULE</a></code> setting
	  supports it.
	  <span class="application">FOMUS</span>'s default module <code class="literal">:NOKEY1</code> supports quartertones.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.shortlongshort.notes.level"></a>:SHORTLONGSHORT-NOTES-LEVEL</code></span></dt><dd><p>
  	  Indicates how "short-long-short" note patterns are allowed to appear.
  	  An example of such a pattern is an eighth note followed by a quarter note then an eighth note, and is treated as
  	  an exception to insure that the middle note isn't split in the middle and tied.
  	  Possible values are <code class="literal">T</code>, <code class="literal">:ALL</code>, <code class="literal">:TOP</code> and <code class="literal">:SIG</code>.
  	  <code class="literal">:ALL</code> specifies that this pattern can appear anywhere, <code class="literal">:TOP</code> specifies that it can appear
  	  only if it occupies an entire measure, and <code class="literal">:SIG</code> specifies that it can appear if it occupies a duration
  	  larger than a beat.
  	  <code class="literal">T</code> is equivalent to <code class="literal">:ALL</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.split.module"></a>:SPLIT-MODULE</code></span></dt><dd><p>
  	  Designates which module is to be used for splitting and tying notes.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code> and <code class="literal">:SPLIT1</code>.
  	  <code class="literal">T</code> represents the default module and is equivalent to <code class="literal">:SPLIT1</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.subtitle"></a>:SUBTITLE</code></span></dt><dd><p>
  	  This is an optional string value containing the subtitle of the composition.	  
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.syncopated.notes.level"></a>:SYNCOPATED-NOTES-LEVEL</code></span></dt><dd><p>
  	  When set to <code class="literal">T</code>, indicates that a certain syncopated note pattern,
	  a short note followed by any number of long notes then a short note, may appear.
  	  An example of such a pattern is an eighth note followed by several quarter notes then an eighth note.
	  This can only occur if the pattern occupies the duration of an entire measure.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.timesig.style"></a>:TIMESIG-STYLE</code></span></dt><dd><p>
  	  This indicates how time signature are printed.
  	  It can be set to <code class="literal">:FRACTION</code> or <code class="literal">:COMMON</code>, specifying that either fractional or common
  	  time signatures are to be used in the backend (given the choice).
  	  The default value of <code class="literal">NIL</code> is equivalent to specifying <code class="literal">:FRACTION</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.title"></a>:TITLE</code></span></dt><dd><p>
  	  This is an optional string value containing the title of the composition.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.transpose"></a>:TRANSPOSE</code></span></dt><dd><p>
  	  When set to <code class="literal">T</code>, activates a transposition function that automatically transposes note values.
  	  The <em class="structfield"><code><a href="ch04s09.html#instr.tpose">TPOSE</a></code></em> slot of the appropriate <code class="classname"><a href="ch04s09.html#struct.instr">INSTR</a></code>
	  objects must be set for this to have any effect.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.tuplet.dotted.rests"></a>:TUPLET-DOTTED-RESTS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, specifies whether or not dotted rests are allowed inside tuplets of irregular (ie. not a power of 2)
  	  divisions.
  	  For example, a quintuplet might be divided into a dotted eight rest followed by an eighth note if
	  <code class="varname"><a href="ch05s04.html#setting.tuplet.dotted.rests">TUPLET-DOTTED-RESTS</a></code> is true. 
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.tuplet.function"></a>:TUPLET-FUNCTION</code></span></dt><dd><p>
  	  Designates which function is to be used for determining tuplet ratios.
  	  <span class="application">FOMUS</span>'s built-in values are <code class="literal">T</code>, <code class="literal">:POW2</code> and <code class="literal">:DUR</code>.
  	  <code class="literal">T</code> represents the default function and is equivalent to <code class="literal">:POW2</code>.
	  <code class="literal">:POW2</code> determines tuplet ratios based on the rule that the number of tuplet divisions replace (in most cases)
	  the number of durational units equaling the next lowest power of two.  <span class="application">FOMUS</span> thus notates 7 in the time of 4
	  and 13 in the time of 8. <code class="literal">:DUR</code> determines ratios
	  by finding the closest number of durational units to the number of tuplet divisions.  <span class="application">FOMUS</span> then notates
	  7 in the time of 8 and 13 in the time of 16.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.tuplet.style"></a>:TUPLET-STYLE</code></span></dt><dd><p>
  	  Specifies how tuplets are to be printed.
  	  The possible values are <code class="literal">:RATIO</code> or <code class="literal">:SINGLE</code>.
  	  The default value of <code class="literal">NIL</code> is equivalent to <code class="literal">:SINGLE</code>.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.use.cm"></a>:USE-CM</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, indicates that <span class="application">FOMUS</span> should use <span class="application">Common Music</span> functions if present.
  	  Note symbols are then parsed by <span class="application">CM</span> using the value of
  	  <code class="varname"><a href="ch05s04.html#setting.cm.scale">CM-SCALE</a></code> as if it were passed as the <code class="literal">:IN</code> argument to 
	  <span class="application">CM</span>'s <code class="function">KEYNUM</code> function.
  	  Also, durations specified as symbols indicate notational durations and are interpreted
  	  as such using <span class="application">CM</span>'s <code class="function">RHYTHM</code> function.
	  Numbers are still interpreted by <span class="application">FOMUS</span> in terms of beats.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.use.double.accs"></a>:USE-DOUBLE-ACCS</code></span></dt><dd><p>
  	  If set to <code class="literal">T</code>, the note spelling algorithm considers double sharps and double flats in addition to
	  single sharps and flats.
  	</p></dd><dt><span class="term"><code class="varname"><a id="setting.verbose"></a>:VERBOSE</code></span></dt><dd><p>
  	  This must be set to a value from <code class="literal">0</code> to <code class="literal">2</code>, indicating the amount of printed output.
  	  A value of <code class="literal">0</code> represents minimal output while a value of <code class="literal">2</code> represents maximal output.
  	</p></dd></dl></div></div><div class="navfooter"><hr /><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="ch05s03.html">Prev</a>&#160;</td><td width="20%" align="center"><a accesskey="u" href="ch05.html">Up</a></td><td width="40%" align="right">&#160;<a accesskey="n" href="ch06.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">Complete <span class="application">FOMUS</span> Settings&#160;</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">&#160;Chapter&#160;6.&#160;Marks</td></tr></table></div></body></html>
