About:

SA (SndObj Audio) is a system for mainly realtime synthesis based on the SndObj
library and for use with cm.

This is a very experimental release.

Installation:

Installation assumes ASDF, CFFI and Portaudio and the SndObj library  have been
installed.

* The portaudio library should be a relatively recent version of v19 branch
http://www.portaudio.com/usingsvn.html

* SndObj should be most recent from CVS
http://music.nuim.ie//musictec/SndObj/main.html

libsa needs to be built. run 'make -f Makefile.darwin' to build an OSX shared
library. See TODO notes below for other platforms.


To load without Common Music: (require :asdf) (push "/path/to/cffi/"
asdf:*central-registry*) (push "/path/to/sa/" asdf:*central-registry*)
(asdf:operate 'asdf:load-op :sa)

To load in Common Music: (use-system :sa)


TODO/NOTES:

Since this is an experimental release there are many serious shortcomings. Here
is a list of some of the major things left todo.

* Proper configure and Makefile. Should be easy but I have not had time.

* Make output device selectable. Right now it outputs to default device.

* Testing on other platforms. Makefile should have similiar options as the
SndObj lib build.

* Proper testing of all sndobjs

* Audio Input

* Better implementation of busses. Should have idea of whether they are being
"touched". Right now all busses are processed whether being written to or not.

* Make binary operators (e.g. +~ *~) n-ary.

* Search for memory leaks

* Faster synth initialization - Right now the body of the synth is evaluated for
each new instance so that conditional synth definitions are enabled. However,
for synths that don't need this it adds an overhead since it could be
initialized much faster if this didn't happen. Perhaps this could be a keyword
arg that switch this on or off for each synth.

* Changing currently running synths. It is possible now but needs better
mechanism

* Using synths as new processors - feasible on C++ since synths are actually
SndObjs. Needs investigation on lisp side

* Tidy up names

* snd-sin-io seems broken in SndObj

* pausing of objects 

* clean up conflict between -+ 1.0 amplitude and -+32767.0









Contact:

Todd Ingalls <testcase (at) asu (dot) edu>





