;; Object lexer/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lexer/"
  :tables (list 
   (semanticdb-table "lexer.asd"
    :major-mode 'lisp-mode
    :tags '(("in-package" code nil nil [79 101]) ("asdf:defsystem" code nil nil [103 219]))
    :file "lexer.asd"
    :pointmax 221
    )
   (semanticdb-table "lexer.lisp"
    :major-mode 'lisp-mode
    :tags '(("in-package" code nil nil [72 91]) ("tokenize" function (:arguments ("str" "pos-var" "&rest" "rules")) nil [332 415]) ("editor:setup-indent" code nil nil [429 468]) ("expand-tokenize" function (:arguments ("str" "pos" "rules" "&aux" "strvar" "matchedp")) nil [470 703]) ("expand-tokenize-rules" function (:arguments ("str" "pos" "matchedp" "rules")) nil [706 1281]) ("deflexer" function (:arguments ("name" "&rest" "rules")) nil [2445 5968]) ("editor:setup-indent" code nil nil [5982 6021]) ("extract-patterns-and-actions" function (:arguments ("rules" "&aux" "patterns" "actions")) nil [6109 6479]) ("combine-patterns" function (:arguments ("pats")) nil [6612 7102]) ("make-lexer-actions" function (:arguments ("actions")) nil [7209 7353]) ("num" function nil nil [8295 8315]) ("num" function (:parent "number" :arguments ("x")) nil [8316 8348]) ("num" function (:parent "string" :arguments ("x")) nil [8385 8496]) ("int" function nil nil [8514 8534]) ("int" function (:parent "integer" :arguments ("x")) nil [8535 8568]) ("int" function (:parent "number" :arguments ("x")) nil [8569 8609]) ("int" function (:parent "string" :arguments ("x")) nil [8646 8771]))
    :file "lexer.lisp"
    :pointmax 8773
    :unmatched-syntax 'nil
    )
   (semanticdb-table "packages.lisp"
    :major-mode 'lisp-mode
    :tags '(("delete-lexer" function nil nil [291 340]))
    :file "packages.lisp"
    :pointmax 342
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
