;;; Translated code for  DSK:SHARE2;SUBMAC 1
;;; Written on Saturday, Aug 23, 1980  1:35pm, from MACSYMA 290
;;; Translated for GJC
;;; TRANSL version 1037 TRANS1 version NIL TRANS2 version 21
;;; TRANS3 version NIL TRANS4 version NIL TRANS5 version 19
;;; TRANSF version NIL TRUTIL version 14 TRMODE version 37
;;; TRDATA version 40
;;; General declarations required for translated MACSYMA code.
(DECLARE (COMMENT SEE THE INCLUDE FILE))
(INCLUDEF (COND ((STATUS FEATURE ITS) '|LIBMAX;TINCLU >|)
		((STATUS FEATURE MULTICS) '|translate|)
		((STATUS FEATURE UNIX) '|libmax//tinclu.l|)
		(T (ERROR '|Unknown system -- see MC:MAXSRC;TRANSL >|))))
(EVAL-WHEN (COMPILE EVAL) (SETQ *INFILE-NAME-KEY* (NAMESTRING (TRUENAME INFILE))))
(DEFMTRFUN-EXTERNAL ($=> $ANY MDEFMACRO NIL))
(DEFMTRFUN-EXTERNAL ($%_GENSYMS NIL MDEFINE NIL))
(DEFMTRFUN-EXTERNAL ($%_CHECK $ANY MDEFINE NIL))
(DEF-MTRVAR $%_GENSYMS '$%_GENSYMS)
(DEFMTRFUN-EXTERNAL ($GENSYM_CONVENTIONP $BOOLEAN MDEFINE NIL))
(DEF-MTRVAR $LOADPRINT NIL)



(COND ((TRD-MSYMEVAL $LOADPRINT NIL)
       (SIMPLIFY ($PRINT '$SUBMAC '|&version| '/1))))
(SIMPLIFY ($PUT '$SUBMAC '/1 '$VERSION))



(DEFPROP $GENSYM_CONVENTIONP T TRANSLATED)
(ADD2LNC '$GENSYM_CONVENTIONP $PROPS)
(DEFMTRFUN ($GENSYM_CONVENTIONP $BOOLEAN MDEFINE NIL)
	   ($X)
	   (COND ((AND ($SYMBOLP $X)
		       (= ($GETCHARN $X 1.) 37.)
		       (= ($GETCHARN $X 2.) 95.))
		  T)))


(DEFPROP $%_CHECK T TRANSLATED)
(ADD2LNC '$%_CHECK $PROPS)
(DECLARE (*LEXPR $PART))
(DEFMTRFUN ($%_CHECK $ANY MDEFINE NIL)
	   ($EXP)
	   (DECLARE (SPECIAL $%_GENSYMS $EXP))
	   (COND (($ATOM $EXP)
		  (COND ((AND (MFUNCTION-CALL $GENSYM_CONVENTIONP $EXP)
			      (NOT ($MEMBER $EXP
					    (TRD-MSYMEVAL $%_GENSYMS
							  '$%_GENSYMS))))
			 (SETQ $%_GENSYMS
			       ($CONS $EXP
				      (TRD-MSYMEVAL $%_GENSYMS
						    '$%_GENSYMS))))))
		 (T (SIMPLIFY (MFUNCTION-CALL $%_CHECK ($PART $EXP 0.)))
		    (DO (($EXP) (MDO (CDR (SIMPLIFY ($ARGS $EXP))) (CDR MDO))) 
			((NULL MDO) '$DONE) 
		     (SETQ $EXP (CAR MDO)) 
		     (SIMPLIFY (MFUNCTION-CALL $%_CHECK $EXP))))))

(DEFPROP $%_GENSYMS T TRANSLATED)
(ADD2LNC '$%_GENSYMS $PROPS)
(DEFMTRFUN ($%_GENSYMS NIL MDEFINE NIL)
	   ($EXP)
	   ((LAMBDA ($%_GENSYMS) 
	      (SIMPLIFY (MFUNCTION-CALL $%_CHECK $EXP))
	      $%_GENSYMS)
	    '((MLIST))))


(SIMPLIFY ($LOADFILE $SUBMAC $SYNTAX $DSK $SHARE2))


(DEFPROP $=> T TRANSLATED)
(ADD2LNC '$=> $PROPS)
(DECLARE (*LEXPR GENSYM $PART $ERROR))
(DEFMTRFUN
 ($=> $ANY MDEFMACRO NIL)
 ($HEADER $BODY)
 (DECLARE (SPECIAL $U $ARG))
 ((LAMBDA ($BUILD_SUBST $EVAL_ONCE $FORMAL_ARGS) 
    (DO (($U) (MDO (CDR (SIMPLIFY (MFUNCTION-CALL $%_GENSYMS $BODY))) (CDR MDO))) 
	((NULL MDO) '$DONE) 
     (SETQ $U (CAR MDO)) 
     (SETQ $BUILD_SUBST ($CONS (MBUILDQ-SUBST (LIST (CONS '$U $U))
					      '((MSETQ) $U ((GENSYM))))
			       $BUILD_SUBST)))
    (DO (($ARG) (MDO (CDR (SIMPLIFY ($ARGS $HEADER))) (CDR MDO))) 
	((NULL MDO) '$DONE) 
     (SETQ $ARG (CAR MDO)) 
     (COND (($ATOM $ARG)
	    ((LAMBDA ($G) 
	       (SETQ $FORMAL_ARGS ($CONS $G $FORMAL_ARGS))
	       (SETQ $BUILD_SUBST ($CONS $G $BUILD_SUBST))
	       (SETQ $BUILD_SUBST
		     ($CONS (MBUILDQ-SUBST (LIST (CONS '$ARG $ARG))
					   '((MSETQ) $ARG ((GENSYM))))
			    $BUILD_SUBST))
	       (SETQ $EVAL_ONCE
		     ($CONS (MBUILDQ-SUBST (LIST (CONS '$ARG $ARG)
						 (CONS '$G $G))
					   '((MSETQ) $ARG $G))
			    $EVAL_ONCE)))
	     (SIMPLIFY (GENSYM))))
	   ((LIKE ($PART $ARG 0.) '&/')
	    (SETQ $ARG ($PART $ARG 1.))
	    (SETQ $BUILD_SUBST ($CONS $ARG $BUILD_SUBST))
	    (SETQ $FORMAL_ARGS ($CONS $ARG $FORMAL_ARGS)))
	   (T (SIMPLIFY ($ERROR '|&BAD FORMAL ARG TO "=>"| $ARG)))))
    (SETQ $FORMAL_ARGS ($REVERSE $FORMAL_ARGS))
    (SETQ $EVAL_ONCE ($REVERSE $EVAL_ONCE))
    (MBUILDQ-SUBST (LIST (CONS '$FORMAL_ARGS $FORMAL_ARGS)
			 (CONS '$EVAL_ONCE $EVAL_ONCE)
			 (CONS '$BUILD_SUBST $BUILD_SUBST)
			 (CONS '$NAME ($PART $HEADER 0.))
			 (CONS '$BODY $BODY))
		   '((MDEFMACRO)
		     (($NAME) (($SPLICE) $FORMAL_ARGS))
		     (($BUILDQ) $BUILD_SUBST ((MPROG) $EVAL_ONCE $BODY)))))
  '((MLIST))
  '((MLIST))
  '((MLIST))))





;; Local Modes:
;; Mode: LISP
;; Comment Col: 40
;; End:
M
