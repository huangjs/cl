/* this is the integration part of intsce.  it can be altered,
translated, and incorporated in intsce lisp which contains
the top-level routine that does the pattern matching. */

sceint(m,n):=block([den,num],modedeclare([m,n],integer),
  den:d^2+b^2*(m+n)^2,
  num: if m=0 then (if n=0 then return(ret) else
	 	    if n=1 then (d*co+b*si)*ex else
			(d*co+n*b*si)*ex*co^(n-1)+n*(n-1)*b^2*sceint(0,n-2)) else
       if m=1 then (if n=0 then (d*si-b*co)*ex else
	 	    if n=1 then (d*si*co+b*si^2-b*co^2)*ex else
		     (d*si*co+n*b*si^2-b*co^2)*co^(n-1)*ex+
			 n*(n-1)*b^2*sceint(1,n-2)) else
  
		   (if n=0 then (d*si-m*b*co)*ex*si^(m-1)+m*(m-1)*b^2*sceint(m-2,0) else
		    if n=1 then (d*co*si+b*si^2-m*b*co^2)*si^(m-1)*ex+m*(m-1)*b^2*sceint(m-2,1) else
		     (d*si*co+n*b*si^2-m*b*co^2)*si^(m-1)*co^(n-1)*ex+
			n*(n-1)*b^2*sceint(m,n-2)+m*(m-1)*b^2*sceint(m-2,n)),
  return(num/den))$

