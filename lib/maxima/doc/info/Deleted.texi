@menu
* Renamed or deleted functions::
@end menu

This appendix is a partial list of  functions that have been removed 
from maxima.

@node Renamed or deleted functions, , Deleted Functions, Deleted Functions
@section Renamed or deleted functions

@deffn {Function} %ibes [@var{n}](@var{x}) 
The modified Bessel function of the first kind of order @var{n}.  
Use @code{bessel_i (@var{n}, @var{x})} instead.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} %j [@var{n}](@var{x}) 
The Bessel function of the first kind of order @var{n}.  
Use @code{bessel_j (@var{n}, @var{x})} instead.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} %k [@var{n}](@var{x}) 
The modified Bessel function of the second kind of order @var{n}.  
Use @code{bessel_k (@var{n}, @var{x})} instead.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} %y [@var{n}](@var{x}) 
The Bessel function of the second kind of order @var{n}.  
Use @code{bessel_y (@var{n}, @var{x})} instead.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} airy (@var{x})
The Airy function Ai(x) (A&S 10.4.2).
Use @code{airy_ai (@var{x})}.

@xref{Airy Functions}.
@end deffn


@deffn {Function} bessel (@var{z}, @var{a}) 
The Bessel function of the first kind of order @var{a}.  
Use @code{bessel_j (@var{order}, @var{z})} instead.

Also set up an array BESSELARRAY is set up such that BESSELARRAY[I] =
J[I+A-ENTIER(A)](Z).

@xref{Bessel Functions}.
@end deffn

@deffn {Function} expint (@var{z})
The Exponential Integral E1(z)(A&S 5.1.2).  
Use @code{expintegral_e1 (@var{z})}.

@xref{Exponential Integrals}.
@end deffn

@deffn {Function} g0 (@var{x}) 
The scaled modified Bessel function of the first kind of order 0.  Use @code{scaled_bessel_i0 (@var{x})}.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} g1 (@var{x}) 
The scaled modified Bessel function of the first kind of order 1.  Use @code{scaled_bessel_i1 (@var{x})}.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} gn (@var{x}, @var{n}) 
The scaled modified Bessel function of the first kind of order @var{n}.  
Use @code{scaled_bessel_i (@var{n}, @var{x})}.

In addition it set up an array GARRAY, analagous to JARRAY for @code{jn}.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} gauss (@var{mean}, @var{sd})
The random floating point number from a normal
distribution with mean MEAN and standard deviation SD.
Use @code{random_normal (@var{mean}, @var{sd})}

@xref{distrib}.
@end deffn


@deffn {Function} i0 (@var{x}) 
The modified Bessel function of the first kind of order 0.  
Use @code{bessel_i (@var{0}, @var{x})}.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} i1 (@var{x}) 
The modified Bessel function of the first kind of order 1.  
Use @code{bessel_i (@var{1}, @var{x})}.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} in (@var{x}, @var{n}) 
The modified Bessel function of the first kind of order @var{n}.  
Use @code{bessel_i (@var{order}, @var{x})}.

In addition it set up an array IARRAY, analagous to JARRAY for @code{jn}.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} j0 (@var{x}) 
The Bessel function of the first kind of order 0.  Use @code{bessel_j (@var{0}, @var{x})}.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} j1 (@var{x}) 
The Bessel function of the first kind of order 1.  Use @code{bessel_j (@var{1}, @var{x})}.

@xref{Bessel Functions}.
@end deffn


@deffn {Function} jn (@var{x}, @var{n}) 
The Bessel function of the first kind of order @var{n}.  Use @code{bessel_j (@var{order}, @var{x})}.

In addition it set up an
array JARRAY of N+1 elements, (numbered from 0 to ABS(N)) such that
JARRAY[I] gives the value of the I'th order Bessel function with
argument X. (If N < 0 then JARRAY[I] gives the (-I)'th Bessel
function).

@xref{Bessel Functions}.
@end deffn
