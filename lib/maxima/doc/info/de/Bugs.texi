@c Language: German
@c English original: Bugs.texi CVS 1.9

@menu
* Einf@"uhrung in die Erkennung und Meldung von Programmfehlern::
* Definitionen f@"ur die Erkennung und Meldung von Programmfehlern::
@end menu

@node Einf@"uhrung in die Erkennung und Meldung von Programmfehlern
@section Einf@"uhrung in die Erkennung und Meldung von Programmfehlern
Wie alle gr@"o@ss{}eren Programme enth@"alt Maxima bekannte und nicht bekannte Programmfehler. 
Dieses Kapitel beschreibt die eingebauten M@"oglichkeiten sowohl zur Ausf@"uhrung einer 
Folge von Tests als auch zur Meldung neuer Programmfehler.

@node Definitionen f@"ur die Erkennung und Meldung von Programmfehlern
@section Definitionen f@"ur die Erkennung und Meldung von Programmfehlern
@deffn {Funktion} run_testsuite ()
@deffnx {Funktion} run_testsuite (@var{boolean})
@deffnx {Funktion} run_testsuite (@var{boolean}, @var{boolean})
@deffnx {Funktion} run_testsuite (@var{boolean}, @var{boolean}, @var{list})
F@"uhrt die Maxima-Test-Suite aus. Tests, die die gew@"unschten Antworten liefern, 
werden als ``passes'' bezeichnet, genauso Tests, die nicht die gew@"unschten Antworten liefern, 
aber als bekannte Programmfehler gekennzeichnet sind. 

@code{run_testsuite ()} zeigt nur Tests an, die nicht korrekt ablaufen.

@code{run_testsuite (true)} zeigt Tests an, die als bekannte Programmfehler gekennzeichnet sind, 
genauso wie Fehlschl@"age. 

@code{run_testsuite (true, true)} zeigt s@"amtliche Tests an.

Wenn das optionale dritte Argument angegeben ist, wird eine Teilmenge der Tests ausgef@"uhrt. 
Die Teilmenge der Tests wird hierbei als Liste mit den Namen der Tests angegeben. 
Die vollst@"andige Menge der Tests wird durch @code{testsuite_files} angegeben.

@code{run_testsuite} @"andert die Maxima-Umgebung. 
Typischerweise f@"uhrt ein Testskript @code{kill} aus, um eine bekannte Umgebung zu erzeugen 
(namentlich eine ohne benutzerdefinierte Funktionen und Variablen) 
und definiert dann die Funktionen und Variablen passend zum Test.

@code{run_testsuite} gibt @code{done} zur@"uck.
@end deffn

@defvr {Optionsvariable} testsuite_files

@code{testsuite_files} ist die Testreihe, die durch @code{run_testsuite} ausgef@"uhrt wird. 
Es ist eine Liste mit den Namen der Dateien, die die auszuf@"uhrenden Tests enthalten. 
Wenn einige der Tests in einer Datei daf@"ur bekannt sind, fehlzuschlagen, 
dann wird statt der Auflistung des Dateinamens eine Liste verwendet, die den Dateinamen und 
die Nummern der Tests, die fehlschlagen, enth@"alt. 

Zum Beispiel ist dies ein Teil der standardm@"a@ss{}igen Testreihe:

@example
 ["rtest13s", ["rtest14", 57, 63]]
@end example

Dies gibt an, dass die Testabfolge aus den Dateien "rtest13s" und "rtest14" besteht, 
dass aber "rtest14" zwei Tests enth@"alt, die bekanntlicherweise schief gehen: 57 und 63. 
@end defvr

@deffn {Funktion} bug_report ()
Gibt die Maxima- und Lisp-Versionsnummern aus und gibt einen Link auf die Maxima-Webseite 
f@"ur Fehlerberichte an. Die Versionsinformation ist dieselbe wie durch @code{build_info} ausgegeben.

Wenn ein Programmfehler gemeldet wird, ist es hilfreich, die Maxima- und Lisp-Versionsinformationen 
mit in der Meldung anzugeben.

@code{bug_report} gibt die leere Zeichenkette @code{""} zur@"uck.
@end deffn

@deffn {Funktion} build_info ()
Gibt eine Zusammenfassung der Parameter der Maxima-Zusammenstellung (build).

@code{build_info} gibt die leere Zeichenkette @code{""} zur@"uck.
@end deffn
