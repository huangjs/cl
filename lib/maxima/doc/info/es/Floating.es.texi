@c version 1.23
@menu
* Funciones y variables para la aritm@'etica de punto flotante::
@end menu

@node Funciones y variables para la aritm@'etica de punto flotante, , Aritm@'etica de punto flotante, Aritm@'etica de punto flotante

@section Funciones y variables para la aritm@'etica de punto flotante

@c FOLLOWING FUNCTIONS IN bffac.mac ARE NOT DESCRIBED IN .texi FILES: !!!
@c obfac, azetb, vonschtoonk, divrlst, obzeta, bfhzeta, bfpsi0 !!!
@c DON'T KNOW WHICH ONES ARE INTENDED FOR GENERAL USE !!!

@c FOLLOWING FUNCTIONS IN bffac.mac ARE DESCRIBED IN Number.texi: !!!
@c burn, bzeta, bfzeta !!!

@c FOLLOWING FUNCTIONS IN bffac.mac ARE DESCRIBED HERE: !!!
@c bfpsi, bffac, cbffac !!!


@deffn {Funci@'on} bffac (@var{expr}, @var{n})
Versi@'on para "bigfloat" de la funci@'on factorial (Gamma desplazada). El segundo argumento indica cu@'antos d@'{@dotless{i}}gitos se conservan y devuelven, pudiendo utilizarse para obtener algunas cifras extra.

@end deffn

@defvr {Variable optativa} algepsilon
Valor por defecto: 10^8

El valor de @code{algepsilon} es usado por @code{algsys}.

@end defvr

@deffn {Funci@'on} bfloat (@var{expr})
Convierte todos los n@'umeros y  funciones num@'ericas a n@'umeros decimales de punto flotante grandes ("bigfloats").
El n@'umero de d@'{@dotless{i}}gitos significativos de los "bigfloats" resultantes se especifica mediante la variable global @code{fpprec}.

Si @code{float2bf} vale @code{false} se mostrar@'a un mensaje de aviso cuando un n@'umero en punto flotante se convierte a decimal de tipo "bigfloats", puesto que tal transformaci@'on puede conllevar p@'erdida de precisi@'on.

@end deffn

@deffn {Funci@'on} bfloatp (@var{expr})
Devuelve @code{true} si @var{expr} es un n@'umero decimal en punto flotante grande ("bigfloats"), en caso contrario devuelve @code{false}.

@end deffn

@deffn {Funci@'on} bfpsi (@var{n}, @var{z}, @var{fpprec})
@deffnx {Funci@'on} bfpsi0 (@var{z}, @var{fpprec})
La funci@'on @code{bfpsi} es la poligamma de argumento real @var{z} y de orden el entero @var{n}. La funci@'on @code{bfpsi0} es la digamma.  La llamada @code{bfpsi0 (@var{z}, @var{fpprec})} equivale a @code{bfpsi (0, @var{z}, @var{fpprec})}.

Estas funciones devuelven valores "bigfloat". La variable @var{fpprec} es la precisi@'on "bigfloat" del valor de retorno.

@c psi0(1) = -%gamma IS AN INTERESTING PROPERTY BUT IN THE ABSENCE OF ANY OTHER
@c DISCUSSION OF THE PROPERTIES OF THIS FUNCTION, THIS STATEMENT SEEMS OUT OF PLACE.
@c Note @code{-bfpsi0 (1, fpprec)} provides @code{%gamma} (Euler's constant) as a bigfloat.

@end deffn

@defvr {Variable optativa} bftorat
Valor por defecto: @code{false}

La variable @code{bftorat} controla la conversi@'on de n@'umeros decimales de punto flotante grandes ("bigfloats") a n@'umeros racionales. Si @code{bftorat} vale @code{false}, se utilizar@'a @code{ratepsilon} para controlar la conversi@'on  (lo cual resulta en n@'umeros racionales relativamente peque@~nos). Si  @code{bftorat} vale @code{true}, el n@'umero racional generado representar@'a exactamente al n@'umero decimal de punto flotante grande ("bigfloat").

@end defvr

@defvr {Variable optativa} bftrunc
Valor por defecto: @code{true}

La variable @code{bftrunc} provoca la eliminaci@'on de ceros en n@'umeros decimales grandes no nulos para que no se muestren.  As@'{@dotless{i}}, si @code{bftrunc} vale @code{false}, @code{bfloat (1)}
se muestra como @code{1.000000000000000B0}. En otro caso, se mostrar@'a como @code{1.0B0}.

@end defvr

@deffn {Funci@'on} cbffac (@var{z}, @var{fpprec})
Calcula el factorial de n@'umeros complejos de punto flotante grandes.

La instrucci@'on @code{load ("bffac")} carga esta funci@'on.

@end deffn

@deffn {Funci@'on} float (@var{expr})
Convierte los enteros, n@'umeros racionales y los decimales de punto flotante grandes ("bigfloats") que est@'an presentes en @var{expr} a n@'umeros de punto flotante. Tambi@'en act@'ua como s@'{@dotless{i}}mbolo @code{evflag}.

@end deffn

@defvr {Variable optativa} float2bf
Valor por defecto: @code{false}
 
Si @code{float2bf} vale @code{false} se mostrar@'a un mensaje de aviso cuando un n@'umero en punto flotante se convierte a decimal de tipo "bigfloats", puesto que tal transformaci@'on puede conllevar p@'erdida de precisi@'on.

@end defvr

@deffn {Funci@'on} floatnump (@var{expr})
Devuelve @code{true} si @var{expr} es un n@'umero de punto flotante, en caso contario retorna @code{false}.

@end deffn

@defvr {Variable optativa} fpprec
Valor por defecto: 16

La variable @code{fpprec} guarda el n@'umero de d@'{@dotless{i}}gitos significativos en la aritm@'etica con n@'umeros decimales de punto flotante grandes ("bigfloats"). La variable @code{fpprec} no afecta a los c@'alculos con n@'umeros decimales de punto flotante ordinarios.

V@'eanse tambi@'en @code{bfloat} y @code{fpprintprec}.

@end defvr

@defvr {Variable optativa} fpprintprec
Valor por defecto: 0

La variable @code{fpprintprec} guarda el n@'umero de d@'{@dotless{i}}gitos
a imprimir de los n@'umeros decimales en coma flotante, tanto los ordinarios
como los de precisi@'on ilimitada (@i{bigfloats}).

En el caso de los decimales ordinarios, si @code{fpprintprec} toma un valor
entre 2 y 16 (inclusive), el n@'umero de d@'{@dotless{i}}gitos que se 
imprimen es igual a @code{fpprintprec}. En caso contrario, @code{fpprintprec} es 0
o mayor que 16, siendo el n@'umero de d@'{@dotless{i}}gitos
a imprimir en todos loa casos igual a 16.

En el caso de los decimales de precisi@'on ilimitada (@i{bigfloats}),
si @code{fpprintprec} toma un valor entre 2 y 16 (inclusive),
el n@'umero de d@'{@dotless{i}}gitos que se imprimen es igual a 
@code{fpprintprec}. En caso contrario, @code{fpprintprec} es 0
o mayor que @code{fpprec}, siendo el n@'umero de d@'{@dotless{i}}gitos
a imprimir igual a @code{fpprec}.

La variable @code{fpprintprec} no admite el valor 1.
@end defvr

