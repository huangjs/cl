@c version 1.13
@menu
* Funciones y variables para l@'{@dotless{i}}mites::      
@end menu

@node Funciones y variables para l@'{@dotless{i}}mites,  ,L@'{@dotless{i}}mites,L@'{@dotless{i}}mites 

@section Funciones y variables para l@'{@dotless{i}}mites

@defvr {Variable optativa} lhospitallim
Valor por defecto: 4

Es el n@'umero m@'aximo de veces que la regla de L'Hopital es aplicada en la funci@'on @code{limit}, evitando bucles infinitos al iterar la regla en casos como @code{limit (cot(x)/csc(x), x, 0)}.

@end defvr

@deffn {Funci@'on} limit (@var{expr}, @var{x}, @var{val}, @var{dir})
@deffnx {Funci@'on} limit (@var{expr}, @var{x}, @var{val})
@deffnx {Funci@'on} limit (@var{expr})
Calcula el l@'{@dotless{i}}mite de @var{expr} cuando la variable real @var{x} se aproxima al valor @var{val} desde la direcci@'on @var{dir}. El argumento @var{dir} puede ser el valor @code{plus} para un l@'{@dotless{i}}mite por la derecha, @code{minus} para un l@'{@dotless{i}}mite por la izquierda o simplemente se omite para indicar un l@'{@dotless{i}}mite en ambos sentidos.

La funci@'on @code{limit} utiliza los s@'{@dotless{i}}mbolos especiales siguientes: @code{inf} (m@'as infinito) y @code{minf} (menos
infinito). En el resultado tambi@'en puede hacer uso de @code{und} (indefinido), @code{ind} (indefinido pero acotado) y @code{infinity} (infinito complejo).

La variable @code{lhospitallim} guarda el n@'umero m@'aximo de veces que la regla de L'Hopital es aplicada en la funci@'on @code{limit}, evitando bucles infinitos al iterar la regla en casos como @code{limit (cot(x)/csc(x), x, 0)}.

Si la variable @code{tlimswitch} vale @code{true}, har@'a que la funci@'on @code{limit} utilice desarrollos de Taylor siempre que le sea posible.

La variable @code{limsubst} evita que la funci@'on @code{limit} realice sustituciones sobre formas desconocidas, a fin de evitar fallos tales como que @code{limit (f(n)/f(n+1), n, inf)} devuelva 1.  D@'andole a @code{limsubst} el valor @code{true} se permitir@'an tales sustituciones.

La funci@'on @code{limit} con un solo argumento se utiliza frecuentemente para simplificar expresiones constantes, como por ejemplo @code{limit (inf-1)}.

@c MERGE EXAMPLES INTO THIS FILE
La instrucci@'on @code{example (limit)} muestra algunos ejemplos.

Para informaci@'on sobre el m@'etodo utilizado v@'ease Wang, P., "Evaluation of Definite Integrals by Symbolic
Manipulation", Ph.D. thesis, MAC TR-92, October 1971.

@end deffn

@defvr {Variable optativa} limsubst
Valor por defecto: @code{false}

La variable @code{limsubst} evita que la funci@'on @code{limit} realice sustituciones sobre formas desconocidas, a fin de evitar fallos tales como que @code{limit (f(n)/f(n+1), n, inf)} devuelva 1.  D@'andole a @code{limsubst} el valor @code{true} se permitir@'an tales sustituciones.

@end defvr

@deffn {Funci@'on} tlimit (@var{expr}, @var{x}, @var{val}, @var{dir})
@deffnx {Funci@'on} tlimit (@var{expr}, @var{x}, @var{val})
@deffnx {Funci@'on} tlimit (@var{expr})
Calcula el l@'{@dotless{i}}mite del desarrollo de Taylor de la expresi@'on
@code{expr} de variable @code{x} en el punto @code{val} en la direcci@'on @code{dir}.
@end deffn

@defvr {Variable optativa} tlimswitch
Valor por defecto: @code{true}

Si @code{tlimswitch} vale @code{true}, la funci@'on @code{limit} utilizar@'a
un desarrollo de Taylor si el l@'{@dotless{i}}mite de la expresi@'on dada no
se puede calcular directamente. Esto permite el c@'alculo de l@'{@dotless{i}}mites
como @code{limit(x/(x-1)-1/log(x),x,1,plus)}.
Si @code{tlimswitch} vale @code{false} y el l@'{@dotless{i}}mite de la expresi@'on
no se puede calcular directamente, la funci@'on @code{limit} devolver@'a una expresi@'on
sin evaluar.
@end defvr

