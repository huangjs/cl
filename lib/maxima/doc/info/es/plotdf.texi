@c english version 1.7
@menu
* Introducci@'on a plotdf::
* Funciones y variables para plotdf::
@end menu

@node Introducci@'on a plotdf, Funciones y variables para plotdf, plotdf, plotdf
@section Introducci@'on a plotdf

La funci@'on @code{plotdf} crea un gr@'afico del campo de direcciones para una
Ecuaci@'on Diferencial Ordinaria (EDO) de primer orden, o para un sistema de
dos EDO's aut@'onomas, de primer orden.

Como se trata de un paquete adicional, para poder usarlo debe cargarlo
primero con el comando @code{load("plotdf")}. Tambi@'en es necesario que
Xmaxima est@'e instalado, a pesar de que ejecute Maxima desde otra
interface diferente.

Para dibujar el campo de direcciones de una @'unica EDO, esa ecuaci@'on
deber@'a escribirse en la forma siguiente:
@ifnottex
@example
       dy
       -- = F(x,y)
       dx
@end example
@end ifnottex
@tex
$${{dy}\over{dx}} = F(x,y)$$
@end tex

y la funci@'on @var{F} ser@'a dada como argumento para el comando
@code{plotdf}. La variable independiente tiene que ser siempre @var{x} y la
variable dependiente @var{y}. A esas dos variables no podr@'a estar asociado
ning@'un valor num@'erico.

Para dibujar el campo de direcciones de un sistema aut@'onomo de dos EDO's,
Las dos ecuaciones deben ser escritas en la forma siguiente
@ifnottex
@example
       dx             dy
       -- = G(x,y)    -- = F(x,y) 
       dt             dt
@end example
@end ifnottex
@tex
$${{dx}\over{dt}} = G(x,y) \qquad {{dy}\over{dt}} = F(x,y)$$
@end tex

y el argumento para el comando @code{plotdf} ser@'a una lista con dos
expresiones para las funciones @var{F} y @var{G}.

Cuando se trabaja con una @'unica ecuaci@'on, @code{plotdf} asume
impl@'{@dotless{i}}citamente que @code{x=t} y @code{G(x,y)=1}, transformando la
ecuaci@'on en un sistema aut@'onomo con dos ecuaciones.

@node Funciones y variables para plotdf,  , Introducci@'on a plotdf, plotdf
@section Funciones y variables para plotdf

@deffn {Function} plotdf (@var{dydx},...opciones...)
@deffnx {Function} plotdf (@code{[}@var{dxdt},@var{dydt}@code{]},...opciones...)

Dibuja un campo de direcciones en dos dimensiones @var{x} y @var{y}.

@var{dydx}, @var{dxdt} y @var{dydt} son expresiones que dependen de @var{x} y
@var{y}. Adem@'as de esas dos variables, las dos expresiones pueden depender de
un conjunto de par@'ametros, con valores num@'ericos que son dados por medio
de la opci@'on @code{parameters} (la sintaxis de esa opci@'on se explica mas al
frente), o con un rango de posibles valores definidos con la opci@'on
@var{sliders}.

Varias otras opciones se pueden incluir dentro del comando, o
seleccionadas en el men@'u.  Haciendo click en un punto del gr@'afico se
puede hacer que sea dibujada la curva integral que pasa por ese punto;
lo mismo puede ser hecho dando las coordenadas del punto con la opci@'on
@code{trajectory_at} dentro del comando plotdf. La direcci@'on de
integraci@'on se puede controlar con la opci@'on @code{direction}, que
acepta valores de @emph{forward}, @emph{backward} ou @emph{both}. El
n@'umero de pasos realizado en la integraci@'on num@'erica se controla
con la opci@'on @code{nsteps} y el incremento del tiempo en cada paso
con la opci@'on @code{tstep}. Se usa el m@'etodo de Adams Moulton para
hacer la integraci@'on num@'erica; tambi@'en es posible cambiar para el
m@'etodo de Runge-Kutta de cuarto orden con ajuste de pasos.

@b{Men@'u de la ventana del gr@'afico:}

El men@'u de la ventana gr@'afica dispone de las siguientes opciones:
@emph{Zoom}, que permite cambiar el comportamiento del rat@'on, de
manera que har@'a posible el hacer zoom en la regi@'on del gr@'afico
haciendo clic con el bot@'on izquierdo. Cada clic agranda la imagen
manteniendo como centro de la misma el punto sobre el cual se ha hecho
clic. Manteniendo pulsada la tecla @key{Shift} mientras se hace clic,
retrocede al tama@~no anterior. Para reanudar el c@'alculo de las
trayectorias cuando se hace clic, seleccine la opci@'on @emph{Integrate}
del men@'u.

La opci@'on @emph{Config} del men@'u se puede utilizar para cambiar
la(s) EDO(S) y algunos otros ajustes. Despu@'es de hacer los cambios, se
debe utilizar la opci@'on @emph{Replot} para activar los nuevos ajustes.
Si en el campo @emph{Trajectory at} del men@'u de di@'alogo de
@emph{Config} se introducen un par de coordenadas y luego se pulsa la
tecla @key{retorno}, se mostrar@'a una nueva curva integral, adem@'as de
las ya dibujadas.  Si se selecciona la opci@'on @emph{Replot}, s@'olo se
mostrar@'a la @'ultima curva integral seleccionada.

Manteniendo pulsado el bot@'on derecho del rat@'on mientras se mueve el
cursor, se puede arrastrar el gr@'afico horizontal y verticalmente.
Otros par@'ametros, como pueden ser el n@'umero de pasos, el valor
inicial de @var{t}, las coordenadas del centro y el radio, pueden
cambiarse en el submen@'u de la opci@'on @emph{Config}.

Con la opci@'on @emph{Save}, se puede obtener una copia del gr@'afico en
una impresora Postscript o guardarlo en un fichero Postscript. Para
optar entre la impresi@'on o guardar en fichero, se debe seleccionar
@emph{Print Options} en la ventana de di@'alogo de @emph{Config}. Una
vez cubiertos los campos de la ventana de di@'alogo de @emph{Save},
ser@'a necesario seleccionar la opci@'on @emph{Save} del primer men@'u
para crear el fichero o imprimir el gr@'afico.

@b{Opciones gr@'aficas:}

La funci@'on @code{plotdf} admite varias opciones, cada una de las cuales
es una lista de dos o m@'as elementos. El primer elemento es el nombre de
la opci@'on, y el resto est@'a formado por el valor o valores asignados
a dicha opci@'on.

La funci@'on @code{plotdf} reconoce las siguientes opciones:

@itemize @bullet
@item
@dfn{tstep} establece la amplitud de los incrementos en la
variable independiente @var{t}, utilizados para calcular la curva
integral. Si se aporta s@'olo una expresi@'on @var{dydx}, la variable
@var{x} ser@'a directamente proporcional a @var{t}.
El valor por defecto es 0.1.

@item
@dfn{nsteps} establece el n@'umero de pasos de longitud
@code{tstep} que se utilizar@'an en la variable independiente para
calcular la curva integral.
El valor por defecto es 100.

@item
@dfn{direction} establece la direcci@'on de la variable
independiente que ser@'a seguida para calcular una curva integral.
Valores posibles son: @code{forward}, para hacer que la variable
independiente aumente @code{nsteps} veces, con incrementos @code{tstep};
@code{backward}, para hacer que la variable independiente
disminuya; @code{both}, para extender la curva integral @code{nsteps}
pasos hacia adelante y @code{nsteps} pasos hacia atr@'as.
Las palabras @code{right} y @code{left} se pueden utilizar como
sin@'onimos de @code{forward} y @code{backward}.
El valor por defecto es @code{both}.

@item
@dfn{tinitial} establece el valor inicial de la variable
@var{t} utilizado para calcular curvas integrales. Puesto que las
ecuaciones diferenciales son aut@'onomas, esta opci@'on s@'olo
aparecer@'a en los gr@'aficos de las curvas como funciones de @var{t}.
El valor por defecto es 0.

@item
@dfn{versus_t} se utiliza para crear una segunda ventana
gr@'afica, con el gr@'afico de una curva integral, como dos funciones
@var{x}, @var{y}, de variable independiente @var{t}. Si se le da a
@code{versus_t} cualquier valor diferente de 0, se mostrar@'a la
segunda ventana gr@'afica, la cual incluye otro men@'u, similar
al de la ventana principal.
El valor por defecto es 0.

@item
@dfn{trajectory_at} establece las coordenadas @var{xinitial}
y @var{yinitial} para el extremo inicial de la curva integral.
No tiene asignado valor por defecto.

@item
@dfn{parameters} establece una lista de par@'ametros,
junto con sus valores num@'ericos, que son utilizados en la
definici@'on de la ecuaci@'on diferencial. Los nombres de los
par@'ametros y sus valores deben escribirse en formato de cadena
de caracteres como una secuencia de pares @code{nombre=valor}
separados por comas.

@item
@dfn{sliders} establece una lista de par@'ametros que
se cambiar@'an interactivamente utilizando barras de deslizamiento,
as@'{@dotless{i}} como los rangos de variaci@'on de dichos par@'ametros.
Los nombres de los par@'ametros y sus rangos deben escribirse en formato
de cadena de caracteres como una secuencia de pares @code{nombre=min:max}
separados por comas.

@item
@dfn{xfun} establece una cadena de caracteres con funciones
de @var{x} separadas por puntos y comas para ser representadas por
encima del campo de direcciones. Estas funciones ser@'an interpretadas
por Tcl, no por Maxima.

@item
@dfn{xradius} es la mitad de la longitud del rango de valores
a representar en la direcci@'on x.
El valor por defecto es 10.

@item
@dfn{yradius} es la mitad de la longitud del rango de valores
a representar en la direcci@'on y.
El valor por defecto es 10.

@item
@dfn{xcenter} es la coordenada x del punto situado en el centro
del gr@'afico.
El valor por defecto es 0.

@item
@dfn{ycenter} es la coordenada y del punto situado en el centro
del gr@'afico.
El valor por defecto es 0.

@item
@dfn{width} establece el ancho de la ventana gr@'afica en
p@'{@dotless{i}}xeles.
El valor por defecto es 500.

@item
@dfn{height} establece la altura de la ventana gr@'afica en
p@'{@dotless{i}}xeles.
El valor por defecto es 500.

@end itemize

@b{Ejemplos:}

NOTA: Dependiendo de la interface que se use para Maxima, las funciones
que usan @code{openmath}, incluida @code{plotdf}, pueden desencadenar un
fallo si terminan en punto y coma, en vez del s@'{@dotless{i}}mbolo de
d@'olar. Para evitar problemas, se usar@'a el s@'{@dotless{i}}mbolo de
d@'olar en todos ejemplos.

@itemize @bullet
@item
Para mostrar el campo de direcciones de la ecuaci@'on diferencial
@math{y' = exp(-x) + y} y la soluci@'on que pasa por @math{(2, -0.1)}:
@example
(%i1) load("plotdf")$

(%i2) plotdf(exp(-x)+y,[trajectory_at,2,-0.1]);
@end example

@ifnotinfo
@image{../figures/plotdf1,8cm}
@end ifnotinfo

@item
Para mostrar el campo de direcciones de la ecuaci@'on 
@math{diff(y,x) = x - y^2} y la soluci@'on de condici@'on
inicial @math{y(-1) = 3}, se puede utilizar la sentencia:
@example
(%i3) plotdf(x-y^2,[xfun,"sqrt(x);-sqrt(x)"],
          [trajectory_at,-1,3], [direction,forward],
          [yradius,5],[xcenter,6]);
@end example
El gr@'afico tambi@'en muestra la funci@'on @math{y = sqrt(x)}.

@ifnotinfo
@image{../figures/plotdf2,8cm}
@end ifnotinfo

@item
El siguiente ejemplo muestra el campo de direcciones de un oscilador
arm@'onico, definido por las ecuaciones @math{dx/dt = y} y
@math{dy/dt = -k*x/m}, y la curva integral que pasa por
@math{(x,y) = (6,0)}, con una barra de deslizamiento que 
permitir@'a cambiar el valor de @math{m} interactivamente
(@math{k} permanece fijo a 2):
@example
(%i4) plotdf([y,-k*x/m],[parameters,"m=2,k=2"],
            [sliders,"m=1:5"], [trajectory_at,6,0]);
@end example

@ifnotinfo
@image{../figures/plotdf3,8cm}
@end ifnotinfo

@item
Para representar el campo de direcciones de la ecuaci@'on de
Duffing, @math{m*x''+c*x'+k*x+b*x^3 = 0}, se introduce la
variable @math{y=x'} y se hace:
@example
(%i5) plotdf([y,-(k*x + c*y + b*x^3)/m],
              [parameters,"k=-1,m=1.0,c=0,b=1"],
              [sliders,"k=-2:2,m=-1:1"],[tstep,0.1]);
@end example

@ifnotinfo
@image{../figures/plotdf4,8cm}
@end ifnotinfo

@item
El campo de direcciones de un p@'endulo amortiguado,
incluyendo la soluci@'on para condiciones iniciales dadas,
con una barra de deslizamiento que se puede utilizar para
cambiar el valor de la masa, @math{m}, y con el gr@'afico
de las dos variables de estado como funciones del tiempo:

@example
(%i6) plotdf([y,-g*sin(x)/l - b*y/m/l],
         [parameters,"g=9.8,l=0.5,m=0.3,b=0.05"],
         [trajectory_at,1.05,-9],[tstep,0.01],
         [xradius,6],[yradius,14],
         [xcenter,-4],[direction,forward],[nsteps,300],
         [sliders,"m=0.1:1"], [versus_t,1]);
@end example

@ifnotinfo
@image{../figures/plotdf5,8cm}@image{../figures/plotdf6,8cm}
@end ifnotinfo

@end itemize

@end deffn
