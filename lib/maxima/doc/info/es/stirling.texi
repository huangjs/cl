@c English version 1.4
@menu
* Funciones y variables para stirling::
@end menu

@node Funciones y variables para stirling,  , stirling, stirling
@section Funciones y variables para stirling


@deffn {Funci@'on} stirling (@var{z},@var{n})
@deffnx {Funci@'on} stirling (@var{z},@var{n},@var{pred})


Sustituye @code{gamma(x)} por la f@'ormula de Stirling @math{O(1/x^(2n-1))}.
Si @var{n} no es un entero no negativo, emite un mensaje de error. Con el
tercer argumento opcional @code{pred}, la f@'ormula de Stirling s@'olo se aplica 
si @code{pred} vale @code{true}.

Referencia: Abramowitz & Stegun, " Handbook of mathematical functions", 6.1.40.

Ejemplos:
@example
(%i1) load (stirling)$

(%i2) stirling(gamma(%alpha+x)/gamma(x),1);
       1/2 - x             x + %alpha - 1/2
(%o2) x        (x + %alpha)
                                   1           1
                            --------------- - ---- - %alpha
                            12 (x + %alpha)   12 x
                          %e
(%i3) taylor(%,x,inf,1);
                    %alpha       2    %alpha
          %alpha   x       %alpha  - x       %alpha
(%o3)/T/ x       + -------------------------------- + . . .
                                 2 x
(%i4) map('factor,%);
                                       %alpha - 1
         %alpha   (%alpha - 1) %alpha x
(%o4)   x       + -------------------------------
                                  2
@end example

La funci@'on @code{stirling} conoce la diferencia existente entre
la variable 'gamma' y la funci@'on gamma:

@example
(%i5) stirling(gamma + gamma(x),0);
                                    x - 1/2   - x
(%o5)    gamma + sqrt(2) sqrt(%pi) x        %e
(%i6) stirling(gamma(y) + gamma(x),0);
                         y - 1/2   - y
(%o6) sqrt(2) sqrt(%pi) y        %e
                                              x - 1/2   - x
                         + sqrt(2) sqrt(%pi) x        %e
@end example

Para aplicar la f@'ormula de Stirling s@'olo a aquellos t@'erminos que
contengan la variable @code{k}, h@'agase uso del tercer argumento
opcional; por ejemplo,
@example
(%i7) makegamma(pochhammer(a,k)/pochhammer(b,k));
(%o7) (gamma(b)*gamma(k+a))/(gamma(a)*gamma(k+b))
(%i8) stirling(%,1, lambda([s], not(freeof(k,s))));
(%o8) (%e^(b-a)*gamma(b)*(k+a)^(k+a-1/2)*(k+b)^(-k-b+1/2))/gamma(a)
@end example

Los t@'erminos @code{gamma(a)} y @code{gamma(b)} no contienen a @code{k}, por
lo que la f@'ormula de Stirling no ha sido aplicada a ellos.

Antes de hacer uso de esta funci@'on ejec@'utese  @code{load("stirling")}.
@end deffn

