@menu
* Functions and Variables for lindstedt::
@end menu

@node Functions and Variables for lindstedt,  , lindstedt, lindstedt
@section Functions and Variables for lindstedt


@deffn {Function} Lindstedt (@var{eq},@var{pvar},@var{torder},@var{ic})
This is a first pass at a Lindstedt code.  It can solve problems
with initial conditions entered, which can be arbitrary constants,
(just not @var{%k1} and @var{%k2}) where the initial conditions on the perturbation
equations are @math{z[i]=0, z'[i]=0} for @math{i>0}. @var{ic} is the list of 
initial conditions.

Problems occur when initial conditions are not given, as the constants
in the perturbation equations are the same as the zero order equation
solution.  Also, problems occur when the initial conditions for the
perturbation equations are not @math{z[i]=0, z'[i]=0} for @math{i>0}, such as the
Van der Pol equation.

Example:
@example
(%i1) load("makeOrders")$

(%i2) load("lindstedt")$

(%i3) Lindstedt('diff(x,t,2)+x-(e*x^3)/6,e,2,[1,0]);
          2
         e  (cos(5 T) - 24 cos(3 T) + 23 cos(T))
(%o3) [[[---------------------------------------
                          36864
   e (cos(3 T) - cos(T))
 - --------------------- + cos(T)],
            192
          2
       7 e    e
T = (- ---- - -- + 1) t]]
       3072   16
@end example

To use this function write first @code{load("makeOrders")} and @code{load("lindstedt")}.

@opencatbox
@category{Differential equations} @category{Share packages} @category{Package lindstedt}
@closecatbox

@end deffn
