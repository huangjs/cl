@c /Introduction.texi/1.5/Sun Apr  3 08:17:33 2005/-ko/
Inicie o Maxima com o comando "maxima".  Maxima mostrar@'a a
informa@value{cedilha}@~ao de vers@~ao e uma linha de comando.  Termine
cada comando Maxima com um ponto e v@'{@dotless{i}}rgula.  Termine uma
sess@~ao com o comando "quit();".  Aqui est@'a um exemplo de sess@~ao:

@example
[wfs@@chromium]$ maxima
Maxima 5.9.1 http://maxima.sourceforge.net
Using Lisp CMU Common Lisp 19a
Distributed under the GNU Public License. See the file COPYING.
Dedicated to the memory of William Schelter.
This is a development version of Maxima. The function bug_report()
provides bug reporting information.
(%i1) factor(10!);
                            8  4  2
(%o1)                      2  3  5  7
(%i2) expand ((x + y)^6);
       6        5       2  4       3  3       4  2      5      6
(%o2) y  + 6 x y  + 15 x  y  + 20 x  y  + 15 x  y  + 6 x  y + x
(%i3) factor (x^6 - 1);
                              2            2
(%o3)       (x - 1) (x + 1) (x  - x + 1) (x  + x + 1)
(%i4) quit();
[wfs@@chromium]$
@end example

Maxima pode fazer pesquisas nas p@'aginas info do manual. Use o comando
@kbd{describe} para mostrar todos os comandos e vari@'aveis contendo uma
dada sequ@^encia de caracteres, e opcionalmente a sua
documenta@value{cedilha}@~ao.  O ponto de interroga@value{cedilha}@~ao
@code{?} @'e uma abreviatura para @code{describe}:

@example
(%i1) ? integ

 0: (maxima.info)Introduction to Elliptic Functions and Integrals.
 1: Definitions for Elliptic Integrals.
 2: Integration.
 3: Introduction to Integration.
 4: Definitions for Integration.
 5: askinteger :Definitions for Simplification.
 6: integerp :Definitions for Miscellaneous Options.
 7: integrate :Definitions for Integration.
 8: integrate_use_rootsof :Definitions for Integration.
 9: integration_constant_counter :Definitions for Integration.
Enter space-separated numbers, `all' or `none': 6 5

Info from file /usr/local/info/maxima.info:
 - Function: integerp (<expr>)
     Returns `true' if <expr> is an integer, otherwise `false'.


 - Function: askinteger (expr, integer)
 - Function: askinteger (expr)
 - Function: askinteger (expr, even)
 - Function: askinteger (expr, odd)
     `askinteger (expr, integer)' attempts to determine from the
     `assume' database whether `expr' is an integer.  `askinteger' will
     ask the user if it cannot tell otherwise, and attempt to install
     the information in the database if possible.  `askinteger (expr)'
     is equivalent to `askinteger (expr, integer)'.

     `askinteger (expr, even)' and `askinteger (expr, odd)' likewise
     attempt to determine if `expr' is an even integer or odd integer,
     respectively.

(%o1)                         false
@end example

Para usar um resultado em c@'alculos posteriores, pode atribuir esse
valor a uma vari@'avel ou referir-se a esse mesmo valor atrav@'es de seu
r@'otulo gerado automaticamente.  Adicionalmente, @kbd{%} refere-se ao
mais recente resultado calculado:

@example
(%i1) u: expand ((x + y)^6);
       6        5       2  4       3  3       4  2      5      6
(%o1) y  + 6 x y  + 15 x  y  + 20 x  y  + 15 x  y  + 6 x  y + x
(%i2) diff (u, x);
         5         4       2  3       3  2       4        5
(%o2) 6 y  + 30 x y  + 60 x  y  + 60 x  y  + 30 x  y + 6 x
(%i3) factor (%o2);
                                    5
(%o3)                      6 (y + x)
@end example

Maxima tem conhecimento sobre n@'umeros complexos e constantes num@'ericas:

@example
(%i1) cos(%pi);
(%o1)                          - 1
(%i2) exp(%i*%pi);
(%o2)                          - 1
@end example

Maxima pode fazer contas de c@'alculo diferencial e integrail:

@example
(%i1) u: expand ((x + y)^6);
       6        5       2  4       3  3       4  2      5      6
(%o1) y  + 6 x y  + 15 x  y  + 20 x  y  + 15 x  y  + 6 x  y + x
(%i2) diff (%, x);
         5         4       2  3       3  2       4        5
(%o2) 6 y  + 30 x y  + 60 x  y  + 60 x  y  + 30 x  y + 6 x
(%i3) integrate (1/(1 + x^3), x);
                                  2 x - 1
                2            atan(-------)
           log(x  - x + 1)        sqrt(3)    log(x + 1)
(%o3)    - --------------- + ------------- + ----------
                  6             sqrt(3)          3
@end example

Maxima pode resolver sistemas lineares e equa@value{cedilha}@~oes c@'ubicas:

@example
(%i1) linsolve ([3*x + 4*y = 7, 2*x + a*y = 13], [x, y]);
                        7 a - 52        25
(%o1)              [x = --------, y = -------]
                        3 a - 8       3 a - 8
(%i2) solve (x^3 - 3*x^2 + 5*x = 15, x);
(%o2)       [x = - sqrt(5) %i, x = sqrt(5) %i, x = 3]
@end example

Maxima pode resolver sistemas de equa@value{cedilha}@~oes n@~ao
lineares. Repare que se n@~ao quiser um resultado impresso, poder@'a
terminar o seu comando com @kbd{$} em lugar de encerrar com @kbd{;}.

@example
(%i1) eq_1: x^2 + 3*x*y + y^2 = 0$
(%i2) eq_2: 3*x + y = 1$
(%i3) solve ([eq_1, eq_2]);
              3 sqrt(5) + 7      sqrt(5) + 3
(%o3) [[y = - -------------, x = -----------], 
                    2                 2

                               3 sqrt(5) - 7        sqrt(5) - 3
                          [y = -------------, x = - -----------]]
                                     2                   2
@end example

Maxima pode gerar gr@'aficos de uma ou mais fun@value{cedilha}@~oes:

@example
(%i1) eq_1: x^2 + 3*x*y + y^2 = 0$
(%i2) eq_2: 3*x + y = 1$
(%i3) solve ([eq_1, eq_2]);
              3 sqrt(5) + 7      sqrt(5) + 3
(%o3) [[y = - -------------, x = -----------], 
                    2                 2

                               3 sqrt(5) - 7        sqrt(5) - 3
                          [y = -------------, x = - -----------]]
                                     2                   2
(%i4) kill(labels);
(%o0)                         done
(%i1) plot2d (sin(x)/x, [x, -20, 20]);
(%o1) 
(%i2) plot2d ([atan(x), erf(x), tanh(x)], [x, -5, 5]);
(%o2) 
(%i3) plot3d (sin(sqrt(x^2 + y^2))/sqrt(x^2 + y^2), [x, -12, 12], [y, -12, 12]);
(%o3) 
@end example

@c FOLLOWING TEXT DESCRIBES THE TCL/TK PLOT WINDOW WHICH IS NO LONGER THE DEFAULT
@c Moving the cursor to the top left corner of the plot window will pop up
@c a menu that will, among other things, let you generate a PostScript file
@c of the plot.  (By default, the file is placed in your home directory.)
@c You can rotate a 3D plot.
