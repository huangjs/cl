@c /Trigonometric.texi/1.14/Fri Jun 17 00:57:35 2005/-ko/
@menu
* Introdu@value{cedilha}@~ao ao Pacote Trigonom@'etrico::  
* Defini@value{cedilha}@~oes para Trigonometria::  
@end menu

@node Introdu@value{cedilha}@~ao ao Pacote Trigonom@'etrico, Defini@value{cedilha}@~oes para Trigonometria, Trigonometria, Trigonometria
@section Introdu@value{cedilha}@~ao ao Pacote Trigonom@'etrico

Maxima tem muitas fun@value{cedilha}@~oes trigonom@'etricas definidas.  N@~ao todas as identidades
trigonometricas est@~ao programadas, mas isso @'e poss@'{@dotless{i}}vel para o utilizador adicionar muitas
delas usando a compatibilidade de correspond@^encia de modelos do sistema.  As
fun@value{cedilha}@~oes trigonom@'etricas definidas no Maxima s@~ao: @code{acos},
@code{acosh}, @code{acot}, @code{acoth}, @code{acsc},
@code{acsch}, @code{asec}, @code{asech}, @code{asin}, 
@code{asinh}, @code{atan}, @code{atanh}, @code{cos}, 
@code{cosh}, @code{cot}, @code{coth}, @code{csc}, @code{csch}, 
@code{sec}, @code{sech}, @code{sin}, @code{sinh}, @code{tan}, 
e @code{tanh}.  Existe uma colec@,{c}@~ao de comandos especialmente para 
manusear fun@value{cedilha}@~oes trigonom@'etricas, veja @code{trigexpand},
@code{trigreduce}, e o comutador @code{trigsign}.  Dois pacotes 
compartilhados extendem as regras de simplifica@value{cedilha}@~ao constru@'{@dotless{i}}das no Maxima, 
@code{ntrig} e @code{atrig1}.  Fa@value{cedilha}a @code{describe(@var{comando})}
para detalhes.

@node Defini@value{cedilha}@~oes para Trigonometria,  , Introdu@value{cedilha}@~ao ao Pacote Trigonom@'etrico, Trigonometria
@section Defini@value{cedilha}@~oes para Trigonometria

@deffn {Fun@value{cedilha}@~ao} acos (@var{x})
 - Arco Cosseno.

@end deffn

@deffn {Fun@value{cedilha}@~ao} acosh (@var{x})
 - Arco Cosseno Hiperb@'olico.

@end deffn

@deffn {Fun@value{cedilha}@~ao} acot (@var{x})
 - Arco Cotangente.

@end deffn

@deffn {Fun@value{cedilha}@~ao} acoth (@var{x})
 - Arco Cotangente Hiperb@'olico.

@end deffn

@deffn {Fun@value{cedilha}@~ao} acsc (@var{x})
 - Arco Cossecante.

@end deffn

@deffn {Fun@value{cedilha}@~ao} acsch (@var{x})
 - Arco Cossecante Hiperb@'olico.

@end deffn

@deffn {Fun@value{cedilha}@~ao} asec (@var{x})
 - Arco Secante.

@end deffn

@deffn {Fun@value{cedilha}@~ao} asech (@var{x})
 - Arco Secante Hiperb@'olico.

@end deffn

@deffn {Fun@value{cedilha}@~ao} asin (@var{x})
 - Arco Seno.

@end deffn

@deffn {Fun@value{cedilha}@~ao} asinh (@var{x})
 - Arco Seno Hiperb@'olico.

@end deffn

@deffn {Fun@value{cedilha}@~ao} atan (@var{x})
 - Arco Tangente.

@end deffn

@deffn {Fun@value{cedilha}@~ao} atan2 (@var{y}, @var{x})
- retorna o valor de @code{atan(@var{y}/@var{x})} no intervalo de @code{-%pi} a
@code{%pi}.

@end deffn

@deffn {Fun@value{cedilha}@~ao} atanh (@var{x})
 - Arco tangente Hiperb@'olico.

@end deffn

@c IS THIS DESCRIPTION ACCURATE ??
@c LET'S BE EXPLICIT ABOUT EXACTLY WHAT ARE THE RULES IMPLEMENTED BY THIS PACKAGE
@defvr {Pacote} atrig1
O pacote @code{atrig1} cont@'em muitas regras adicionais de simplifica@value{cedilha}@~ao 
para fun@value{cedilha}@~oes trigonom@'etricas inversas.  Junto com regras
j@'a conhecidas para Maxima, os seguintes @^angulos est@~ao completamente implementados:
@code{0}, @code{%pi/6}, @code{%pi/4}, @code{%pi/3}, e @code{%pi/2}.  
Os @^angulos correspondentes nos outros tr@^es quadrantes est@~ao tamb@'em dispon@'{@dotless{i}}veis.  
Fa@value{cedilha}a @code{load(atrig1);} para us@'a-lo.

@end defvr

@deffn {Fun@value{cedilha}@~ao} cos (@var{x})
 - Cosseno.

@end deffn

@deffn {Fun@value{cedilha}@~ao} cosh (@var{x})
 - Cosseno hiperb@'olico.

@end deffn

@deffn {Fun@value{cedilha}@~ao} cot (@var{x})
 - Cotangente.

@end deffn

@deffn {Fun@value{cedilha}@~ao} coth (@var{x})
 - Cotangente Hyperb@'olica.

@end deffn

@deffn {Fun@value{cedilha}@~ao} csc (@var{x})
 - Cossecante.

@end deffn

@deffn {Fun@value{cedilha}@~ao} csch (@var{x})
 - Cossecante Hyperb@'olica.

@end deffn

@defvr {Vari@'avel de op@value{cedilha}@~ao} halfangles
Default value: @code{false}

Quando @code{halfangles} for @code{true},
meios-@^angulos s@~ao simplificados imediatamente.
@c WHAT DOES THIS STATEMENT MEAN EXACTLY ??
@c NEEDS EXAMPLES

@end defvr

@c IS THIS DESCRIPTION ACCURATE ??
@c LET'S BE EXPLICIT ABOUT EXACTLY WHAT ARE THE RULES IMPLEMENTED BY THIS PACKAGE
@defvr {Pacote} ntrig
O pacote @code{ntrig} cont@'em um conjunto de regras de simplifica@value{cedilha}@~ao que s@~ao
usadas para simplificar fun@value{cedilha}@~ao trigonom@'etrica cujos argumentos est@~ao na forma
@code{@var{f}(@var{n} %pi/10)} onde @var{f} @'e qualquer das fun@value{cedilha}@~oes 
@code{sin}, @code{cos}, @code{tan}, @code{csc}, @code{sec} e @code{cot}.
@c NEED TO LOAD THIS PACKAGE ??

@end defvr

@deffn {Fun@value{cedilha}@~ao} sec (@var{x})
 - Secante.

@end deffn

@deffn {Fun@value{cedilha}@~ao} sech (@var{x})
 - Secante Hyperb@'olica.

@end deffn

@deffn {Fun@value{cedilha}@~ao} sin (@var{x})
 - Seno.

@end deffn

@deffn {Fun@value{cedilha}@~ao} sinh (@var{x})
 - Seno Hyperb@'olico.

@end deffn

@deffn {Fun@value{cedilha}@~ao} tan (@var{x})
 - Tangente.

@end deffn

@deffn {Fun@value{cedilha}@~ao} tanh (@var{x})
 - Tangente Hyperb@'olica.

@end deffn

@c NEEDS CLARIFICATION AND EXAMPLES
@deffn {Fun@value{cedilha}@~ao} trigexpand (@var{expr})
Expande fun@value{cedilha}@~oes trigonometricas e hyperb@'olicas de
adi@value{cedilha}@~oes de @^angulos e de @^angulos multiplos que ocorram em @var{expr}.  Para melhores
resultados, @var{expr} deve ser expandida.  Para intensificar o controle do utilizador
na simplifica@value{cedilha}@~ao, essa fun@value{cedilha}@~ao expande somente um n@'{@dotless{i}}vel de cada vez,
expandindo adi@value{cedilha}@~oes de @^angulos ou @^angulos multiplos.  Para obter expans@~ao completa
dentro de senos e co-senos imediatamente, escolha o comutador @code{trigexpand: true}.

@code{trigexpand} @'e governada pelos seguintes sinalizadores globais:

@table @code
@item trigexpand
Se @code{true} causa expans@~ao de todas as
express@~oes contendo senos e co-senos ocorrendo subsequ@^entemente.
@item halfangles
Se @code{true} faz com que meios-@^angulos sejam simplificados
imediatamente.
@item trigexpandplus
Controla a regra "soma" para @code{trigexpand},
expans@~ao de adi@value{cedilha}@~oes (e.g. @code{sin(x + y)}) ter@~ao lugar somente se
@code{trigexpandplus} for @code{true}.
@item trigexpandtimes
Controla a regra "produto" para @code{trigexpand},
expans@~ao de produtos (e.g. @code{sin(2 x)}) ter@~ao lugar somente se
@code{trigexpandtimes} for @code{true}.
@end table

Exemplos:

@c ===beg===
@c x+sin(3*x)/sin(x),trigexpand=true,expand;
@c trigexpand(sin(10*x+y));
@c ===end===
@example
(%i1) x+sin(3*x)/sin(x),trigexpand=true,expand;
                         2           2
(%o1)               - sin (x) + 3 cos (x) + x
(%i2) trigexpand(sin(10*x+y));
(%o2)          cos(10 x) sin(y) + sin(10 x) cos(y)

@end example

@end deffn

@defvr {Vari@'avel de op@value{cedilha}@~ao} trigexpandplus
Valor por omiss@~ao: @code{true}

@code{trigexpandplus} controla a regra da "soma" para
@code{trigexpand}.  Dessa forma, quando o comando @code{trigexpand} for usado ou o
comutador @code{trigexpand} escolhido para @code{true}, expans@~ao de adi@value{cedilha}@~oes
(e.g. @code{sin(x+y))} ter@~ao lugar somente se @code{trigexpandplus} for
@code{true}.

@end defvr

@defvr {Vari@'avel de op@value{cedilha}@~ao} trigexpandtimes
Valor por omiss@~ao: @code{true}

@code{trigexpandtimes} controla a regra "produto" para
@code{trigexpand}.  Dessa forma, quando o comando @code{trigexpand} for usado ou o
comutador @code{trigexpand} escolhido para @code{true}, expans@~ao de produtos (e.g. @code{sin(2*x)})
ter@~ao lugar somente se @code{trigexpandtimes} for @code{true}.

@end defvr

@defvr {Vari@'avel de op@value{cedilha}@~ao} triginverses
Valor por omiss@~ao: @code{all}

@code{triginverses} controla a simplifica@value{cedilha}@~ao de
composi@value{cedilha}@~oes de fun@value{cedilha}@~oes trigonom@'etricas e hiperb@'olicas com suas fun@value{cedilha}@~oes
inversas.

Se @code{all}, ambas e.g. @code{atan(tan(@var{x}))} 
e @code{tan(atan(@var{x}))} simplificar@~ao para @var{x}.  

Se @code{true}, a simplifica@value{cedilha}@~ao  de @code{@var{arcfun}(@var{fun}(@var{x}))} 
@'e desabilitada.

Se @code{false}, ambas as simplifica@value{cedilha}@~oes  
@code{@var{arcfun}(@var{fun}(@var{x}))} e  
@code{@var{fun}(@var{arcfun}(@var{x}))}
s@~ao desabilitadas.

@end defvr

@deffn {Fun@value{cedilha}@~ao} trigreduce (@var{expr}, @var{x})
@deffnx {Fun@value{cedilha}@~ao} trigreduce (@var{expr})
Combina produtos e expoentes de senos e cossenso
trigonom@'etricos e hiperb@'olicos de @var{x} dentro daqueles de m@'ultiplos de @var{x}.
Tamb@'em tenta eliminar essas fun@value{cedilha}@~oes quando elas ocorrerem em
denominadores.  Se @var{x} for omitido ent@~ao todas as vari@'aveis em @var{expr} s@~ao usadas.

Veja tamb@'em @code{poissimp}.

@c ===beg===
@c trigreduce(-sin(x)^2+3*cos(x)^2+x);
@c ===end===
@example
(%i1) trigreduce(-sin(x)^2+3*cos(x)^2+x);
               cos(2 x)      cos(2 x)   1        1
(%o1)          -------- + 3 (-------- + -) + x - -
                  2             2       2        2

@end example

As rotinas de simplifica@value{cedilha}@~ao trigonom@'etrica ir@~ao usar informa@value{cedilha}@~oes
declaradas em alguns casos simples.  Declara@value{cedilha}@~oes sobre vari@'aveis s@~ao
usadas como segue, e.g.

@c ===beg===
@c declare(j, integer, e, even, o, odd)$
@c sin(x + (e + 1/2)*%pi);
@c sin(x + (o + 1/2)*%pi);
@c ===end===
@example
(%i1) declare(j, integer, e, even, o, odd)$
(%i2) sin(x + (e + 1/2)*%pi);
(%o2)                        cos(x)
(%i3) sin(x + (o + 1/2)*%pi);
(%o3)                       - cos(x)

@end example

@end deffn

@defvr {Vari@'avel de op@value{cedilha}@~ao} trigsign
Valor por omiss@~ao: @code{true}

Quando @code{trigsign} for @code{true}, permite simplifica@value{cedilha}@~ao de argumentos
negativos para fun@value{cedilha}@~oes trigonom@'etricas. E.g., @code{sin(-x)} transformar-se-@'a em
@code{-sin(x)} somente se @code{trigsign} for @code{true}.

@end defvr

@deffn {Fun@value{cedilha}@~ao} trigsimp (@var{expr})
Utiliza as identidades @math{sin(x)^2 + cos(x)^2 = 1} and
@math{cosh(x)^2 - sinh(x)^2 = 1} para simplificar express@~oes contendo @code{tan}, @code{sec},
etc., para @code{sin}, @code{cos}, @code{sinh}, @code{cosh}.

@code{trigreduce}, @code{ratsimp}, e @code{radcan} podem estar
habilitadas a adicionar simplifica@value{cedilha}@~oes ao resultado.

@code{demo ("trgsmp.dem")} mostra alguns exemplos de @code{trigsimp}.
@c MERGE EXAMPLES INTO THIS ITEM

@end deffn

@c NEEDS CLARIFICATION
@deffn {Fun@value{cedilha}@~ao} trigrat (@var{expr})
Fornece uma forma quase-linear simplificada can@'onica de uma
express@~ao trigonom@'etrica; @var{expr} @'e uma fra@value{cedilha}@~ao racional de muitos @code{sin},
@code{cos} ou @code{tan}, os argumentos delas s@~ao formas lineares em algumas vari@'aveis (ou
kernels-n@'ucleos) e @code{%pi/@var{n}} (@var{n} inteiro) com coeficientes inteiros. O resultado @'e uma
fra@value{cedilha}@~ao simplificada com numerador e denominador ambos lineares em @code{sin} e @code{cos}.
Dessa forma @code{trigrat} lineariza sempre quando isso for pass@'{@dotless{i}}vel.

@c ===beg===
@c trigrat(sin(3*a)/sin(a+%pi/3));
@c ===end===
@example
(%i1) trigrat(sin(3*a)/sin(a+%pi/3));
(%o1)            sqrt(3) sin(2 a) + cos(2 a) - 1

@end example

O seguinte exemplo encontra-se em
Davenport, Siret, and Tournier, @i{Calcul Formel}, Masson (ou em ingl@^es,
Addison-Wesley), sec@value{cedilha}@~ao 1.5.5, teorema de Morley.

@c ===beg===
@c c: %pi/3 - a - b;
@c bc: sin(a)*sin(3*c)/sin(a+b);
@c ba: bc, c=a, a=c$
@c ac2: ba^2 + bc^2 - 2*bc*ba*cos(b);
@c trigrat (ac2);
@c ===end===
@example
(%i1) c: %pi/3 - a - b;
                                    %pi
(%o1)                     - b - a + ---
                                     3
(%i2) bc: sin(a)*sin(3*c)/sin(a+b);
                      sin(a) sin(3 b + 3 a)
(%o2)                 ---------------------
                           sin(b + a)
(%i3) ba: bc, c=a, a=c$
(%i4) ac2: ba^2 + bc^2 - 2*bc*ba*cos(b);
         2       2
      sin (a) sin (3 b + 3 a)
(%o4) -----------------------
               2
            sin (b + a)

                                        %pi
   2 sin(a) sin(3 a) cos(b) sin(b + a - ---) sin(3 b + 3 a)
                                         3
 - --------------------------------------------------------
                           %pi
                   sin(a - ---) sin(b + a)
                            3

      2         2         %pi
   sin (3 a) sin (b + a - ---)
                           3
 + ---------------------------
             2     %pi
          sin (a - ---)
                    3
(%i5) trigrat (ac2);
(%o5) - (sqrt(3) sin(4 b + 4 a) - cos(4 b + 4 a)

 - 2 sqrt(3) sin(4 b + 2 a) + 2 cos(4 b + 2 a)

 - 2 sqrt(3) sin(2 b + 4 a) + 2 cos(2 b + 4 a)

 + 4 sqrt(3) sin(2 b + 2 a) - 8 cos(2 b + 2 a) - 4 cos(2 b - 2 a)

 + sqrt(3) sin(4 b) - cos(4 b) - 2 sqrt(3) sin(2 b) + 10 cos(2 b)

 + sqrt(3) sin(4 a) - cos(4 a) - 2 sqrt(3) sin(2 a) + 10 cos(2 a)

 - 9)/4

@end example

@end deffn

