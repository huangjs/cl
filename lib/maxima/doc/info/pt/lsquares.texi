/lsquares.texi/1.1/Mon Feb 27 22:09:17 2006//
@c /lsquares.texi/1.1/Mon Feb 27 22:09:17 2006//
@menu
* Defini@value{cedilha}@~oes para lsquares::
@end menu

@node Defini@value{cedilha}@~oes para lsquares,  , lsquares, lsquares
@section Defini@value{cedilha}@~oes para lsquares


@defvr {Vari@'avel global} DETCOEF

Essa vari@'avel @'e usada pelas fun@value{cedilha}@~oes
@code{lsquares} e @code{plsquares} para armazenar o Coeficiente de
Determina@value{cedilha}@~ao que mede o melhor ajuste. Esse intervalo
vai de 0 (nenhuma correla@value{cedilha}@~ao) a 1 (correla@value{cedilha}@~ao
exacta). 

Quando @code{plsquares} for chamada com uma lista de vari@'aveis independentes, @var{DETCOEF} @'e escolhida para uma lista de Coeficientes de Determina@value{cedilha}@~ao. Veja @code{plsquares} para detalhes.

Veja tamb@'em @code{lsquares}.
@end defvr


@deffn {Fun@value{cedilha}@~ao} lsquares (@var{Mat},@var{VarList},@var{equa@value{cedilha}@~ao},@var{ParamList})
@deffnx {Fun@value{cedilha}@~ao} lsquares (@var{Mat},@var{VarList},@var{equa@value{cedilha}@~ao},@var{ParamList},@var{EsperadosList})
Ajuste m@'ultiplo de equa@value{cedilha}@~oes n@~ao lineares de uma tabela de dados pelo
m@'etodo dos "m@'{@dotless{i}}nimos quadrados". @var{Mat} @'e uma matriz contendo os dados,
@var{VarList} @'e uma lista de nomes de vari@'aveis (um para cada coluna de @var{Mat}),
@var{equa@value{cedilha}@~ao} @'e a equa@value{cedilha}@~ao a ser ajustada (essa equa@value{cedilha}@~ao deve estar na forma:
@code{depvar=f(indepvari,..., paramj,...)}, @code{g(depvar)=f(indepvari,..., paramj,...)} 
ou na forma @code{g(depvar, paramk,...)=f(indepvari,..., paramj,...)}), @var{ParamList} @'e a
lista de par@^ametros para obter, e @var{EsperadosList} @'e uma lista opcional de aproxima@value{cedilha}@~oes 
iniciais para os par@^ametros; quando esse @'ultimo argumento estiver presente, @code{mnewton} @'e usado
em lugar de @code{solve} com o objectivo de pegar os par@^ametros.

A equa@value{cedilha}@~ao pode ser completamente n@~ao linear com rela@value{cedilha}@~ao @`as vari@'aveis
independentes e @`a vari@'avel dependente.
Com o objectivo de usar @code{solve()}, as equa@value{cedilha}@~oes devem ser lineares ou polinomiais com
rela@value{cedilha}@~ao aos par@^ametros. Equa@value{cedilha}@~oes como @code{y=a*b^x+c} podem ser ajustadas para
@code{[a,b,c]} com @code{solve} se os valores de @code{x} forem inteiros positivos pequenos e
existirem poucos dados (veja o exemplo em lsquares.dem).
@code{mnewton} permite ajustar uma equa@value{cedilha}@~ao n@~ao linear com rela@value{cedilha}@~ao aos
par@^ametros, mas um bom conjunto de aproxima@value{cedilha}@~oes iniciais deve ser fornecido.

Se poss@'{@dotless{i}}vel, a equa@value{cedilha}@~ao ajustada @'e retornada. Se existir mais
de uma solu@value{cedilha}@~ao, uma lista de equa@value{cedilha}@~oes @'e retornada.
O Coeficiente de Determina@value{cedilha}@~ao @'e mostrado para informar sobre
o melhor ajuste, de 0 (nenhuma correla@value{cedilha}@~ao) a 1 (correla@value{cedilha}@~ao exacta).
Esse valor @'e tamb@'em armazenado na vari@'avel global @var{DETCOEF}.

Exemplos usando @code{solve}:
@example
(%i1) load("lsquares")$

(%i2) lsquares(matrix([1,2,0],[3,5,4],[4,7,9],[5,8,10]),
               [x,y,z], z=a*x*y+b*x+c*y+d, [a,b,c,d]);
      Determination Coefficient = 1.0
                    x y + 23 y - 29 x - 19
(%o2)           z = ----------------------
                              6
(%i3) lsquares(matrix([0,0],[1,0],[2,0],[3,8],[4,44]),
               [n,p], p=a4*n^4+a3*n^3+a2*n^2+a1*n+a0,
         [a0,a1,a2,a3,a4]);
      Determination Coefficient = 1.0
                     4       3      2
                  3 n  - 10 n  + 9 n  - 2 n
(%o3)         p = -------------------------
                              6
(%i4) lsquares(matrix([1,7],[2,13],[3,25]), 
               [x,y], (y+c)^2=a*x+b, [a,b,c]);
      Determination Coefficient = 1.0
(%o4) [y = 28 - sqrt(657 - 216 x),
                                y = sqrt(657 - 216 x) + 28]
(%i5) lsquares(matrix([1,7],[2,13],[3,25],[4,49]),
               [x,y], y=a*b^x+c, [a,b,c]);
      Determination Coefficient = 1.0
                              x
(%o5)                  y = 3 2  + 1
@end example


Exemplos usando @code{mnewton}:
@example
(%i6) load("lsquares")$

(%i7) lsquares(matrix([1.1,7.1],[2.1,13.1],[3.1,25.1],[4.1,49.1]),
               [x,y], y=a*b^x+c, [a,b,c], [5,5,5]);
                                             x
(%o7) y = 2.799098974610482 1.999999999999991
                                        + 1.099999999999874
(%i8) lsquares(matrix([1.1,4.1],[4.1,7.1],[9.1,10.1],[16.1,13.1]),
               [x,y], y=a*x^b+c, [a,b,c], [4,1,2]);
                             .4878659755898127
(%o8) y = 3.177315891123101 x
                                        + .7723843491402264
(%i9) lsquares(matrix([0,2,4],[3,3,5],[8,6,6]),
              [m,n,y], y=(A*m+B*n)^(1/3)+C, [A,B,C], [3,3,3]);
                                                     1/3
(%o9) y = (3.999999999999862 n + 4.999999999999359 m)
                                         + 2.00000000000012
@end example

Para usar essa fun@value{cedilha}@~ao escreva primeiro @code{load("lsquares")}. Veja tamb@'em @code{DETCOEF} e @code{mnewton}.
@end deffn


@deffn {Fun@value{cedilha}@~ao} plsquares (@var{Mat},@var{VarList},@var{depvars})
@deffnx {Fun@value{cedilha}@~ao} plsquares (@var{Mat},@var{VarList},@var{depvars},@var{maxexpon})
@deffnx {Fun@value{cedilha}@~ao} plsquares (@var{Mat},@var{VarList},@var{depvars},@var{maxexpon},@var{maxdegree})
Ajuste de polin@'omios de v@'arias vari@'aveis de uma tabela de dados pelo m@'etodo dos
"m@'{@dotless{i}}nimos quadrados". @var{Mat} @'e uma matriz contendo os dados, @var{VarList} @'e uma lista de nomes de vari@'aveis (um nome para cada coluna de Mat, mas use "-" em lugar de nomes de vari@'aveis para colunas de Mat), @var{depvars} @'e o
nome de uma vari@'avel dependente ou uma
lista com um ou mais nomes de vari@'aveis dependentes (cujos nomes podem estar em @var{VarList}), @var{maxexpon} @'e o expoente m@'aximo opcional para cada vari@'avel independente (1 por padr@~ao), e @var{maxdegree} @'e o argumento opcional
grau m@'aximo do polin@'omio (@var{maxexpon} por padr@~ao); note que a soma dos expoentes de cada termo deve ser menor ou igual a @var{maxdegree}, e se @code{maxdgree = 0} ent@~ao nenhum limite @'e aplicado.

Se @var{depvars} @'e o nome de uma vari@'avel dependente (fora de uma lista), @code{plsquares} retorna o polin@'omio ajustado. Se @var{depvars} for uma lista de uma ou mais vari@'aveis dependentes, @code{plsquares} retorna uma lista com
o(s) polin@'omio(s) ajustado(s). Os Coeficientes de Determina@value{cedilha}@~ao s@~ao mostrados com o objectivo de informar sobre o melhor do ajuste, cujo intervalo vai de 0 (nenhuma correla@value{cedilha}@~ao) a 1 (correla@value{cedilha}@~ao exacta). Esses valores s@~ao tamb@'em armazenados na vari@'avel
global @var{DETCOEF} (uma lista se @var{depvars} for tamb@'numa lista).


Um simples exemplo de ajuste linear de v@'arias vari@'aveis:
@example
(%i1) load("plsquares")$

(%i2) plsquares(matrix([1,2,0],[3,5,4],[4,7,9],[5,8,10]),
                [x,y,z],z);
     Determination Coefficient for z = .9897039897039897
                       11 y - 9 x - 14
(%o2)              z = ---------------
                              3
@end example

O mesmo exemplo sem restri@value{cedilha}@~oes de grau:
@example
(%i3) plsquares(matrix([1,2,0],[3,5,4],[4,7,9],[5,8,10]),
                [x,y,z],z,1,0);
     Determination Coefficient for z = 1.0
                    x y + 23 y - 29 x - 19
(%o3)           z = ----------------------
                              6
@end example

Quantas diagonais possui um pol@'{@dotless{i}}gono de N lados? Que
grau polinomial dever@'a ser usado?
@example
(%i4) plsquares(matrix([3,0],[4,2],[5,5],[6,9],[7,14],[8,20]),
                [N,diagonais],diagonais,5);
     Determination Coefficient for diagonais = 1.0
                                2
                               N  - 3 N
(%o4)              diagonais = --------
                                  2
(%i5) ev(%, N=9);   /* Testando para um pol@'{@dotless{i}}gono de 9 lados - o ene@'agono */
(%o5)                 diagonals = 27
@end example

De quantas formas dispomos para colocar  duas ra@'{@dotless{i}}nhas sem que elas estejam amea@value{cedilha}adas num tabuleiro de xadrez n x n ?
@example
(%i6) plsquares(matrix([0,0],[1,0],[2,0],[3,8],[4,44]),
                [n,posicoes],[posicoes],4);
     Determination Coefficient for [posicoes] = [1.0]
                         4       3      2
                      3 n  - 10 n  + 9 n  - 2 n
(%o6)    [posicoes  = -------------------------]
                                  6
(%i7) ev(%[1], n=8); /* Testando para um tabuleiro de (8 x 8) */
(%o7)                posicoes = 1288
@end example

Um exemplo com seis vari@'aveis dependentes:
@example
(%i8) mtrx:matrix([0,0,0,0,0,1,1,1],[0,1,0,1,1,1,0,0],
                  [1,0,0,1,1,1,0,0],[1,1,1,1,0,0,0,1])$
(%i8) plsquares(mtrx,[a,b,_And,_Or,_Xor,_Nand,_Nor,_Nxor],
                     [_And,_Or,_Xor,_Nand,_Nor,_Nxor],1,0);
      Determination Coefficient for
[_And, _Or, _Xor, _Nand, _Nor, _Nxor] =
[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
(%o2) [_And = a b, _Or = - a b + b + a,
_Xor = - 2 a b + b + a, _Nand = 1 - a b,
_Nor = a b - b - a + 1, _Nxor = 2 a b - b - a + 1]
@end example

Para usar essa fun@value{cedilha}@~ao escreva primeiramente @code{load("lsquares")}.
@end deffn

