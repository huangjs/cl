@c /stats.texi/1.4/Sat Jan 13 04:30:36 2007//
@menu
* Introdu@value{cedilha}@~ao a stats::
* Defini@value{cedilha}@~oes para inference_result::
* Defini@value{cedilha}@~oes para stats::
* Defini@value{cedilha}@~oes para distribui@value{cedilha}@~oes especiais::
@end menu

@node Introdu@value{cedilha}@~ao a stats, Defini@value{cedilha}@~oes para inference_result, Top, Top
@section Introdu@value{cedilha}@~ao a stats


O pacote @code{stats} cont@'em um conjunto de procedimentos de infer@^encia cl@'assica 
estat@'{@dotless{i}}stica e procedimentos de teste.

Todas essas fun@value{cedilha}@~oes retornam um objecto do Maxima chamado @code{inference_result} que cont@'em
os resultados necess@'arios para infer@^encias de manipula@value{cedilha}@~ao e tomada de decis@~oes.

A vari@'avel global @code{stats_numer} controla se resultados s@~ao mostrados em 
ponto flutuante ou simb@'olico e no formato racional; seu valor padr@~ao @'e @code{true}
e os resultados s@~ao retornados no formato de ponto flutuante.

O pacote @code{descriptive} cont@'em alguns utilit@'arios para manipular estruturas de dados
(listas e matrizes); por exemplo, para extrair subamostras. O pacote @code{descriptive} tamb@'em cont@'em alguns
exemplos sobre como usar o pacote @code{numericalio} para ler dados a partir de ficheiro no formato texto 
plano. Veja @code{descriptive} e @code{numericalio} para maiores detalhes.

O pacote @code{stats} precisa dos pacotes @code{descriptive}, @code{distrib} e
@code{inference_result}.

Para coment@'arios, erros ou sugest@~oes, por favor contate o autor em

@var{'mario AT edu DOT xunta DOT es'}.


@node Defini@value{cedilha}@~oes para inference_result, Defini@value{cedilha}@~oes para stats, Introdu@value{cedilha}@~ao a stats, Top
@section Defini@value{cedilha}@~oes para inference_result

@deffn {Fun@value{cedilha}@~ao} inference_result (@var{t@'{@dotless{i}}tulo}, @var{valores}, @var{n@'umeros})

Constr@'oi um objecto @code{inference_result} do tipo retornado pelas
fun@value{cedilha}@~oes stats. O argumento @var{t@'{@dotless{i}}tulo} @'e uma
sequ@^encia de caracteres do Maxima co o nome do procedimento; @var{valores} @'e uma lissta com
elementos da forma @code{s@'{@dotless{i}}mbolo = valor} e @var{n@'umeros} @'e uma lista
com n@'umeros inteiros positivos no intervalo de um para @code{length(@var{valores})},
indicando que valores ser@~ao mostrados por padr@~ao.

Exemplo:

Este @'e um exemplo que mostras os resultados associados a um ret@'angulo. O
t@'{@dotless{i}}tulo deste bojeto @'e a sequ@^encia de caraceteres @code{"Ret@^angulo"}, o qual
armazena cinco resultados, a saber, @code{'base}, @code{'altura}, 
@code{'diagonal}, @code{'@'area} y @code{'per@'{@dotless{i}}metro}, por@'em s@'o mostra
o primeiro, segundo, quinto e quarto resultado. O resultado @code{'diagonal} tamb@'em
@'e armazenado neste objecto, no entanto n@~ao @'e mostrado por padr@~ao; para se ter acesso
a este valor, faz-se uso da fun@value{cedilha}@~ao @code{take_inference}.

@c ===beg===
@c load (inference_result)$
@c b: 3$ h: 2$
@c inference_result("Ret@^angulo",
@c                  ['base=b,
@c                   'altura=h,
@c                   'diagonal=sqrt(b^2+h^2),
@c                   'area=b*h,
@c                   'per@'{@dotless{i}}metro=2*(b+h)],
@c                  [1,2,5,4] );
@c take_inference('diagonal,%);
@c ===end===
@example
(%i1) load(inference_result)$
(%i2) b: 3$ h: 2$
(%i3) inference_result("Ret@^angulo",
                        ['base=b,
                         'altura=h,
                         'diagonal=sqrt(b^2+h^2),
                         '@'area=b*h,
                         'per@'{@dotless{i}}metro=2*(b+h)],
                        [1,2,5,4] );
                        |   Ret@^angulo
                        |
                        |    base = 3
                        |
(%o3)                   |   altura = 2
                        |
                        | per@'{@dotless{i}}metro = 10
                        |
                        |    area = 6
(%i4) take_inference('diagonal,%);
(%o4)                        sqrt(13)
@end example

Veja tamb@'em @code{take_inference}.
@end deffn






@deffn {Fun@value{cedilha}@~ao} inferencep (@var{obj})

Retorna @code{true} ou @code{false}, dependendo se @var{obj} @'e
um objecto @code{inference_result} ou n@~ao.

@end deffn






@deffn {Fun@value{cedilha}@~ao} items_inference (@var{obj})

Retorna uma lista com os nomes dos itens em @var{obj}, que devem
ser um objecto @code{inference_result}.

Exemplo:

O objecto @code{inference_result} armazena dois valores, a saber @code{'pi} e @code{'e},
mas somente o segundo @'e mostrado. A fun@value{cedilha}@~ao @code{items_inference} retorna os nomes
de todos os itens, n@~ao importa se eles s@~ao ou n@~ao mostrados.

@c ===beg===
@c load (inference_result)$
@c inference_result("Hi", ['pi=%pi,'e=%e],[2]);
@c items_inference(%);
@c ===end===
@example
(%i1) load(inference_result)$
(%i2) inference_result("Hi", ['pi=%pi,'e=%e],[2]);
                            |   Hi
(%o2)                       |
                            | e = %e
(%i3) items_inference(%);
(%o3)                        [pi, e]
@end example
@end deffn







@deffn {Fun@value{cedilha}@~ao} take_inference (@var{n}, @var{obj})
@deffnx {Fun@value{cedilha}@~ao} take_inference (@var{nome}, @var{obj})
@deffnx {Fun@value{cedilha}@~ao} take_inference (@var{lista}, @var{obj})

Retorna o @var{n}-@'esimo valor armazenado em @var{obj} se @var{n} for um inteiro positivo,
ou o item chamado @var{nome} se esse for o nome de um item. Se o primeiro
argumento for uma lista de n@'umeros e/ou s@'{@dotless{i}}mbolos, a fun@value{cedilha}@~ao @code{take_inference} retorna
uma lista com os resultados correspondentes.

Exemplo:

Fornece um objecto @code{inference_result}, a fun@value{cedilha}@~ao @code{take_inference} @'e
chamada com o objectivo de extrair alguma informa@value{cedilha}@~ao armazenada nesse objecto.

@c ===beg===
@c load (inference_result)$
@c b: 3$ h: 2$
@c sol:inference_result("Ret@^angulo",
@c                      ['base=b,
@c                       'altura=h,
@c                       'diagonal=sqrt(b^2+h^2),
@c                       'area=b*h,
@c                       'per@'{@dotless{i}}metro=2*(b+h)],
@c                      [1,2,5,4] );
@c take_inference('base,sol);
@c take_inference(5,sol);
@c take_inference([1,'diagonal],sol);
@c take_inference(items_inference(sol),sol);
@c ===end===
@example
(%i1) load(inference_result)$
(%i2) b: 3$ h: 2$
(%i3) sol: inference_result("Ret@^angulo",
                            ['base=b,
                             'altura=h,
                             'diagonal=sqrt(b^2+h^2),
                             'area=b*h,
                             'per@'{@dotless{i}}metro=2*(b+h)],
                            [1,2,5,4] );
                        |   Ret@^angulo
                        |
                        |    base = 3
                        |
(%o3)                   |   altura = 2
                        |
                        | per@'{@dotless{i}}metro = 10
                        |
                        |    area = 6
(%i4) take_inference('base,sol);
(%o4)                           3
(%i5) take_inference(5,sol);
(%o5)                          10
(%i6) take_inference([1,'diagonal],sol);
(%o6)                     [3, sqrt(13)]
(%i7) take_inference(items_inference(sol),sol);
(%o7)                [3, 2, sqrt(13), 6, 10]
@end example

Veja tamb@'em @code{inference_result} e @code{take_inference}.
@end deffn









@node Defini@value{cedilha}@~oes para stats, Defini@value{cedilha}@~oes para distribui@value{cedilha}@~oes especiais, Defini@value{cedilha}@~oes para inference_result, Top
@section Defini@value{cedilha}@~oes para stats


@defvr {Vari@'avel de op@value{cedilha}@~ao} stats_numer
Valor por omiss@~ao: @code{true}

Se @code{stats_numer} for @code{true}, fun@value{cedilha}@~oes de infer@^encia estat@'{@dotless{i}}stica 
retornam seus resultados em n@'umeros com ponto flutuante. Se @code{stats_numer} for @code{false},
resultados s@~ao fornecidos em formato simb@'olico e racional.

@end defvr


@deffn {Fun@value{cedilha}@~ao} test_mean (@var{x})
@deffnx {Fun@value{cedilha}@~ao} test_mean (@var{x}, @var{op@value{cedilha}@~ao_1}, @var{op@value{cedilha}@~ao_2}, ...)

Esse @'e o teste-@var{t} de m@'edia. O argumento @var{x} @'e uma lista ou uma matriz coluna
contendo uma amostra unidimensional. @code{test_mean} tamb;em executa um teste assint@'otico
baseado no @i{Teorema do Limite Central} se a op@value{cedilha}@~ao @code{'asymptotic} for
@code{true}.

Op@value{cedilha}@~oes:

@itemize @bullet

@item
@code{'mean}, o valor padr@~ao @'e @code{0}, @'e o valor da m@'edia a ser verificado.

@item
@code{'alternative}, o valor padr@~ao @'e @code{'twosided}, @'e a hip@'otese alternativa;
valores v@'alidos s@~ao: @code{'twosided}, @code{'greater} e @code{'less}.

@item
@code{'dev}, o valor padr@~ao @'e @code{'unknown}, corresponde ao valor do desvio padr@~ao quando esse valor de desvio padr@~ao for
conhecido; valores v@'alidos s@~ao: @code{'unknown} ou uma express@~ao positiva.

@item
@code{'conflevel}, o valor padr@~ao @'e @code{95/100}, n@'{@dotless{i}}vel de confid@^encia para o intervalo de confid@^encia; deve
ser uma express@~ao que toma um valor em (0,1).

@item
@code{'asymptotic}, o valor padr@~ao @'e @code{false}, indica se @code{test_mean} exeecuta um teste-@var{t} exato ou
um teste assint@'otico baseando-se no @i{Teorema do Limite Central};
valores v@'alidos s@~ao @code{true} e @code{false}.

@end itemize

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{test_mean} @'e um objecto @code{inference_result} do Maxima
mostrando os seguintes resultados:

@enumerate

@item
@code{'mean_estimate}: a m@'edia da amostra.

@item
@code{'conf_level}: n@'{@dotless{i}}vel de confid@^encia seleccionado pelo utilizador.

@item
@code{'conf_interval}: intervalo de confid@^encia para a m@'edia da popula@value{cedilha}@~ao.

@item
@code{'method}: procedimento de infer@^encia.

@item
@code{'hypotheses}: hip@'otese do nulo e hip@'otese alternativa a ser testada.

@item
@code{'statistic}: valor da amostra estat@'{@dotless{i}}stica a ser usado para testar a hip@'otese do nulo.

@item
@code{'distribution}: distribui@value{cedilha}@~ao da amostra estat@'{@dotless{i}}stica, juntamente com seus par@^ametro(s).

@item
@code{'p_value}: valores de @math{p} do teste.

@end enumerate

Exemplos:

Executa um teste-@var{t} exato com vari@^ancia desconhecida. A hip@'otese do nulo
@'e @math{H_0: mean=50} contra a alternativa unilatera @math{H_1: mean<50};
conforme os resultados, o valor de @math{p} @'e muito grande, n@~ao existem
evid@^encias paa rejeitar @math{H_0}.

@c ===beg===
@c load (stats)$
@c data: [78,64,35,45,45,75,43,74,42,42]$
@c test_mean(data,'conflevel=0.9,'alternative='less,'mean=50);
@c ===end===
@example
(%i1) load("stats")$
(%i2) data: [78,64,35,45,45,75,43,74,42,42]$
(%i3) test_mean(data,'conflevel=0.9,'alternative='less,'mean=50);
          |                 MEAN TEST
          |
          |            mean_estimate = 54.3
          |
          |              conf_level = 0.9
          |
          | conf_interval = [minf, 61.51314273502712]
          |
(%o3)     |  method = Exact t-test. Unknown variance.
          |
          | hypotheses = H0: mean = 50 , H1: mean < 50
          |
          |       statistic = .8244705235071678
          |
          |       distribution = [student_t, 9]
          |
          |        p_value = .7845100411786889
@end example

Nesta ocasi@~ao Maxima executa um testte assint@'otico, baseado no @i{Teorema do Limite Central}.
A hip@'otese do nulo @'e @math{H_0: equal(mean, 50)} contra a alternativa de duas vias @math{H_1: not equal(mean, 50)};
conforme os resultados, o valor de @math{p} @'e muito pequeno, @math{H_0} pode ser rejeitado em
favor da alternativa @math{H_1}. Note que, como indicado pela componente @code{Method},
esse procedimento pode ser aplicado a grandes amostras.

@c ===beg===
@c load (stats)$
@c test_mean([36,118,52,87,35,256,56,178,57,57,89,34,25,98,35,
@c         98,41,45,198,54,79,63,35,45,44,75,42,75,45,45,
@c         45,51,123,54,151],
@c         'asymptotic=true,'mean=50);
@c ===end===
@example
(%i1) load("stats")$
(%i2) test_mean([36,118,52,87,35,256,56,178,57,57,89,34,25,98,35,
              98,41,45,198,54,79,63,35,45,44,75,42,75,45,45,
              45,51,123,54,151],
              'asymptotic=true,'mean=50);
          |                       MEAN TEST
          |
          |           mean_estimate = 74.88571428571429
          |
          |                   conf_level = 0.95
          |
          | conf_interval = [57.72848600856194, 92.04294256286663]
          |
(%o2)     |    method = Large sample z-test. Unknown variance.
          |
          |       hypotheses = H0: mean = 50 , H1: mean # 50
          |
          |             statistic = 2.842831192874313
          |
          |             distribution = [normal, 0, 1]
          |
          |             p_value = .004471474652002261
@end example

@end deffn







@deffn {Fun@value{cedilha}@~ao} test_means_difference (@var{x1}, @var{x2})
@deffnx {Fun@value{cedilha}@~ao} test_means_difference (@var{x1}, @var{x2}, @var{op@value{cedilha}@~ao_1}, @var{op@value{cedilha}@~ao_2}, ...)

Esse @'e o teste-@var{t} de diferen@value{cedilha}a de m@'edias entre duas amostras.
Os argumentos @var{x1} e @var{x2} s@~ao listas ou matrizes colunas
contendo duas amostras independentes. No caso de diferentes vari@^ancias desconhecidas
(veja op@value{cedilha}@~oes @code{'dev1}, @code{'dev2} e @code{'varequal} abaixo),
os graus de liberdade s@~ao calculados por meio da aproxima@value{cedilha}@~ao de Welch.
@code{test_means_difference} tamb@'em executa um teste assint@'otico
baseado no @i{Teorema do Limite Central} se a op@value{cedilha}@~ao @code{'asymptotic} for
escolhida para @code{true}.

Op@value{cedilha}@~oes:

@itemize @bullet

@item

@item
@code{'alternative}, o valor padr@~ao @'e @code{'twosided}, @'e a hip@'otese alternativa;
valores v@'alidos s@~ao: @code{'twosided}, @code{'greater} e @code{'less}.

@item
@code{'dev1}, o valor padr@~ao @'e @code{'unknown}, @'e o valor do desvio padr@~ao
da amostra @var{x1} quando esse desvio for conhecido; valores v@'alidos s@~ao: @code{'unknown} ou uma express@~ao positiva.

@item
@code{'dev2}, o valor padr@~ao @'e @code{'unknown}, @'e o valor do desvio padr@~ao
da amostra @var{x2} quando esse desvio for conhecido; valores v@'alidos s@~ao: @code{'unknown} ou uma express@~ao positiva.

@item
@code{'varequal}, o valor padr@~ao @'e @code{false}, se vari@^ancias podem serem consideradas como iguais ou n@~ao;
essa op@value{cedilha}@~ao tem efeito somente quando @code{'dev1} e/ou @code{'dev2} forem  @code{'unknown}.

@item
@code{'conflevel}, o valor padr@~ao @'e @code{95/100}, n@'{@dotless{i}}vel de confid@^encia para o intervalo de confid@^encia; deve
ser uma express@~ao que toma valores em (0,1). 

Nota de Tradu@value{cedilha}@~ao: (0,1) representa intervalo aberto.

@item
@code{'asymptotic}, o valor padr@~ao @'e @code{false}, indica se @code{test_means_difference} executa um teste-@var{t} exato ou
um teste ass@'{@dotless{i}}nt@'otico baseando-se no @i{Teorema do Limite Central};
valores v@'alidos s@~ao @code{true} e @code{false}.

@end itemize

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{test_means_difference} @'e um objecto @code{inference_result} do Maxima
mostrando os seguintes resultados:

@enumerate

@item
@code{'diff_estimate}: a diferen@value{cedilha}a de m@'edias estimadas.

@item
@code{'conf_level}: n@'{@dotless{i}}vel de confid@^encia seleccionado pelo utilizador.

@item
@code{'conf_interval}: intervalo de confid@^encia para a diferen@value{cedilha}a de m@'edias.

@item
@code{'method}: procedimento de infer@^encia.

@item
@code{'hypotheses}: a hip@'otese do nulo e a hip@'otese alternativa a serem testadas.

@item
@code{'statistic}: valor da amostra estat@'{@dotless{i}}stica usado para testar a hip@'otese do nulo.

@item
@code{'distribution}: distribui@value{cedilha}@~ao da amostra estat@'{@dotless{i}}stica, juntamente com seu(s) par@^ametro(s).

@item
@code{'p_value}: valor de @math{p} do teste.

@end enumerate

Exemplos:

A igualdade de m@'edias @'e testada com duas pequenas amostras @var{x} e @var{y},
contra a alternativa @math{H_1: m_1>m_2}, sendo @math{m_1} e @math{m_2}
as m@'edias das popula@value{cedilha}@~oes; vari@^ancias s@~ao desconhecidas e supostamente admitidas para serem diferentes.

@c equivalent code for R:
@c x <- c(20.4,62.5,61.3,44.2,11.1,23.7)
@c y <- c(1.2,6.9,38.7,20.4,17.2)
@c t.test(x,y,alternative="greater")

@c ===beg===
@c load (stats)$
@c x: [20.4,62.5,61.3,44.2,11.1,23.7]$
@c y: [1.2,6.9,38.7,20.4,17.2]$
@c test_means_difference(x,y,'alternative='greater);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
(%i3) y: [1.2,6.9,38.7,20.4,17.2]$
(%i4) test_means_difference(x,y,'alternative='greater);
            |              DIFFERENCE OF MEANS TEST
            |
            |         diff_estimate = 20.31999999999999
            |
            |                 conf_level = 0.95
            |
            |    conf_interval = [- .04597417812882298, inf]
            |
(%o4)       |        method = Exact t-test. Welch approx.
            |
            | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
            |
            |           statistic = 1.838004300728477
            |
            |    distribution = [student_t, 8.62758740184604]
            |
            |            p_value = .05032746527991905
@end example

O mesmo teste que antes, mas agora as vari@^ancias s@~ao admitidas serem supostamente
iguais.

@c equivalent code for R:
@c x <- c(20.4,62.5,61.3,44.2,11.1,23.7)
@c y <- c(1.2,6.9,38.7,20.4,17.2)
@c t.test(x,y,var.equal=T,alternative="greater")

@c ===beg===
@c load (stats)$
@c x: [20.4,62.5,61.3,44.2,11.1,23.7]$
@c y: [1.2,6.9,38.7,20.4,17.2]$
@c test_means_difference(x,y,'alternative='greater,'varequal=true);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
(%i3) y: matrix([1.2],[6.9],[38.7],[20.4],[17.2])$
(%i4) test_means_difference(x,y,'alternative='greater,'varequal=true);
            |              DIFFERENCE OF MEANS TEST
            |
            |         diff_estimate = 20.31999999999999
            |
            |                 conf_level = 0.95
            |
            |     conf_interval = [- .7722627696897568, inf]
            |
(%o4)       |   method = Exact t-test. Unknown equal variances
            |
            | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
            |
            |           statistic = 1.765996124515009
            |
            |           distribution = [student_t, 9]
            |
            |            p_value = .05560320992529344
@end example

@end deffn







@deffn {Fun@value{cedilha}@~ao} test_variance (@var{x})
@deffnx {Fun@value{cedilha}@~ao} test_variance (@var{x}, @var{op@value{cedilha}@~ao_1}, @var{op@value{cedilha}@~ao_2}, ...)

Esse @'e o teste da vari@^ancia @var{chi^2}. O argumento @var{x} @'e uma lista ou uma matriz coluna
contendo uma amostra unidimensional tomada entre a popula@value{cedilha}@~ao normal.

Op@value{cedilha}@~oes:

@itemize @bullet

@item
@code{'mean}, o valor padr@~ao @'e @code{'unknown}, @'e a m@'edia da popula@value{cedilha}@~ao, quando for conhecida.

@item
@code{'alternative}, o valor padr@~ao @'e @code{'twosided}, @'e a hip@'otese alternativa;
valores v@'alidos s@~ao: @code{'twosided}, @code{'greater} e @code{'less}.

@item
@code{'variance}, o valor padr@~ao @'e @code{1}, isso @'e o valor (positivo) da vari@^ancia a ser testado.

@item
@code{'conflevel}, o valor padr@~ao @'e @code{95/100}, n@'{@dotless{i}}vel de confid@^encia para o intervalo de confid@^encia; deve
ser uma express@~ao que toma valores em (0,1).

@end itemize

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{test_variance} est@'a no objecto @code{inference_result} do Maxima
mostrando os seguintes resultados:

@enumerate

@item
@code{'var_estimate}: a vari@^ancia da amostra.

@item
@code{'conf_level}: n@'{@dotless{i}}vel de confid@^encia seleccionado pelo utilizador.

@item
@code{'conf_interval}: intervalo de confid@^encia para a vari@^ancia da popula@value{cedilha}@~ao.

@item
@code{'method}: procedimento de infer@^encia.

@item
@code{'hypotheses}: a hip@'otese do nulo e a hip@'otese alternativa a serem testadas.

@item
@code{'statistic}: valor da amostra estat@'{@dotless{i}}stica usado para testar a hip@'otese do nulo.

@item
@code{'distribution}: distribui@value{cedilha}@~ao da amostra estat@'{@dotless{i}}stica, juntamente com seu par@^ametro.

@item
@code{'p_value}: o valor de @math{p} do teste.

@end enumerate

Exemplos:

Isso @'e testado se a vari@^ancia de uma popula@value{cedilha}@~ao com m@'edia desconhhecida
for igual ou maior que 200.

@c ===beg===
@c load (stats)$
@c x: [203,229,215,220,223,233,208,228,20]$
@c test_variance(x,'alternative='greater,'variance=200);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x: [203,229,215,220,223,233,208,228,209]$
(%i3) test_variance(x,'alternative='greater,'variance=200);
             |                  VARIANCE TEST
             |
             |              var_estimate = 110.75
             |
             |                conf_level = 0.95
             |
             |     conf_interval = [57.13433376937479, inf]
             |
(%o3)        | method = Variance Chi-square test. Unknown mean.
             |
             |    hypotheses = H0: var = 200 , H1: var > 200
             |
             |                 statistic = 4.43
             |
             |             distribution = [chi2, 8]
             |
             |           p_value = .8163948512777689
@end example

@end deffn







@deffn {Fun@value{cedilha}@~ao} test_variance_ratio (@var{x1}, @var{x2})
@deffnx {Fun@value{cedilha}@~ao} test_variance_ratio (@var{x1}, @var{x2}, @var{op@value{cedilha}@~ao_1}, @var{op@value{cedilha}@~ao_2}, ...)

Isso @'e o teste @var{F} da raz@~ao de vari@^ancia para duas popula@value{cedilha}@~oes normais.
Os argumentos @var{x1} e @var{x2} s@~ao listas ou matrizes colunas
contendo duas amostras independentes.

Op@value{cedilha}@~oes:

@itemize @bullet

@item
@code{'alternative}, o valor padr@~ao @'e @code{'twosided}, @'e a hip@'otese alternativa;
valores v@'alidos s@~ao: @code{'twosided}, @code{'greater} e @code{'less}.

@item
@code{'mean1}, o valor padr@~ao @'e @code{'unknown}, quando for conhecida, isso @'e a m@'edia da
popula@value{cedilha}@~ao da qual @var{x1} foi tomada.

@item
@code{'mean2}, o valor padr@~ao @'e @code{'unknown}, quando for conhecida, isso @'e a m@'edia da
popula@value{cedilha}@~ao da qual @var{x2} foi tomada.

@item
@code{'conflevel}, o valor padr@~ao @'e @code{95/100}, n@'{@dotless{i}}vel de confid@^encia para o intervalo de confid@^encia da
raz@~ao; deve ser uma express@~ao que tome valores em (0,1).

@end itemize

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{test_variance_ratio} @'e um objecto @code{inference_result} do Maxima
mostrando os seguintes resultados:

@enumerate

@item
@code{'ratio_estimate}: a raz@~ao de vari@^ancia da amostra.

@item
@code{'conf_level}: n@'{@dotless{i}}vel de confid@^encia seleccionado pelo utilizador.

@item
@code{'conf_interval}: intervalo de confid@^encia para a raz@~ao de vari@^ancia.

@item
@code{'method}: procedimento de infer@^encia.

@item
@code{'hypotheses}: a hip@'otese do nulo e a hip@'otese alternativa a serem testadas.

@item
@code{'statistic}: valor da amostra estat@'{@dotless{i}}stica usado para testar a hip@'otese do nulo.

@item
@code{'distribution}: distribui@value{cedilha}@~ao da amostra estat@'{@dotless{i}}stica, juntamente com seus par@^ametros.

@item
@code{'p_value}: o valor de @math{p} do teste.

@end enumerate


Exemplos:

a igualdade das vari@^ancias de duas popula@value{cedilha}@~oes normais @'e verificado
contra a alternativa que a primeira @'e maior que a segunda.

@c equivalent code for R:
@c x <- c(20.4,62.5,61.3,44.2,11.1,23.7)
@c y <- c(1.2,6.9,38.7,20.4,17.2)
@c var.test(x,y,alternative="greater")

@c ===beg===
@c load (stats)$
@c x: [20.4,62.5,61.3,44.2,11.1,23.7]$
@c y: [1.2,6.9,38.7,20.4,17.2]$
@c test_variance_ratio(x,y,'alternative='greater);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
(%i3) y: [1.2,6.9,38.7,20.4,17.2]$
(%i4) test_variance_ratio(x,y,'alternative='greater);
              |              VARIANCE RATIO TEST
              |
              |       ratio_estimate = 2.316933391522034
              |
              |               conf_level = 0.95
              |
              |    conf_interval = [.3703504689507268, inf]
              |
(%o4)         | method = Variance ratio F-test. Unknown means.
              |
              | hypotheses = H0: var1 = var2 , H1: var1 > var2
              |
              |         statistic = 2.316933391522034
              |
              |            distribution = [f, 5, 4]
              |
              |          p_value = .2179269692254457
@end example

@end deffn






@deffn {Fun@value{cedilha}@~ao} test_sign (@var{x})
@deffnx {Fun@value{cedilha}@~ao} test_sign (@var{x}, @var{op@value{cedilha}@~ao_1}, @var{op@value{cedilha}@~ao_2}, ...)

Esse @'e o teste de sinal n@~ao param@'etrico para a mediana de uma popula@value{cedilha}@~ao cont@'{@dotless{i}}nua.
O argumento @var{x} @'e uma lista ou uma matriz coluna contendo uma amostra unidimensional.

Op@value{cedilha}@~oes:

@itemize @bullet

@item
@code{'alternative}, o valor padr@~ao @'e @code{'twosided}, @'e a hip@'otese alternativa;
valores v@'alidos s@~ao: @code{'twosided}, @code{'greater} e @code{'less}.

@item
@code{'median}, o valor padr@~ao @'e @code{0}, @'e o valor da mediana a ser verificado.

@end itemize

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{test_sign} @'e um objecto @code{inference_result} do Maxima
mostrando os seguintes resultados:

@enumerate

@item
@code{'med_estimate}: a mediana da amostra.

@item
@code{'method}: procedimento de infer@^encia.

@item
@code{'hypotheses}: a hip@'otese do nulo e a hip@'otese alternativa a serem testadas.

@item
@code{'statistic}: valor da amostra estat@'{@dotless{i}}stica usada para testar a hip@'otese do nulo.

@item
@code{'distribution}: distribui@value{cedilha}@~ao da amostra estat@'{@dotless{i}}stica, juntamente com seu(s) par@^ametro(s).

@item
@code{'p_value}: o valor de @math{p} do teste.

@end enumerate

Exemplos:

Verifica se a popula@value{cedilha}@~ao da qual a amostra foi tomada tem mediana 6, 
contra a alternativa @math{H_1: median > 6}.

@c ===beg===
@c load (stats)$
@c x: [2,0.1,7,1.8,4,2.3,5.6,7.4,5.1,6.1,6]$
@c test_sign(x,'median=6,'alternative='greater);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x: [2,0.1,7,1.8,4,2.3,5.6,7.4,5.1,6.1,6]$
(%i3) test_sign(x,'median=6,'alternative='greater);
               |                  SIGN TEST
               |
               |              med_estimate = 5.1
               |
               |      method = Non parametric sign test.
               |
(%o3)          | hypotheses = H0: median = 6 , H1: median > 6
               |
               |                statistic = 7
               |
               |      distribution = [binomial, 10, 0.5]
               |
               |         p_value = .05468749999999989
@end example

@end deffn









@deffn {Fun@value{cedilha}@~ao} test_signed_rank (@var{x})
@deffnx {Fun@value{cedilha}@~ao} test_signed_rank (@var{x}, @var{op@value{cedilha}@~ao_1}, @var{op@value{cedilha}@~ao_2}, ...)

Esse @'e o teste de ranque sinalizado de Wilcoxon para fazer infer@^encias sobre a mediana de uma
popula@value{cedilha}@~ao cont@'{@dotless{i}}nua. O argumento @var{x} @'e uma lista ou uma matriz coluna
contendo uma amostra unidimensional. Executa uma aproxima@value{cedilha}@~ao normal se o
tamanho da amostra for maior que 20, ou se existirem zeros ou houverem empates.

Veja tamb@'em @code{pdf_rank_test} e @code{cdf_rank_test}.

Op@value{cedilha}@~oes:

@itemize @bullet

@item
@code{'median}, o valor padr@~ao @'e @code{0}, @'e o valor da mediana a ser verificado.

@item
@code{'alternative}, o valor padr@~ao @'e @code{'twosided}, @'e a hip@'otese alternativa;
valores v@'alidos s@~ao: @code{'twosided}, @code{'greater} e @code{'less}.

@end itemize

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{test_signed_rank} @'e um objecto @code{inference_result} do Maxima
com os seguintes resultados:

@enumerate

@item
@code{'med_estimate}: a mediana da amostra.

@item
@code{'method}: procedimento de infer@^encia.

@item
@code{'hypotheses}: a hip@'otese do nulo e a hip@'otese alternativa a serem testadas.

@item
@code{'statistic}: valor da amostra estat@'{@dotless{i}}stica usado para testar a hip@'otese do nulo.

@item
@code{'distribution}: distribui@value{cedilha}@~ao da amostra estat@'{@dotless{i}}stica, juntamente com seu(s) par@^ametro(s).

@item
@code{'p_value}: o valor de @math{p} do teste.

@end enumerate

Exemplos:

Verifica a hip@'otese do nulo @math{H_0: median = 15} contra a 
alternativa @math{H_1: median > 15}. Esse @'e um teste exato, ua vez que
n@~ao exite empates.

@c equivalent code for R:
@c x <- c(17.1,15.9,13.7,13.4,15.5,17.6)
@c wilcox.test(x,mu=15,alternative="greater")

@c ===beg===
@c load (stats)$
@c x: [17.1,15.9,13.7,13.4,15.5,17.6]$
@c test_signed_rank(x,median=15,alternative=greater);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x: [17.1,15.9,13.7,13.4,15.5,17.6]$
(%i3) test_signed_rank(x,median=15,alternative=greater);
                 |             SIGNED RANK TEST
                 |
                 |           med_estimate = 15.7
                 |
                 |           method = Exact test
                 |
(%o3)            | hypotheses = H0: med = 15 , H1: med > 15
                 |
                 |              statistic = 14
                 |
                 |     distribution = [signed_rank, 6]
                 |
                 |            p_value = 0.28125
@end example

Verifica a hip@'otese do nulo @math{H_0: equal(median, 2.5)} contra a
alternativa @math{H_1: not equal(median, 2.5)}. Esse @'e um teste aproximado,
uma vez que ocorrem empates.

@c equivalent code for R:
@c y<-c(1.9,2.3,2.6,1.9,1.6,3.3,4.2,4,2.4,2.9,1.5,3,2.9,4.2,3.1)
@c wilcox.test(y,mu=2.5)

@c ===beg===
@c load (stats)$
@c y:[1.9,2.3,2.6,1.9,1.6,3.3,4.2,4,2.4,2.9,1.5,3,2.9,4.2,3.1]$
@c test_signed_rank(y,median=2.5);
@c ===end===
@example
(%i1) load("stats")$
(%i2) y:[1.9,2.3,2.6,1.9,1.6,3.3,4.2,4,2.4,2.9,1.5,3,2.9,4.2,3.1]$
(%i3) test_signed_rank(y,median=2.5);
             |                 SIGNED RANK TEST
             |
             |                med_estimate = 2.9
             |
             |          method = Asymptotic test. Ties
             |
(%o3)        |    hypotheses = H0: med = 2.5 , H1: med # 2.5
             |
             |                 statistic = 76.5
             |
             | distribution = [normal, 60.5, 17.58195097251724]
             |
             |           p_value = .3628097734643669
@end example

@end deffn







@deffn {Fun@value{cedilha}@~ao} test_rank_sum (@var{x1}, @var{x2})
@deffnx {Fun@value{cedilha}@~ao} test_rank_sum (@var{x1}, @var{x2}, @var{op@value{cedilha}@~ao_1})

Esse @'e o teste de Wilcoxon-Mann-Whitney para compara@value{cedilha}@~ao das medianas de duas
popula@value{cedilha}@~oes cont@'{@dotless{i}}nuas. Os primeiros dois argumentos @var{x1} e @var{x2} s@~ao listas
ou matrizes colunas com os dados de duas amostras independentes. Executa aproxima@value{cedilha}@~ao
normal se quaisquer dos tamanhos de amostra for maior que 10, ou se houverem empates.

Op@value{cedilha}@~ao:

@itemize @bullet

@item
@code{'alternative}, o valor padr@~ao @'e @code{'twosided}, @'e a hip@'otese alternativa;
valores v@'alidos s@~ao: @code{'twosided}, @code{'greater} e @code{'less}.

@end itemize

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{test_rank_sum} @'e um objecto @code{inference_result} do Maxima
com os seguintes resultados:

@enumerate

@item
@code{'method}: procedimento de infer@^encia.

@item
@code{'hypotheses}: a hip@'otese do nulo e a hip@'otese alternativa a serem testadas.

@item
@code{'statistic}: valor da amostra estat@'{@dotless{i}}stica usada para testar a hip@'otese do nulo.

@item
@code{'distribution}: distribui@value{cedilha}@~ao da amostra estat@'{@dotless{i}}stica, juntamente com seus par@^ametros.

@item
@code{'p_value}: o valor de @math{p} do teste.

@end enumerate

Exemplos:

Verifica se popula@value{cedilha}@~oes possuem medianas similares. Tamanhos de amotra
s@~ao pequenos e @'e feito um teste exato.

@c equivalent code for R:
@c x <- c(12,15,17,38,42,10,23,35,28)
@c y <- c(21,18,25,14,52,65,40,43)
@c wilcox.test(x,y)

@c ===beg===
@c load (stats)$
@c x:[12,15,17,38,42,10,23,35,28]$
@c y:[21,18,25,14,52,65,40,43]$
@c test_rank_sum(x,y);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x:[12,15,17,38,42,10,23,35,28]$
(%i3) y:[21,18,25,14,52,65,40,43]$
(%i4) test_rank_sum(x,y);
              |                 RANK SUM TEST
              |
              |              method = Exact test
              |
              | hypotheses = H0: med1 = med2 , H1: med1 # med2
(%o4)         |
              |                 statistic = 22
              |
              |        distribution = [rank_sum, 9, 8]
              |
              |          p_value = .1995886466474702
@end example

Agora, com grandes amostras e empates, o procedimento faz 
aproxima@value{cedilha}@~ao norma. A hip@'otese alternativa @'e
@math{H_1: median1 < median2}.

@c equivalent code for R:
@c x <- c(39,42,35,13,10,23,15,20,17,27)
@c y <- c(20,52,66,19,41,32,44,25,14,39,43,35,19,56,27,15)
@c wilcox.test(x,y,alternative="less")

@c ===beg===
@c load (stats)$
@c x: [39,42,35,13,10,23,15,20,17,27]$
@c y: [20,52,66,19,41,32,44,25,14,39,43,35,19,56,27,15]$
@c test_rank_sum(x,y,'alternative='less);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x: [39,42,35,13,10,23,15,20,17,27]$
(%i3) y: [20,52,66,19,41,32,44,25,14,39,43,35,19,56,27,15]$
(%i4) test_rank_sum(x,y,'alternative='less);
             |                  RANK SUM TEST
             |
             |          method = Asymptotic test. Ties
             |
             |  hypotheses = H0: med1 = med2 , H1: med1 < med2
(%o4)        |
             |                 statistic = 48.5
             |
             | distribution = [normal, 79.5, 18.95419580097078]
             |
             |           p_value = .05096985666598441
@end example

@end deffn







@deffn {Fun@value{cedilha}@~ao} test_normality (@var{x})

Teste de Shapiro-Wilk para normalidade. O argumento @var{x} @'e uma lista de n@'umeros, e o tamanho
da amostra deve ser maior que 2 e menor ou igua a 5000, de outra forma, a fun@value{cedilha}@~ao
@code{test_normality} sinaliza com um erro.

Refer@^encia:

  [1] Algorithm AS R94, Applied Statistics (1995), vol.44, no.4, 547-551

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{test_normality} @'e um objecto @code{inference_result} do Maxima
com os seguintes resultados:

@enumerate

@item
@code{'statistic}: valor do @var{W} estat@'{@dotless{i}}stico.

@item
@code{'p_value}: valor de @math{p} sob a hip@'otese de normalidade.

@end enumerate

Exemplos:

Verifica a normalidade de uma popula@value{cedilha}@~ao, baseada em uma amostra de tamanho 9.

@c equivalent code for R:
@c x <- c(12,15,17,38,42,10,23,35,28)
@c shapiro.test(x)

@c ===beg===
@c load (stats)$
@c x:[12,15,17,38,42,10,23,35,28]$
@c test_normality(x);
@c ===end===
@example
(%i1) load("stats")$
(%i2) x:[12,15,17,38,42,10,23,35,28]$
(%i3) test_normality(x);
                       |      SHAPIRO - WILK TEST
                       |
(%o3)                  | statistic = .9251055695162436
                       |
                       |  p_value = .4361763918860381
@end example

@end deffn









@deffn {Fun@value{cedilha}@~ao} simple_linear_regression (@var{x})
@deffnx {Fun@value{cedilha}@~ao} simple_linear_regression (@var{x} @var{op@value{cedilha}@~ao_1})

Regress@~ao linear simples, @math{y_i=a+b x_i+e_i}, onde os @math{e_i} s@~ao @math{N(0,sigma)}
vari@'aveis aleat@'orias independentes. O argumento @var{x} deve ser uma matriz de duas colunas ou uma lista de
pares.

Op@value{cedilha}@~oes:

@itemize @bullet

@item
@code{'conflevel}, o valor padr@~ao @'e @code{95/100}, n@'{@dotless{i}}vel de confid@^encia para o intervalo de confid@^encia; isso deve
ser uma express@~ao que tome valores em (0,1).

@item
@code{'regressor}, o valor padr@~ao @'e @code{'x}, nome da vari@'avel independente.

@end itemize

A sa@'{@dotless{i}}da da fun@value{cedilha}@~ao @code{simple_linear_regression} @'e um objecto @code{inference_result} do Maxima
com os seguintes resultados:

@enumerate

@item
@code{'model}: a equa@value{cedilha}@~ao ajustada. @'Util para fazer novas previs@~oes. Veja exemplos abaixo.

@item
@code{'means}: m@'edia de duas vari@'aveis pseudo-aleat@'orias.

@item
@code{'variances}: vari@^ancias de ambas as vari@'aveis.

@item
@code{'correlation}: coeficiente de correla@value{cedilha}@~ao.

@item
@code{'adc}: coeficiente de determina@value{cedilha}@~ao ajustado.

@item
@code{'a_estimation}: estimador do par@^ametro @var{a}.

@item
@code{'a_conf_int}: intervalo de confid@^encia do par@^ametro @var{a}.

@item
@code{'b_estimation}: estimador do par@^ametro @var{b}.

@item
@code{'b_conf_int}: intervalo de confid@^encia do par@^ametro @var{b}.

@item
@code{'hypotheses}: a hip@'otese do nulo e a hip@'otese alternativa sobre o par@^ametro @var{b}.

@item
@code{'statistic}: valor da amostra estat@'{@dotless{i}}stica usado para testar a hip@'otese do nulo.

@item
@code{'distribution}: distribui@value{cedilha}@~ao da amostra estat@'{@dotless{i}}stica, juntamente com seu par@^ametro.

@item
@code{'p_value}: o valor de @math{p} do teste sobre @var{b}.

@item
@code{'v_estimation}: estimador de vari@^ancia imparcial, ou vari@^ancia residual.

@item
@code{'v_conf_int}: intervalo de confid@^encia da vari@^ancia.

@item
@code{'cond_mean_conf_int}: intervalo de confid@^encia paa a m@'edia condicionada. Veja exemplos abaixo.

@item
@code{'new_pred_conf_int}: intervalo de confid@^encia para uma nova previs@~ao. Veja exemplos abaixo.

@item
@code{'residuals}: lista de pares (previs@~ao, res@'{@dotless{i}}duo), ordenados em rela@value{cedilha}@~ao @`as previs@~oes.
@'Util para achar o melhor da an@'alise de ajuste. Veja exemplos abaixo.

@end enumerate

Somente os itens 1, 4, 14, 9, 10, 11, 12, e 13 acima, nessa ordem, s@~ao mostrados por padr@~ao. Os restantes
escondem-se at@'e que o utilizador fa@value{cedilha}a uso de fun@value{cedilha}@~oes @code{items_inference} e @code{take_inference}.

Exemplo:

Ajustando um modelo linear para uma amostras de duas vari@'aveis. A entrada @code{%i4} monta p gr@'afico
da amostra junto com a linha de regress@~ao; a entrada @code{%i5}
calcula @code{y} dado @code{x=113}; a m@'edia e o 
intervalo de confid@^encia para uma nova previs@~ao quando @code{x=113} s@~ao tamb@'em calculados.

@c ===beg===
@c load (stats)$
@c s:[[125,140.7],[130,155.1],[135,160.3],[140,167.2],[145,169.8]]$
@c z:simple_linear_regression(s,conflevel=0.99);
@c plot2d([[discrete, s], take_inference(model,z)],
@c           [x,120,150],
@c           [gnuplot_curve_styles, ["with points","with lines"]] )$
@c take_inference(model,z), x=133;
@c take_inference(means,z);
@c take_inference(new_pred_conf_int,z), x=133;
@c ===end===
@example
(%i1) load("stats")$
(%i2) s:[[125,140.7],[130,155.1],[135,160.3],[140,167.2],[145,169.8]]$
(%i3) z:simple_linear_regression(s,conflevel=0.99);
           |               SIMPLE LINEAR REGRESSION
           |
           |   model = 1.405999999999985 x - 31.18999999999804
           |
           |           correlation = .9611685255255155
           |
           |           v_estimation = 13.57966666666665
           |
(%o3)      | b_conf_int = [.04469633662525263, 2.767303663374718]
           |
           |          hypotheses = H0: b = 0 ,H1: b # 0
           |
           |            statistic = 6.032686683658114
           |
           |            distribution = [student_t, 3]
           |
           |             p_value = 0.0038059549413203
(%i4) plot2d([[discrete, s], take_inference(model,z)],
              [x,120,150],
              [gnuplot_curve_styles, ["with points","with lines"]] )$
(%i5) take_inference(model,z), x=133;
(%o5)                         155.808
(%i6) take_inference(means,z);
(%o6)                     [135.0, 158.62]
(%i7) take_inference(new_pred_conf_int,z), x=133;
(%o7)              [132.0728595995113, 179.5431404004887]
@end example

@end deffn
































@node Defini@value{cedilha}@~oes para distribui@value{cedilha}@~oes especiais, , Defini@value{cedilha}@~oes para stats, Top
@section Defini@value{cedilha}@~oes para distribui@value{cedilha}@~oes especiais


@deffn {Fun@value{cedilha}@~ao} pdf_signed_rank (@var{x}, @var{n})
Fun@value{cedilha}@~ao densidade de probabilidade da distribui@value{cedilha}@~ao exacta da
estat@'{@dotless{i}}stica do rank sinalizado. O argumento @var{x} @'e um n@'umero
real e @var{n} um inteiro positivo.

Veja tamb@'em @code{test_signed_rank}.
@end deffn

@deffn {Fun@value{cedilha}@~ao} cdf_signed_rank (@var{x}, @var{n})
Fun@value{cedilha}@~ao de densidade cumulativa da distribui@value{cedilha}@~ao exacta da
estat@'{@dotless{i}}stica do rank sinalizado. O argumento @var{x} @'e um n@'umero
real e @var{n} um inteiro positivo. 

Veja tamb@'em @code{test_signed_rank}.
@end deffn

@deffn {Fun@value{cedilha}@~ao} pdf_rank_sum (@var{x}, @var{n}, @var{m})
Fun@value{cedilha}@~ao densidade de probabilidade da distribui@value{cedilha}@~ao exacta da
estat@'{@dotless{i}}stica do somat@'orio do rank. O argumento @var{x} @'e um n@'umero
real e @var{n} e @var{m} s@~ao ambos inteiros positivos. 

Veja tamb@'em @code{test_rank_sum}.
@end deffn

@deffn {Fun@value{cedilha}@~ao} cdf_rank_sum (@var{x}, @var{n}, @var{m})
Fun@value{cedilha}@~ao de densidade cumulativa da distribui@value{cedilha}@~ao exacta da
estat@'{@dotless{i}}stica do somat@'orio do rank. O argumento @var{x} @'e um n@'umero
real e @var{n} e @var{m} s@~ao ambos inteiro positivos. 

Veja tamb@'em @code{test_rank_sum}.
@end deffn

