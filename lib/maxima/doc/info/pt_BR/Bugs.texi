@c Language: Brazilian Portuguese, Encoding: iso-8859-1
@c /Bugs.texi/1.10/Sat Nov 25 04:02:06 2006//
@menu
* Defini@value{cedilha}@~{o}es para Detec@value{cedilha}@~{a}o e Relato de Erros::  
@end menu

@node Defini@value{cedilha}@~{o}es para Detec@value{cedilha}@~{a}o e Relato de Erros
@section Defini@value{cedilha}@~{o}es para Detec@value{cedilha}@~{a}o e Relato de Erros
@deffn {Fun@value{cedilha}@~{a}o} run_testsuite ()
@deffnx {Fun@value{cedilha}@~{a}o} run_testsuite (@var{boolean})
@deffnx {Fun@value{cedilha}@~{a}o} run_testsuite (@var{boolean}, @var{boolean})
@deffnx {Fun@value{cedilha}@~{a}o} run_testsuite (@var{boolean}, @var{boolean}, @var{list})
Executa o conjunto de testes do Maxima.  Testes que produzem a resposta desejada s@~{a}o
considerados ``passes,'' e testes que n@~{a}o produzem a resposta
desejada, s@~{a}o marcados como erros conhecidos.

@code{run_testsuite ()} mostra somente testes que n@~{a}o s@~{a}o aprovados.

@code{run_testsuite (true)} mostra somente testes que s@~{a}o marcados como erros conhecidos, bem
como as falhas.

@code{run_testsuite (true, true)} mostra todos os testes.

Se o terceiro argumento opcional for dado, um subconjunto de testes @'{e} executado.
O subconjunto de testes para executar @'{e} dado como uma lista de nomes dos
testes.  O conjunto completo de testes @'{e} especificado por @code{testsuite_files}.

@code{run_testsuite} altera a vari@'{a}vel de ambiente Maxima.
Tipicamente um script de teste executa @code{kill} para estabelecer uma vari@'{a}vel de ambiente
(uma a saber sem fun@value{cedilha}@~{o}es definidas pelo usu@'{a}rio e vari@'{a}veis)
e ent@~{a}o define fun@value{cedilha}@~{o}es e vari@'{a}veis apropriadamente para o teste.

@code{run_testsuite} retorna @code{done}.
@end deffn

@defvr {Vari@'{a}vel de op@value{cedilha}@~{a}o} testsuite_files
     
@code{testsuite_files} @'{e} o conjunto de testes a ser executado por
@code{run_testsuite}.  Isso @'{e} uma lista de nomes de arquivos contendo
os testes a executar.  Se alguns dos testes em um arquivo falha de forma conhecida,
ent@~{a}o em lugar de listar o nome do arquivo, uma lista contendo o
nome do arquivo e o n@'{u}mero dos testes que falharam @'{e} usada.

por exemplo, a linha adinate @'{e} uma parte do conjunto de testes padr@~{a}o:

@example
 ["rtest13s", ["rtest14", 57, 63]]
@end example

Essa linha especifica a suite de testes que consiste dos arquivos "rtest13s" e
"rtest14", mas "rtest14" cont@'{e}m dois testes que falham de forma conhecida: 57
e 63.
@end defvr

@deffn {Fun@value{cedilha}@~{a}o} bug_report ()
Imprime os n@'{u}meros de vers@~{a}o do Maxima e do Lisp, e chama o link
para a p@'{a}gina web de informa@value{cedilha}@~{a}o de erros do projeto Maxima.
A informa@value{cedilha}@~{a}o da vers@~{a}o @'{e} a mesma reportada por @code{build_info}.

Quando um erro @'{e} informado, @'{e} muito @'{u}til copiar a vers@~{a}o do Maxima
e do Lisp dentro da informa@value{cedilha}@~{a}o do erro.

@code{bug_report} retorna uma seq@"{u}@^{e}ncia de caracteres vazia @code{""}.
@end deffn

@deffn {Fun@value{cedilha}@~{a}o} build_info ()
Imprime um sum@'{a}rio de par@^{a}metros da compila@value{cedilha}@~{a}o do Maxima.

@code{build_info} retorna uma seq@"{u}@^{e}ncia de caracteres vazia @code{""}.
@end deffn
