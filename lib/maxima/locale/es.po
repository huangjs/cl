# Maxima translation
# Copyright (C) 2009 Ismael Garrido
# This file is distributed under the same license as the Maxima package.
# Ismael Garrido <ismaelgfk@gmail.com>, 2009.

msgid ""
msgstr ""
"Project-Id-Version: Maxima 5.17.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2009-02-19 17:50-0200\n"
"PO-Revision-Date: 2009-02-19 19:42-0300\n"
"Last-Translator: Ismael Garrido <ismaelgfk@gmail.com>\n"
"Language-Team:  <ismaelgfk@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Poedit-Language: Spanish\n"
"X-Poedit-Country: URUGUAY\n"

#. NOTE TO TRANSLATORS: MEANING OF NEXT MESSAGE IS OBSCURE
#: ../src/algfac.lisp:206
msgid "CPBG0: wrong trace."
msgstr "CPBG0: traza incorrecta."

#: ../src/compar.lisp:1802
msgid "DMARK: marking ~M ~M"
msgstr "DMARK: marcando ~M ~M"

#: ../src/asum.lisp:970
msgid "Function declared 'even' takes exactly one argument; found ~M"
msgstr "Función definida 'par' toma exactamente un argumento; tiene ~M"

#: ../src/asum.lisp:976
msgid "Function declared 'odd' takes exactly one argument; found ~M"
msgstr "Función definida 'impar' toma exactamente un argumento; tiene ~M"

#: ../src/algfac.lisp:178
#: ../src/algfac.lisp:186
msgid "GFSPLIT: unknown error."
msgstr "GFSPLIT: Error desconocido"

#: ../src/acall.lisp:229
msgid "INSURE-ARRAY-PROPS: array ~:@M already defined with different dimensions."
msgstr "INSURE-ARRAY-PROPS: El array ~:@M ya fue definido con distintas dimensiones."

#: ../src/asum.lisp:880
msgid "LINEARIZE3: undefined form 0*inf: ~M"
msgstr "LINEARIZE3: Forma indefinida 0*inf: ~M"

#: ../src/acall.lisp:151
msgid "LIST-REF: argument must be a list; found ~M"
msgstr "LIST-REF: el argumento debe ser una lista; encontré ~M"

#: ../src/acall.lisp:161
#: ../src/acall.lisp:168
msgid "LIST-REF: invalid subscript: ~M"
msgstr "LIST-REF: subíndice inválido: ~M"

#. BUG: It does have a number of dimensions! Gosh. -GJC
#: ../src/ar.lisp:109
msgid "MARRAY-CHECK: hashed array ~M has no dimension data."
msgstr "MARRAY-CHECK: el array hasheado ~M no tiene datos sobre su dimensión."

#: ../src/ar.lisp:112
msgid "MARRAY-CHECK: not an array: ~M"
msgstr "MARRAY-CHECK: no es un array: ~M"

#: ../src/ar.lisp:118
#, lisp-format
msgid "MARRAY-TYPE-UNKNOWN: array type ~S not recognized."
msgstr "MARRAY-TYPE-UNKNOWN: tipo del array ~S no fue reconocido."

#: ../src/acall.lisp:336
msgid "MARRAYREF1$: array must be an array of floats; found ~M"
msgstr "MARRAYREF1$: el array debe ser un array de floats; encontré ~M"

#: ../src/acall.lisp:92
msgid "MARRAYREF: cannot retrieve an element of ~M"
msgstr "MARRAYREF: no puedo obtener un elemento de ~M"

#: ../src/acall.lisp:76
#, lisp-format
msgid "MARRAYREF: encountered array pointer ~S of unknown type."
msgstr "MARRAYREF: encontré un puntero de array ~S de tipo desconocido."

#: ../src/acall.lisp:48
msgid "MARRAYREF: encountered array ~M of unknown type."
msgstr "MARRAYREF: encontré un array ~M de tipo desconocido."

#: ../src/acall.lisp:345
msgid "MARRAYSET1$: array must be an array of floats; found ~M"
msgstr "MARRAYSET1$: el array debe ser un array de flotas; encontré ~M"

#: ../src/acall.lisp:141
msgid "MARRAYSET: cannot assign to an element of ~M"
msgstr "MARRAYSET: no puedo asignar a un elemento de ~M"

#: ../src/acall.lisp:111
msgid "MARRAYSET: encountered array ~M of unknown type."
msgstr "MARRAYSET: encontré un array ~M de tipo desconocido."

#: ../src/acall.lisp:143
msgid "MARRAYSET: ~M is not an array."
msgstr "MARRAYSET: ~M no es un array."

#: ../src/csimp2.lisp:717
#, lisp-format
msgid "Solution:~%"
msgstr "Solución:~%"

#: ../src/compar.lisp:464
msgid "Unable to evaluate predicate ~M"
msgstr "No puedo evaluar el predicado ~M"

#: ../src/compar.lisp:110
msgid "activate: no such context ~:M"
msgstr "activate: no existe ese contexto ~:M"

#: ../src/comm2.lisp:653
msgid "addcol: first argument must be a matrix; found ~M"
msgstr "addcol: el primer argumento debe ser una matriz; encontré ~M"

#: ../src/comm2.lisp:660
msgid "addrow or addcol: argument must be a matrix or list; found ~M"
msgstr "addrow o addcol: el argumento debe ser una matriz o una lista; encontré ~M"

#: ../src/comm2.lisp:667
msgid "addrow or addcol: incompatible structure."
msgstr "addrow o addcol: estructura incompatible."

#: ../src/comm2.lisp:646
msgid "addrow: first argument must be a matrix; found ~M"
msgstr "addorw: el primer argumento debe ser una matriz; encontré ~M"

#: ../src/algsys.lisp:75
msgid "algsys: first argument must be a list; found ~M"
msgstr "algsys: el primer argumento debe ser una lista; encontré ~M"

#: ../src/algsys.lisp:77
msgid "algsys: second argument must be a list; found ~M"
msgstr "algsys: el segundo argumento debe ser una lista; encontré ~M"

#. SHOULD TRY TO BE MORE SPECIFIC: "TOO COMPLICATED" IN WHAT SENSE??
#: ../src/algsys.lisp:485
msgid "algsys: system too complicated; give up."
msgstr "algsys: el sistema es muy complicado; me rindo."

#: ../src/algsys.lisp:465
msgid "algsys: tried and failed to reduce system to a polynomial in one variable; give up."
msgstr "algsys: fallo al intentar reducir el sistema a un polinomio en una variable; me rindo."

#: ../src/algsys.lisp:98
msgid "algsys: variable cannot be a number; found ~M"
msgstr "algsys: la variable no puede ser un numero; encontré ~M"

#: ../src/cpoly.lisp:50
msgid "allroots: expected a polynomial in one variable; found variables ~M"
msgstr "allroots: esperaba un polinomio en una variable; encontré las variables ~M"

#: ../src/cpoly.lisp:173
msgid "allroots: expected a polynomial; found ~M"
msgstr "allrots: esperaba un polinomio; encontré ~M"

#: ../src/cpoly.lisp:126
msgid "allroots: no roots found."
msgstr "allrots: no encontré raíces."

#: ../src/cpoly.lisp:129
#, lisp-format
msgid "allroots: only ~S out of ~S roots found.~%"
msgstr "allrots: solo ~S de ~S raíces encontradas.~%"

#: ../src/cpoly.lisp:124
#, lisp-format
msgid "allroots: unexpected error; treat results with caution.~%"
msgstr "allrots: error inesperado; utilice los resultados con cuidado.~%"

#: ../src/comm.lisp:878
msgid "append: operators of arguments must all be the same."
msgstr "append: los operadores de los argumentos deben ser todos iguales."

#: ../src/acall.lisp:242
msgid "apply: second argument must be a list; found ~M"
msgstr "apply: el segundo argumento debe ser una lista; encontré ~M"

#: ../src/acall.lisp:96
msgid "arrayapply: second argument must be a list; found ~M"
msgstr "arrayapply: el segundo argumento debe ser una lista; encontré ~M"

#: ../src/comm2.lisp:705
msgid "arrayinfo: ~M is not an array."
msgstr "arrayinfo: ~M no es un array."

#: ../src/comm2.lisp:674
msgid "arraymake: second argument must be a list of one or more elements; found ~M"
msgstr "arraymake: el segundo argumento debe ser una lista de uno o más elementos; encontré ~M"

#: ../src/acall.lisp:101
msgid "arraysetapply: second argument must be a list; found ~M"
msgstr "arraysetapply: el segundo argumento debe ser una lista; encontré ~M"

#: ../src/compar.lisp:730
msgid "asksign: internal error."
msgstr "asksign: error interno."

#: ../src/compar.lisp:519
msgid "assume: argument cannot be a '#' expression; found ~M~%assume: maybe you want 'not equal'."
msgstr "assume: el argumento no puede ser una expresión '#'; encontré ~M~%assume: tal vez quieras utilizar 'not equal' ('distinto de')."

#: ../src/compar.lisp:517
msgid "assume: argument cannot be an '=' expression; found ~M~%assume: maybe you want 'equal'."
msgstr "assume: el argumento no puede ser una expresión '='; encontré ~M~%assume: tal vez quieras utilizar 'equal' ('igual')."

#: ../src/compar.lisp:515
msgid "assume: argument cannot be an 'or' expression; found ~M"
msgstr "assume: el argumento no puede ser una expresión 'or' ('o'); encontré ~M"

#. Unfortunately, we'll rarely get here.  For example,
#. assume(equal(x,0)) atan2(x,x) simplifies via the alike1 case above
#: ../src/comm2.lisp:410
#: ../src/comm2.lisp:454
msgid "atan2: atan2(0,0) is undefined."
msgstr "atan2: atan2(0,0) no está definido."

#: ../src/csimp2.lisp:158
msgid "beta: expected nonzero arguments; found ~M, ~M"
msgstr "beta: esperaba argumentos distintos de cero; encontré ~M, ~M"

#: ../src/cpoly.lisp:1287
msgid "bfallroots: expected a polynomial in one variable; found variables ~M"
msgstr "bfallroots: esperaba un polinomio en una variable; encontré las variables ~M"

#: ../src/cpoly.lisp:840
msgid "bfallroots: expected a polynomial; found ~M"
msgstr "bfallroots: esperaba un polinomio; encontré ~M"

#: ../src/cpoly.lisp:1374
msgid "bfallroots: no roots found."
msgstr "bfallroots: no encontré raíces."

#: ../src/cpoly.lisp:1377
#, lisp-format
msgid "bfallroots: only ~S out of ~S roots found.~%"
msgstr "bfallroots: solo ~S de las ~S raíces encontradas.~%"

#: ../src/cpoly.lisp:1372
#, lisp-format
msgid "bfallroots: unexpected error; treat results with caution.~%"
msgstr "bfallroots: error inesperado; utilice los resultados con precaución.~%"

#: ../src/buildq.lisp:189
msgid "buildq: 'splice' must return a list, but ~M returned: ~M~%"
msgstr "buildq: 'splice' debe retornar una lista, pero ~M retornó: ~M~%"

#: ../src/buildq.lisp:73
msgid "buildq: expected exactly two arguments; found ~M"
msgstr "buildq: esperaba exactamente dos argumentos; encontré ~M"

#: ../src/buildq.lisp:97
msgid "buildq: first argument must be a list; found ~M"
msgstr "buildq: el primer argumento debe ser una lista; encontré ~M"

#: ../src/buildq.lisp:106
msgid "buildq: variable must be a symbol or an assignment to a symbol; found ~M"
msgstr "buildq: la variable debe ser un símbolo o una asignación a un símbolo; encontré ~M"

#. A non integer
#: ../src/combin.lisp:827
msgid "cf: argument of sqrt must be an integer; found ~M"
msgstr "cf: el argumento de la raíz debe ser un entero; encontré ~M"

#: ../src/combin.lisp:684
msgid "cf: can't raise continued fraction to non-integral power ~M"
msgstr "cf: no puedo elevar una fracción continuada a una potencia no entera ~M"

#: ../src/combin.lisp:587
msgid "cf: continued fractions must be lists or integers; found ~M"
msgstr "cf: las fracciones continuadas deben ser listas o enteros; encontré ~M"

#: ../src/combin.lisp:628
#: ../src/combin.lisp:655
msgid "cf: ~:M is not a continued fraction."
msgstr "cf: ~:M no es una fracción continuada."

#: ../src/combin.lisp:568
msgid "cfdisrep: argument must be a list; found ~M"
msgstr "cfdisrep: el argumento debe ser una lista; encontré ~M"

#: ../src/csimp2.lisp:557
msgid "coefmatrix: variables cannot be '+' or '*' expressions; found ~M"
msgstr "coefmatrix: las variables no pueden ser expresiones '+' o '*'; encontré ~M"

#: ../src/comm2.lisp:787
msgid "concat: argument must be an atom; found ~M"
msgstr "concat: el argumento debe ser un átomo; encontré ~M"

#: ../src/comm2.lisp:785
msgid "concat: there must be at least one argument."
msgstr "concat: debe haber por lo menos un argumento."

#: ../src/comm2.lisp:636
msgid "copylist: argument must be a list; found ~M"
msgstr "copylist: el argumento debe ser una lista; encontré ~M"

#: ../src/comm2.lisp:631
msgid "copymatrix: argument must be a matrix; found ~M"
msgstr "copymatrix: el argumento debe ser una matriz; encontré ~M"

#: ../src/compar.lisp:121
msgid "deactivate: no such context ~:M"
msgstr "deactivate: no existe tal contexto ~:M"

#: ../src/compar.lisp:1944
msgid "declare: inconsistent declaration ~:M"
msgstr "declare: declaración inconsistente ~:M"

#: ../src/combin.lisp:1245
msgid "deftaylor: argument must be a power series at 0."
msgstr "deftaylor: el argumento debe ser una serie de potencias en 0."

#: ../src/combin.lisp:1227
msgid "deftaylor: don't know how to handle this function: ~M"
msgstr "deftaylor: no se como manejar esta función: ~M"

#: ../src/combin.lisp:1229
msgid "deftaylor: redefining ~:M.~%"
msgstr "deftaylor: redefiniendo ~:M.~%"

#. if n is set, it must be a nonneg fixnum
#: ../src/comm.lisp:964
msgid "delete: third argument, if present, must be a nonnegative integer; found ~M"
msgstr "delete: el tercer argumento, si está presente, debe ser un entero no negativo; encontré ~M"

#: ../src/csimp.lisp:56
msgid "demoivre: 'demoivre' and 'exponentialize' cannot both be true."
msgstr "demoivre: 'demoivre' y 'exponentialize' no pueden ser ambos verdaderos."

#: ../src/comm.lisp:254
msgid "depends: argument cannot be a subscripted expression; found ~M"
msgstr "depends: el argumento no puede ser una expresión con subíndices; encontré ~M"

#: ../src/comm.lisp:252
msgid "depends: argument must be a non-atomic expression; found ~M"
msgstr "depends: el argumento debe ser una expresión no-atómica; encontré ~M"

#: ../src/comm.lisp:235
msgid "depends: number of arguments must be even."
msgstr "depends: el número de los argumentos debe ser par."

#: ../src/comm.lisp:318
msgid "diff: order of derivative must be a nonnegative integer; found ~M"
msgstr "diff: el orden de la derivada debe ser un entero no negativo; encontré ~M"

#: ../src/comm.lisp:660
msgid "dispform: second argument, if present, must be 'all'; found ~M"
msgstr "dispform: el segundo argumento, si está presente, debe ser 'all' ('todo'); encontré ~M"

#: ../src/csimp2.lisp:531
msgid "ematrix: arguments must be positive integers; found ~M"
msgstr "ematrix: los argumentos deben ser enteros positivos; encontré ~M"

#: ../src/csimp2.lisp:577
msgid "entermatrix: arguments must be integers; found ~M, ~M"
msgstr "entermatrix: los argumentos deben ser enteros; encontré ~M, ~M"

#. Negative integer or a real representation of a negative integer.
#: ../src/asum.lisp:112
msgid "factorial: factorial of negative integer ~:M not defined."
msgstr "factorial: el factorial de un entero negativo ~:M no está definido."

#: ../src/compar.lisp:1560
msgid "featurep: second argument must be a symbol; found ~M"
msgstr "featurep: el segundo argumento debe ser un símbolo; encontré ~M"

#: ../src/comm.lisp:902
msgid "first: empty argument."
msgstr "first: argumento vacío."

#: ../src/compar.lisp:559
msgid "forget: argument cannot be an 'or' expression; found ~M"
msgstr "forget: el argumento no puede ser una expresión 'or' ('o'); encontré ~M"

#: ../src/csimp2.lisp:298
#: ../src/csimp2.lisp:304
#: ../src/csimp2.lisp:346
msgid "gamma: gamma(~:M) is undefined."
msgstr "gamma: gamma(~:M) no está definido."

#. No result. Overflow.
#. Result, but beyond extreme values. Overflow.
#: ../src/csimp2.lisp:467
#: ../src/csimp2.lisp:471
msgid "gamma: overflow in GAMMA-LANCZOS."
msgstr "gamma: overflow en GAMMA-LANCZOS."

#: ../src/csimp2.lisp:492
msgid "gamma: overflow in GAMMAFLOAT."
msgstr "gamma: overflow en GAMMAFLOAT."

#: ../src/asum.lisp:361
msgid "genfact: generalized factorial not defined for given arguments."
msgstr "genfact: el factorial generalizado no esta definido para los argumentos dados."

#: ../src/comm2.lisp:610
msgid "genmatrix: bounds must be integers; found ~M, ~M, ~M, ~M"
msgstr "genmatrix: los límites deben ser enteros; encontré ~M, ~M, ~M, ~M"

#: ../src/comm2.lisp:613
msgid "genmatrix: upper bounds must be greater than or equal to lower bounds; found ~M, ~M, ~M, ~M"
msgstr "genmatrix: los límites superiores deben ser mayores o iguales a los límites inferiores; encontré ~M, ~M, ~M, ~M"

#: ../src/comm.lisp:277
msgid "gradef: argument cannot be a built-in operator or subscripted expression; found ~M"
msgstr "gradef: el argumento no puede ser un operador intrínseco ('built-in') o una expresión con subíndice; encontré ~M"

#: ../src/comm.lisp:282
msgid "gradef: argument must be a symbol; found ~M"
msgstr "gradef: el argumento debe ser un símbolo; encontré ~M"

#: ../src/comm.lisp:268
msgid "gradef: expected exactly three arguments."
msgstr "gradef: esperaba exactamente tres argumentos."

#: ../src/compar.lisp:220
msgid "killcontext: context ~M is currently active."
msgstr "killcontext: el contexto ~M está activo ahora."

#: ../src/compar.lisp:213
msgid "killcontext: no such context ~M."
msgstr "killcontext: no existe el contexto ~M."

#: ../src/comm.lisp:955
msgid "last: empty argument."
msgstr "last: argumento vacío."

#: ../src/comm.lisp:984
msgid "length: argument cannot be a number; found ~:M"
msgstr "length: el argumento no puede ser un número; encontré ~:M"

#: ../src/comm.lisp:980
msgid "length: argument cannot be a symbol; found ~:M"
msgstr "length: el argumento no puede ser un símbolo; encontré ~:M"

#: ../src/asum.lisp:430
msgid "lsum: second argument must be a variable; found ~M"
msgstr "lsum: el segundo argumento debe ser una variable; encontré ~M"

#: ../src/ar.lisp:68
msgid "make_array: array type ~M not recognized."
msgstr "make_array: el array de tipo ~M no fue reconocido."

#: ../src/ar.lisp:39
msgid "make_array: dimensions must be integers; found ~M"
msgstr "make_array: las dimensiones deben ser enteros; encontré ~M"

#: ../src/ar.lisp:52
msgid "make_array: not enough arguments for functional array specification."
msgstr "make_array: no hay suficientes argumentos para la especificación de un array funcional."

#: ../src/ar.lisp:47
msgid "make_array: number of dimensions must be an integer; found ~M"
msgstr "make_array: el número de dimensiones debe ser un entero; encontré ~M"

#: ../src/compar.lisp:166
msgid "newcontext: context ~M already exists."
msgstr "newcontext: el contexto ~M ya existe."

#: ../src/comm2.lisp:479
msgid "numerval: cannot declare a value because ~M is bound."
msgstr "numerval: no puedo declarar un valor porque ~M no esta asociado."

#: ../src/comm2.lisp:477
msgid "numerval: expected a symbol; found ~M"
msgstr "numerval: esperaba un símbolo; encontré ~M"

#: ../src/comm2.lisp:475
msgid "numerval: expected an even number of arguments."
msgstr "numerval: esperaba una cantidad par de argumentos."

#: ../src/comm2.lisp:757
msgid "ordergreat: reordering is not allowed."
msgstr "ordergreat: el reordenamiento no está permitido"

#: ../src/comm2.lisp:761
msgid "orderless: reordering is not allowed."
msgstr "orderless: el reordenamiento no está permitido."

#: ../src/comm.lisp:786
msgid "part: invalid index of list or matrix."
msgstr "part: índice inválido de una lista o matriz."

#: ../src/csimp.lisp:85
msgid "partition: first argument must be a list or '+' or '*' expression; found ~M"
msgstr "partition: el primer argumento debe ser una lista o una expresión '+' o '*'; encontré ~M"

#: ../src/csimp2.lisp:59
msgid "plog(0) is undefined."
msgstr "plog(0) no está definido."

#: ../src/csimp2.lisp:77
#: ../src/csimp2.lisp:83
msgid "plog: encountered atan(0/0)."
msgstr "plog: encontré un atan(0/0)."

#: ../src/csimp2.lisp:31
#: ../src/csimp2.lisp:55
msgid "plog: plog(0) is undefined."
msgstr "plog: plog(0) no está definido."

#: ../src/combin.lisp:1265
msgid "polydecomp: cannot apply 'polydecomp' to a rational function."
msgstr "polydecomp: no puedo aplicar 'polydecomp' a una función racional."

#: ../src/combin.lisp:1259
msgid "polydecomp: second argument must be an atom; found ~M"
msgstr "polydecomp: el segundo argumento debe ser un átomo; encontré ~M"

#: ../src/combin.lisp:1160
msgid "product: expected exactly four arguments."
msgstr "product: esperaba exactamente cuatro argumentos."

#: ../src/asum.lisp:698
msgid "product: index must be a symbol; found ~M"
msgstr "product: el índice debe ser un símbolo; encontré ~M"

#: ../src/asum.lisp:705
msgid "product: lower bound ~M greater than upper bound ~M"
msgstr "product: el extremo inferior ~M es mayor que el extremo superior ~M"

#: ../src/comm.lisp:938
msgid "rest: fell off the end."
msgstr "rest: se salió del final."

#: ../src/comm.lisp:932
msgid "rest: second argument, if present, must be an integer; found ~M"
msgstr "rest: el segundo argumento, si esta presente, debe ser un entero; encontré ~M"

#: ../src/comm2.lisp:552
msgid "scanmap: cannot apply 'rat'."
msgstr "scanmap: no puedo aplicar 'rat'."

#: ../src/comm2.lisp:555
msgid "scanmap: third argument must be 'bottomup', if present; found ~M"
msgstr "scanmap: el tercer argumento debe ser 'bottomup' ('del fondo hacia arriba'), si esta presente; encontré ~M"

#: ../src/compar.lisp:759
msgid "sign or asksign: insufficient data."
msgstr "sign o asksign: datos insuficientes."

#: ../src/compar.lisp:750
msgid "sign or asksign: insufficient information."
msgstr "sign o asksign: información insuficiente."

#: ../src/compar.lisp:1538
msgid "sign: argument cannot be imaginary; found ~M"
msgstr "sign: el argumento no puede ser imaginario; encontré ~M"

#: ../src/compar.lisp:1542
msgid "sign: division by zero in ~M"
msgstr "sign: división por cero en ~M"

#: ../src/compar.lisp:1055
msgid "sign: sign of ~:M is undefined."
msgstr "sign: el signo de ~:M no esta definido."

#. if the expression is a legal SPLICE, this clause is taken.
#. a SPLICE should never occur here.  It corresponds to `,@form
#: ../src/buildq.lisp:128
msgid "splice: encountered 'splice' in an unexpected place: ~M"
msgstr "splice: encontré 'splice' en un lugar inesperado: ~M"

#: ../src/comm.lisp:148
msgid "subst: cannot substitute ~M for operator ~M in expression ~M"
msgstr "subst: no puedo substituir ~M por el operador ~M en la expresión ~M"

#: ../src/asum.lisp:451
msgid "sum: index must be a symbol; found ~M"
msgstr "sum: el índice ha de ser un símbolo; encontré ~M"

#: ../src/combin.lisp:907
msgid "sum: lower bound ~M greater than upper bound ~M"
msgstr "sum: el extremo inferior ~M es mayor que el extremo superior ~M"

#: ../src/combin.lisp:960
msgid "sum: sum is divergent."
msgstr "sum: la suma es divergente."

#: ../src/compar.lisp:182
msgid "supcontext: context ~M already exists."
msgstr "supcontext: el contexto ~M ya existe."

#: ../src/compar.lisp:179
msgid "supcontext: expected one or two arguments; found more than two."
msgstr "supcontext: esperaba uno o dos argumentos; encontré más de dos."

#: ../src/compar.lisp:178
msgid "supcontext: expected one or two arguments; found none."
msgstr "supcontext: esperaba uno o dos argumentos; no encontré ninguno:"

#: ../src/compar.lisp:184
msgid "supcontext: no such context ~M"
msgstr "supcontext: no existe tal contexto ~M"

#: ../src/comm.lisp:730
#: ../src/comm.lisp:741
msgid "~:M: argument cannot be a number; found ~M"
msgstr "~:M: el argumento no puede ser un número; encontré ~M"

#: ../src/comm.lisp:721
msgid "~:M: argument must be a non-atomic expression; found ~:M"
msgstr "~:M: el argumento debe ser una expresión no-atómica; encontré ~:M"

#: ../src/comm.lisp:766
#: ../src/comm.lisp:800
msgid "~:M: argument must be an integer; found ~M"
msgstr "~:M: el argumento debe ser un entero; encontré ~M"

#: ../src/comm.lisp:434
msgid "~:M: expected exactly ~M arguments."
msgstr "~:M: esperaba exactamente ~M argumentos."

#: ../src/comm.lisp:788
msgid "~:M: fell off the end."
msgstr "~:M: se salió del final."

#: ../src/asum.lisp:489
#: ../src/asum.lisp:560
msgid "~:M: index must be a symbol; found ~M"
msgstr "~:M: el índice debe ser un símbolo; encontré ~M"

#: ../src/comm.lisp:808
msgid "~:M: index must be in range 1 to ~M, inclusive; found ~M"
msgstr "~:M: el índice debe estar en el rango 1 a ~M, inclusive; encontré ~M"

#. NOT CLEAR WHAT IS INVALID HERE. OH WELL.
#: ../src/comm.lisp:735
msgid "~:M: invalid operator."
msgstr "~:M: operador inválido."

#: ../src/comm.lisp:913
msgid "~:M: no such element in ~M"
msgstr "~:M: no existe tal elemento en ~M"

#: ../src/comm.lisp:588
msgid "~:M: second argument must be a variable; found ~M"
msgstr "~:M: el segundo argumento debe ser una variable; encontré ~M"

#: ../src/comm.lisp:893
msgid "~:M: ~Margument must be a non-atomic expression; found ~M"
msgstr "~:M: el argumento ~M debe ser una expresión no-atómica; encontré ~M"

#: ../src/acall.lisp:28
msgid "~@:M: lower bound ~M is greater than upper bound ~M"
msgstr "~@:M: el límite inferior ~M es mayor que el límite superior ~M"

#: ../src/compar.lisp:234
msgid "~M: context name must be a symbol; found ~M"
msgstr "~M: el nombre del contexto debe ser un símbolo; encontré ~M"

