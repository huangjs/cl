(defmop m-question (m-root))

(defmop m-how-many-q (m-question)
  :item m-root)

(definstance i-m-how-many-pm-q (m-how-many-q)
  :item i-m-all-professional-mathematician-set)

(defmop m-question-answer (m-root)
  :question m-question)

(definstance i-m-hmpm-q-a (m-question-answer)
  :question i-m-how-many-pm-q 
  :answer 22000
  :source "ams page")

(defmop m-person (m-root))
(defmop m-professional-mathematician (m-person))


(defmop m-set (m-root)
  :size nil
  :member m-root)

(defmop m-person-set (m-set)
  :member m-person)

(defmop m-professional-mathematician-set
  (m-person-set)
  :member m-professional-mathematician
  )

(definstance i-m-all-professional-mathematician-set
  (m-professional-mathematician-set))


(defphrase m-professional-mathematician
  professional mathematician)

(defphrase m-professional-mathematician
  employed mathematician)

(defphrase m-professional-mathematician-set
  professional mathematicians)

;;; be nice if we could write it something like this:
;;;
;;; (defphrase m-set (plural-form (:member)))

(defphrase m-how-many-q how many (:item) are there)